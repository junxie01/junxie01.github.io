<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>寂寞</title>
    <url>/%E5%AF%82%E5%AF%9E.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;一只小鼠死了,我很伤心.当听知他的死时,我差点落泪,但是泪水只在眼里转了一转,并没有流下来.我不懂我是怎么了?难到我的良心已在这浊世当中损失殆尽？还是我堕落了？</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>这是啥</tag>
      </tags>
  </entry>
  <entry>
    <title>阿甘</title>
    <url>/%E9%98%BF%E7%94%98.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;记得第一次看阿甘正传时，我流泪了！</p>
<p>&emsp;&emsp;阿甘的妈妈临死前，对阿甘说的话我开始觉得奇怪，同学告诉我说：她是用她自己的语言来让她的儿子明白……</p>
<p>&emsp;&emsp;阿甘的妻子死的时候，她问阿甘跑步都看到了什么？阿甘说看到了美丽的山谷，看到了平静的湖水，看到了天地相接……她说要是她也在就好了！阿甘说：You were!（你一直和我在一起）</p>
<p>&emsp;&emsp;虽说我也和阿甘一样笨，但却没有他那样的运气！</p>
<p>&emsp;&emsp;运气？</p>
<p>&emsp;&emsp;哈！</p>
<p>&emsp;&emsp;世上哪儿来的运气？</p>
<p>&emsp;&emsp;究其原因，阿甘并不是靠运气，而是靠一颗执著的心！我不能把他的心移植到我的胸腔内。但是我拥有我自己的心！</p>
<p>&emsp;&emsp;相信执著的我也会像阿甘一样在人生的路上走得更远！</p>
<p>&emsp;&emsp;加油啊！</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>阿甘</tag>
      </tags>
  </entry>
  <entry>
    <title>好快刀</title>
    <url>/%E5%A5%BD%E5%BF%AB%E5%88%80.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;在我还没有来得及目送最后一屡夕晖之前，夜已悄悄的笼罩下来。从地底下蒸出的水汽弥散开来，烟雾弥漫的街道像是通往地府的黄泉路。路上行人不多，偶尔路过一个，像是久死的干尸，摇摇晃晃地往地府赶去。只有几只青蛙的叫声证明这还是人间。 </p>
<p>&emsp;&emsp;我坐在铺子中间，张开双腿，裤管挽得老高。胸口敞开，露出清晰可数的肋骨。一手抚着脖子上的粗汗，一手拼命的舞着扇子，来不及诅咒这可恶的天气。 </p>
<p>&emsp;&emsp;妻子在后屋准备晚饭。我的任务就是守着案板前挂着的几片剩肉，希望那个好心人尽快把它买走，然后好好泡个澡。几只苍蝇来回飞舞，目标就是那几片快干掉的肉，但它们却迟迟不肯动手。我也没有心思去赶它们，况且它们也该心烦了，我想。案板上横卧着一把大菜刀，上面蒙了一层油。整个肉店就数它最显眼，最安静，似乎有什么大任务正等着它做。 </p>
<p>&emsp;&emsp;“相公，救命啊……放……开我……”突然，妻子的尖叫声夹杂着一个男人的声音从后院传来把一切喧哗都暂停了，我的心也停止了跳动。一股寒意从头窜遍全身，扇子无声的落下。几秒钟的失魂之后，我跳出了椅子，冲到案前抓起菜刀，奔后院而来。我的脚步很沉，脑子里什么都没有，又什么可怕的情形都有，手中的刀握得格外的紧，像沉重的放不下的担子。 </p>
<p>&emsp;&emsp;一个秃头胖大男人正压在拼命挣扎的妻子身上。一股自骨髓的愤怒喷涌而出：“住手…………”屋子和院子颤抖着，那是一只凶猛的野兽发出的吼声。时间暂停了，一股冷汗浸透了我的背。 </p>
<p>&emsp;&emsp;胖大男人似乎吃了一惊，停止了手中的工作，抬头来看看到底是谁在冲自己咆哮。衣衫不整的妻子趁这个机会挣脱开来，哭丧着躲在我的身后。我定眼一看，不是别人，正是徐三霸那无恶不作的恶棍。人人都受他欺压，又怕他，没有人敢跟他斗，因为与他作对的人都没有好下场。我早想惩治他，只恐于力量不足。 </p>
<p>&emsp;&emsp;他缓慢的站起来，整了整衣角。两只虎眼死盯着坏他好事的我。我心一惊：平时见他只觉他很壮硕，今天近些看，只怕再多几个我也敌他不过。 </p>
<p>&emsp;&emsp;他慢慢向我走过来。“你要干什么？”我举起手中的刀，颤抖着。我的衣服湿透了，豆大的汗珠往外直冒。“想和你老婆玩儿玩儿。”他的嘴角露出奸淫的笑。说完，便立在了我面前，犹如一只猎食的巨兽。突然，他一手擒住我拿刀的手，只一扔，我和刀一起飞到了花坛边，重重的砸在了地上。我没有听到有没有骨碎的的声音，只听到受惊的妻子发出的尖叫声。我的头有些眩晕。我看到那只野兽又扑向了妻子。我四周摸了摸，摸到了菜刀，抓了起来，冲向那只野兽。谁知他早有防备，背着我只一脚，正中我的肚子，菜刀和我又飞了出去。肚子上一阵剧痛。手脚都没有了力气，丝毫不能动弹。我几乎晕过去了。隐隐约约，我看到了妻子的令人心生怜爱的面容，听到了妻子欢乐的笑声。几年来妻子总是无怨无悔的跟着我这个毫无成就的屠夫，不管我做什么妻子总是积极支持。在我失落时，她会与我分担烦恼给我万分的安慰，在我穷困时，她总是想尽办法来帮助我。妻子对我太好了，给我的太多了，而我却不懂得珍惜，从来没有给过妻子什么，也没有好好的代过她。而如今…… </p>
<p>&emsp;&emsp;妻子的尖叫声再次把我惊醒。不知哪里来的力量，我挣扎地爬起来，找回了那把祖传的菜刀。我又想起了父亲。是他苦口婆心的教导我，教我如何做人，还教了我祖传的刀法。不管我选择哪条路都由我自己走，他说。而我总是与他作对，而此时我决定作屠夫，这是父亲的宿愿。我踩着祖传的步法，快速靠近他，刀光一闪。空气静谧了，妻子也安静了。只见徐三霸的头从脖子上滑落到地上，滚动着，边滚嘴里边说：“好快刀，好……快刀……”随后，他的身子也慢慢的倒下，血飞溅了一地。手中得刀落在了地上，我全身瘫软地倒下了，全身冒着冷汗，脑子里一片空白。妻子抽泣着爬到我的身边。我们俩拥在了一块儿。“没事了，一切都好了，他死了……”我安慰着妻子。“死了……”我突然才意识到。“我杀人了，我杀人了……” </p>
<p>&emsp;&emsp;“你醒醒，你醒醒……”床头妻子把我摇醒。 </p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>去他的</title>
    <url>/%E5%8E%BB%E4%BB%96%E7%9A%84.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;不要再一而再再而三地指导我做什么，尤其是在显而易见的情况下。搞不清楚是你唠叨还是因为你的唠叨让我觉得自己很笨。管它的呢，你唠叨并不代表我不知道，你唠叨并不一定我要听，你唠叨并不代表我很笨，嗨！去他的。就算我很笨，那又怎么样，只要活得开心！至于我真的不知道的东西，你放心我一定会听的。所以你唠叨我会装着听的，决不反驳，乖吧^_^</p>
<p>&emsp;&emsp;不要再为无聊的，无伤和气的东东发脾气。发脾气有什么用呢？答案：1，那些东东不会因发脾气而消失，所以发脾气没有用。2，发脾气代表自己不顺心，不顺心没准心血管都会堵塞，伤身体啊！所以为什么要生气呢！如果真的要生气，那就先从一数到100000吧！去他的，活得开心就好！</p>
<p>&emsp;&emsp;不要再胆怯。真好笑，看到他（她）为什么会结巴得说不出话，他又不会把你给吃了，就算他是食人族的那又怎么样，你又没有被绑起来！去他的，只要他说什么做什么没有伤害到你。活得开心就好。</p>
<p>&emsp;&emsp;不要在我面前摆出一幅郁闷的表情，就是像我借了你的钱很久没有还的样子一样。虽然我是心理委员，不过现在才发现不及格。如果我心情好的话还是会帮你一点小忙，去？那伤心事。不要告诉我你的郁闷的表情不是因为伤心事，否则我无能为力。如果我的心情一般，见到了你恐怕我会比你还郁闷。不过请放心我不会比你还郁闷。人生郁闷是一天，开心也是一天，我干嘛要郁闷？</p>
<p>&emsp;&emsp;如果你不是我的好朋友但和我关系又不一般，如果有一件开心的事要告诉我，如果这件开心的事和我无关，如果这件事只是你的开心事，请先考虑一下再告诉我，因为我没法控制我的脸使其与我的心情相违背，那叫喜怒不形于色，我是怕你看见我不知怎么开心的焦灼的脸而情绪低落。</p>
<p>&emsp;&emsp;不要全部相信我上面写的东西，因为我的手与我的心有时是不一致的，去他的，看了我的日志千万不要伤心^_^</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>外婆外公的故事</title>
    <url>/%E5%A4%96%E5%A9%86%E5%A4%96%E5%85%AC%E7%9A%84%E6%95%85%E4%BA%8B.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="大面的由来"><a href="#大面的由来" class="headerlink" title="大面的由来"></a>大面的由来</h2><p>&emsp;&emsp;我们所在的那个镇叫做大面铺。外公外婆几十年来几乎没有离开那个镇上百里。</p>
<p>&emsp;&emsp;外公，大面铺为什么叫大面铺。外公说，大面铺以前并不叫大面铺，而叫倒面铺。于是故事就来了：</p>
<p>&emsp;&emsp;很久很久以前，外公也不知道那是什么时候，鲁班和长腿大仙一同修建长东寺。一天，他们两都觉得无聊，于是想出一个消磨时间的比赛。比试看是鲁班先做好一张椅子，还是长腿大仙先从面粉厂挑回一担面粉。比赛开始。鲁班用纯熟的手艺开始砍木头,长腿大仙就更快了。只见他挑上担子只一步就跨到了界牌铺，第二步就跨到了洪门铺，第三步就到了面粉厂了。长腿大仙迅速装好面粉准备往回走。当他刚往回迈出第一步时，鲁班的椅子一半都还没有做好。聪明的鲁班料想这回输定了，于是将他的墨线悄悄地伸出去只一弹，长腿大仙一个跟斗就摔倒在了洪门铺与面粉厂中间的一块儿地上，面粉撒了一地。长腿大仙不得不爬起来重新回到面粉厂装面粉。等到他往回跨第一步时又被鲁班的墨线给弹摔倒了。如此，几番折腾，最后当长腿大仙回到长东寺时，鲁班也刚好做好椅子。于是两人打了个平手。长腿大仙摔倒的地方撒了一地的面粉，于是那块地方就被叫做倒面铺。后来又不知不觉地变成了大面铺。外公低下头继续弄他的东西……</p>
<h2 id="鲁班的墨"><a href="#鲁班的墨" class="headerlink" title="鲁班的墨"></a>鲁班的墨</h2><p>&emsp;&emsp;外公，鲁班的墨线怎么这么厉害。当然厉害了。鲁班破木头从来都不用锯子或斧头，他就用墨线那么一弹，木头就齐齐地成了两半。他的墨是特制的，非得要用那山上的泉水兑，才能弹得动木头。有一天鲁班的墨用完了，于是叫他的徒弟上山打泉水调制墨。徒弟懒，不愿上山，于是撒了一泡尿来兑墨。鲁班用调好的墨弹木头，可是不管怎么弹木头都没有动静。鲁班于是就发现了问题，问他的徒弟，你这水是从山上打的吗？外公脸上露出了婴儿般的笑容……</p>
<h2 id="竹皇"><a href="#竹皇" class="headerlink" title="竹皇"></a>竹皇</h2><p>&emsp;&emsp;外婆说，有一天她到外面倒垃圾。只听见对面一条竹子发出唧唧咋咋的怪叫，还在不停的摆动。我说，那应该是竹子上面有一只鸟或者什么的吧？不是，我确定不是，我走近了看，没有看到有鸟，我用绳子作了记号，然后就跑回家叫你外公来看是怎么回事。你外公说我好傻。他说那是竹皇，是竹子中的黄帝，有灵性的，发现他以后就应该立刻砍下来，入药，大补。你现在才来叫我有什么用，他已经跑了。后来去看，我做记号的那根竹子果真不叫了。外婆一副无辜的样子……</p>
<h2 id="金鹅"><a href="#金鹅" class="headerlink" title="金鹅"></a>金鹅</h2><p>&emsp;&emsp;说到有灵性的东西就是以前我给你讲过的金鹅了，外婆说。我听他们讲，有一天一个人到荷塘里面打水，每次他用水桶去舀水，都有一只鹅子跳到他的桶里面，最后他不耐烦了，于是就把那只鹅抓了起来，这才发现是一只金鹅子，于是那个人就发财了。那是该那个人发财啊，别人的水桶它怎么不去窜呢？偏偏跑到他的桶里面。你见过金鹅吗？没有，我都是听他们讲的。你外公倒是见到过。那一年我们都到邻居家看电视去了，你外公一个人坐在院子里。你知道的以前我们家养过鹅的，就在里屋的巷子里。这时你外公就看到门口蹲了一只鹅，你也知道，你外公的眼神不好，他看到一团白色，想肯定是鹅子跑出来了。于是就对着鹅子叫：你还不回去！过了一会儿鹅子就不见了。回到小巷子里，发现鹅子都在，那有跑出来？要是你外公眼神好走过去就把它抱起来，要是你外公不说那句话而是直接去抱它，要是……我们家早就发财了……外婆露出了开朗的笑声……</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>外公</tag>
        <tag>外婆</tag>
      </tags>
  </entry>
  <entry>
    <title>南京大屠杀</title>
    <url>/%E5%8D%97%E4%BA%AC%E5%A4%A7%E5%B1%A0%E6%9D%80.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;今天是南京大屠杀七十周年纪念日。</p>
<p>&emsp;&emsp;大礼堂播放了南京大屠杀的纪录片。我回到了那个恐怖时代，目睹了令人发指的自以为高级的人类的兽行。不管某些个日本人承不承认，那都是一段令所有中国人应该铭记的淌血的历史。</p>
<p>&emsp;&emsp;如果有时间机器，我真想回到那个时代，首先把裕仁给爆头了。要是能够杀掉一个人来改变这段历史的话，应该就是杀他了。但是杀了他，日本的纳粹思想就能够改变吗？而且如果杀了他，我不就成了没有人性的人了？况且时间机器是暂时没有可能造好的了。</p>
<p>&emsp;&emsp;不管怎么样，这都是一段改变不了的真实的历史。也不要只记住的是仇恨。</p>
<p>&emsp;&emsp;铭记历史，振奋自我，超越自我；同时应该记住我们还是人。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>星期五</title>
    <url>/%E6%98%9F%E6%9C%9F%E4%BA%94.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;好久没有坐过电梯了，今天，腿实在疼的不行了，所以还是坐电梯了。</p>
<p>&emsp;&emsp;地毯上写着星期五。</p>
<p>&emsp;&emsp;看到星期五就想到了：鲁宾逊漂流记，黑色星期五，今晚有电影，今晚12点才熄灯，今晚算是周末的开始了，今晚会玩游戏，会玩到很晚，今天是十五，月亮很圆，今天是小姑的生日。</p>
<p>&emsp;&emsp;不过最重要的是：快要毕业了。</p>
<p>&emsp;&emsp;可是似乎我还有好多大学应该做的事没有做：谈恋爱，在网吧包夜打游戏，找份兼职做，打打架……</p>
<p>&emsp;&emsp;前天健身了，很累，晚上感冒了，现在全身都没有力，感觉好没有动力和意义。忽然又想起刚才和老妈打电话。我提到了跳楼的家伙，老妈火了，说道，傻帽，人生这么美好，跳楼？是不是那根筋搭错了？</p>
<p>&emsp;&emsp;对啊，接着玩，玩到有力气为止</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>The City of Life and Death</title>
    <url>/the-city-of-life-and-death.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;13日看的《南京！南京》，不知道为什么把南京的名字叫两遍，可能是因为历史的厚重，提到南京就令人想起令人悲痛的往事，1937年12月13日，南京沦陷。</p>
<p>&emsp;&emsp;先说影片吧！</p>
<p>&emsp;&emsp;颜色，黑白。看不见绚丽的颜色，天空没有颜色，花草没有颜色，房屋没有颜色，人也没有颜色，展现一种绝望与黑暗的感觉。也许是为了体现历史的沉重感。</p>
<p>&emsp;&emsp;第一场枪战。没有血肉模糊，片中连一滴血都看不到，当然这不是一部体现战争残酷的战争片，也不是体现男子气概的动作片。没有突出的战斗策略，不像《拯救大兵瑞恩》那么有条有理，有细节，有的只是一片混战，展现的是南京最后一股反抗的力量，当然这给了我们一丝希望。这最后一股反抗力量居然打赢了敌人的先头小部队。《拯救》最后赶来增援的是的正义方（那边是正义？）而这部影片里最后来的确是敌人的增援。先给人以一线希望，然后令这个希望坠落万丈深渊，我们知道，从现在起，悲剧就已经开始。</p>
<p>&emsp;&emsp;枪杀。日本兵准备枪杀所有的俘虏。用不流利的中文命令俘虏“起立”，“向后转”，”向前走“……走向刑场。被俘的民众唯命是从，任人宰割，当然他们有的只是对于生命的一点点渴望。被俘的军人开始从不听从日本兵的命令，有的是军人的尊严，与身为中国人的骨气。后来又纷纷起身走向刑场，体现军人的不怕死的牺牲精神。（不过两个衔接上是不是有点问题？）</p>
<p>&emsp;&emsp;打麻将。难民区外面是枪声战火，里面却安安心心地挫起了麻将，是麻木了吗？还是根本就是事不关己，心安理得小市民思想？</p>
<p>&emsp;&emsp;理发。为了不让自己被强暴，女子被迫理成短发假扮男子。其中一个妓女居然口口声声说为以后的生计而拒绝理发。麻木的小市民啊……</p>
<p>&emsp;&emsp;强暴。整部片子大部分的描写用在了强暴上。（我不知道这是为何，是为了契合其中一个日本慰安妇，还是如今女权问题成了时事？）</p>
<p>&emsp;&emsp;场景。我说的是背景，地点。有成为废墟的南京城，教堂里，街上，屋子里（不知那里的屋子里，我的意思是没有流动，蒙太奇手法也许可以弥补。），南京难民区，刑场，一条无尽的两边开满花的路。</p>
<p>&emsp;&emsp;人物。刘烨演的军人，是最后一股反抗力量，是军人的代表。被俘，要被枪杀时，他第一个起身，走向刑场。高圆圆演的姜老师，还有作为人的爱心，怜悯心，尊严。范伟演的唐先生，有小市民的自保思想，也有作为中国人的骨气，与人性。中泉英雄演的角川，自始至终只杀过两个人，一个是姜老师，一个是自己。杀姜老师是为了保住姜老师的尊严，成全姜老师。自杀是不堪忍受生活在人间却如同置身炼狱。角川是日本兵中唯一一个还保留有人性的人，是看清了真实的人，其他日本兵的人性都是麻木的，兽性袒露无遗。角川这个角色我感觉是一个突破，不能说影片对角川这样的人有多么的赞扬，但确实是以前此类电影所没有的。但是，影片里面似乎又无形的将（也许他本来没有，只是我们臆想。）角川与其他日本兵对比，将角川与中国的小市民对比。百合子，同许多被日本兵拉去逼迫做慰安妇的女人一样，也是被折磨致死。也是一种对比，我们可以看到，日本兵的麻木与兽性所达到的程度，总之是没有留丝毫的人性，就算是自己的国人又如何。顺子，也是和刘烨一起的军人，但是他在刑场上活了下来。这个人我不懂，从军人沦落到小市民，丧失了血性，后来成了只为求生，甚至向姜老师求救，间接害了姜老师，最后角川放了小孩和顺子，顺子脸上居然笑开了花，我不懂，我很不懂。群众演员，也许是因为面对一个沉重的历史，每个人都很投入，都很传神，完全不同于以往的其他内地片子。</p>
<p>&emsp;&emsp; 两年前看过南京大屠杀的纪录片，义愤填膺，如今又看了拍的影片居然没有过多的想法。难道是我麻木了？</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/%E6%97%A0%E9%A2%98.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;很难描述这几日的天气怎样，事实上无论外面的天气如何与我无干。</p>
<p>&emsp;&emsp;出门的时候我也没有翻皇历，因为我没有皇历可翻。</p>
<p>&emsp;&emsp;不管是天气还是皇历，所有事情只有了人的意识的参与才会有意义。</p>
<p>&emsp;&emsp;当然我不是说我的意识在飘散。而是我的心情很乱。</p>
<p>&emsp;&emsp;我睡在实验室，不太想回那熟悉而又陌生的宿舍。但我又不能在实验室睡得太懒，我不想把我“可爱”的睡姿展现给大家。所以我还是决定回到宿舍小憩。</p>
<p>&emsp;&emsp;我熟练地掏出钥匙串，在其中捡出开挂锁的那一把。虽然开过无数次们，但是我还是弄错了，我挑出的那把与挂锁钥匙很像，却不是。那把是四年前初到学校时留在我的书桌上的钥匙。</p>
<p>&emsp;&emsp;我幻想过这把钥匙的各种幻想，也许它是开启某个密室门的钥匙，也许它可以打开一个惊天动地的秘密。于是我把它套在了我的钥匙串上，随身携带了四年，幻想了四年。</p>
<p>&emsp;&emsp;今天这个幻想破了，梦也该醒了。除了增加钥匙串重量，让我弄混开锁钥匙，它几乎没有任何作用。</p>
<p>&emsp;&emsp;突然想起，似乎我却没有过什么梦。不知自己这二十几年来在做什么，像个孩子。</p>
<p>&emsp;&emsp;也许只是因为身边的许多相处日长的好朋友的离开导致我的突然地不清醒，可笑。</p>
<p>&emsp;&emsp;也许再过些时日，这股孩子气就会随着我们逐渐退化的记忆慢慢消散，寥无痕迹。</p>
<p>&emsp;&emsp;猪妖，该干什么，干什么去！</p>
<p>&emsp;&emsp;美孚，希尔顿……</p>
<p>&emsp;&emsp;忽而又发现，我整天都在梦里面。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>杂</tag>
        <tag>无题</tag>
      </tags>
  </entry>
  <entry>
    <title>mist</title>
    <url>/mist.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;看了许多的电影，不知怎么的老喜欢看电影。同学说，你看了那么多电影就没有想法吗？我说有。那么你为什么不把这些想法写下来呢？我说，说的对。于是我便回忆看过的电影，对有些有看法的电影说一说。</p>
<p>&emsp;&emsp;这部电影是一年前同学下的，据说有科幻色彩，我对科幻比较敏感，于是就同他一起坐下来看了这部电影。</p>
<p>&emsp;&emsp;倒是想不起来是自己的幻想，还是电影里面本来有的线索。说一座山上面的军事基地在进行机密实验，发生了可怕的事故。大概是打开了和另一个世界的联系的通道。另一个世界的迷雾从通道弥散开来。男主人公带着自己的儿子，到超市买东西。结果，不多久雾气就淹没了整个小镇。尖叫声从雾气中传来。大家都躲到了超市 里面。整个故事的大部分时间都在超市里发展。第一个怪物是在超市后门出现的，只是一只软软的有无数牙齿的触手。看不到它的全貌，但已经感觉到了恐怖，让人 起鸡皮疙瘩的恐怖。也许看不到才增添了几分恐怖的气氛。触手被男主人公用斧头砍掉了一只，另一个员工就惨了，他被触手拖到了迷雾里。    </p>
<p>&emsp;&emsp;迷雾，看不到的恐怖才是最恐怖的。真正的恐怖却又来自人的内心。</p>
<p>&emsp;&emsp;到了晚上又有可怕的大蚊子袭击超市，接着是吃蚊子的可怕飞龙。几个人死掉了。其中一个是被蚊子咬到中毒死的，她肿起来了，超恐怖。有部分人开始抗争，用各 种武器。后来超市逐渐分成了两部分人。一部分持积极态度主人公为代表，另一部分人是一个疯女人为代表。这部人持消极态度，认为是上帝的惩罚，有些是被疯女 人的言语蛊惑跟随她的，有些是见到了恐怖的镜像吓倒的。大概也就是反应社会上的各种人的生活态度吧！</p>
<p>&emsp;&emsp;为救受伤的人，主人公带几个人冒着危和恐怖到旁边的药店取药。药店里面被恐怖的能够吐出强腐蚀性蛛丝的蜘蛛占领。几个人挂掉了。但是成功地拿到了药。</p>
<p>&emsp;&emsp;为了出去寻求帮助，继续抗争，还是妥协任怪物宰割吞食的问题上两派人起了争执，疯女人被杀掉。</p>
<p>&emsp;&emsp;主人公同自己的孩子，一个女士，一对老夫妻五人坐上了主人公的汽车奔驰在寻求帮助的路上，或者希望能逃离迷雾。途经主人公的家，已狼藉一片。主人公回想起 因为忘记修补窗户导致妻子枉死，痛苦不已。车周围还有体形巨大的怪兽行走，山摇地动。不久迷雾还没散，但是汽车已经没有油了。主人公手中有一把枪，但是只 有四颗子弹。为了不被怪物带走，忍受痛苦，大家都愿意自杀。但是子弹也不够。四声枪响过后。车上只剩主人公一人，万分痛苦。（主人答应不让怪物带走他的孩 子，他做到了）他叫喊着，你们这些怪物来吧，吃了我。他下车了，但是根本就没有了站起来的力气，他太悲痛了，因为他亲手杀死了自己的妻子和孩子。</p>
<p>&emsp;&emsp;但此时，迷雾渐渐散去，只见军队开来，还有剩下的那些在超市里面的人。怪物都不见了。极为讽刺的是留下来的人都得救了，而出去寻求帮助的人却不是被怪物吃掉，而是自杀。人们在面对恐惧时以为勇敢就是出路，就是幸免。但在极端恐怖时，人们只能用自杀来了结。完。</p>
<p>&emsp;&emsp;对于主人公杀死自己的孩子这一点我和同学的分歧比较大。要换作是我，我是觉不可能亲手杀掉自己的孩子的。但同学认为，与其看到孩子受罪，不如痛快的让他了结了痛苦，让罪都自己一个人受。</p>
<p>&emsp;&emsp;整个剧几乎就不能看到比较大的怪物同人之间的战斗场面。怪物袭击人的场面也不多。唯一能看到比较大的是那触手。而被迷雾笼罩的城镇也给人一种窒息的感觉。 场景一直在超市里，用超市反应整个城镇。人们的心理，以及生存的态度表现的比较多，比较深刻。疯女人的消极以及煽动性的话语让你有种跳进电影把她杀掉的冲 动。多听她的话，也许活着的斗志都会被消磨。</p>
<p>&emsp;&emsp;看完整部电影就感觉吃不下饭了。那只触手给人的恐怖感觉久久不能挥去，很沉闷，而世事的无常又带给我们对于自己的命运未知的恐惧。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>迷雾</tag>
      </tags>
  </entry>
  <entry>
    <title>发霉了</title>
    <url>/%E5%8F%91%E9%9C%89%E4%BA%86.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;你知道吗？我快发霉了。</p>
<p>&emsp;&emsp;不是身上长出灰绿色毛茸茸真菌的那钟发霉，而是从里面来的。就像脑子里可以长出蘑菇一样，不能长出灯泡了。</p>
<p>&emsp;&emsp;我骑了自行车去吃晚饭，我已经太久没有动。我骑的很慢，比晚饭过后散步的老奶奶还要慢。吃饭的人很多，正是吃饭的时候。在饭堂门口挺车的时候差一点就撞到背后驶来的一个小伙，真是的，连身体的灵敏度都降低了。但是为什么又不让我撞到？最好撞到一个漂亮女孩儿（在做梦啦……）！吃晚饭只花了我十分钟。不要误会，我不是吃不下，只是平时吃饭都是这个速度。似乎吃得有些快啊，不过吃饭就专心吃饭咯，本没有其他事做，本不应该做其他事情。</p>
<p>&emsp;&emsp;我骑上自行车，沿着平时去往实验室的路骑，骑的比饭后散步的老公公还要慢。</p>
<p>&emsp;&emsp;我骑到了校园的最北边的北门。外面就是吵闹的街，车辆过往飞驰。天哪，我连学校都不敢出去，我是怎么了？我在原地来回骑了许多个圈，我也记不得有多少个圈。外面的吵闹声声声入耳，心里的喧哗却是蠢蠢欲动喷薄欲出。但是我脑子里什么都没有。我沿着另一条与之前平行的路返回。如果每个人都是一条直线，哇噻，世上那么多的线，我们居然能够有交点，那真是奇迹。剩下的线当然不能说都是平行的，更多的是处于不同平面的。我觉得平行的和有交点的同样难得啊！</p>
<p>&emsp;&emsp;有时我喜欢用眼睛盯住朝我走来的每一个人，直到他们都胆怯的转移视线，有时我却害怕见到任何一双眼睛，我只低着头看我路。但很多时候我找不到自己的路。而今天我选择低头看我自己的路。</p>
<p>&emsp;&emsp;我骑到了校园的最南面。</p>
<p>&emsp;&emsp;突然不知道我出来是干啥的了。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>流水一</title>
    <url>/%E6%B5%81%E6%B0%B4%E4%B8%80.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;10点半起的床，哇，疯了。我应该没有那么懒吧！</p>
<p>&emsp;&emsp;睁开眼，看表，掀开被子，穿衣服，穿裤子，下床，开电脑，嗯，我肯定是疯了，下床的第一件事居然是开电脑。大伙儿都起床了，估计是我起床的声音把他们弄醒了，或者他们找到了起床的借口，反正大伙儿相继都起来了，在10分钟之内。呵呵，我都不知道开电脑干啥。还是去洗漱吧！说来就怪了，大胡子的头发睡了觉起来怎么就一点也不乱，还是那么飘逸，而我的，居然被说Q，被说成是了超级赛亚人。</p>
<p>&emsp;&emsp;吃饭去了。大胡骑自行车。据说是要理财去，不过听说3个月利润6块钱，于是决定，还是吃饭实在。桃李哦，最近，就近原则，我喜欢。资源最省。二楼，吃烤鸭，嗯，每次吃烤鸭都会觉得满足，吃饭时什么都不想。对了，还有两只懒猪在宿舍呢。我负责帮他们带饭。“党员该做的事呀！”嘿嘿。</p>
<p>&emsp;&emsp;吃过饭，啊，看到了不该看到的东西。双腿岔开坐在大胡的自行车后座，哇，我完了，长不大了。</p>
<p>&emsp;&emsp;我又窝到宿舍了，作啥？嗯，看heroes.s04.e10，昨天看过的，只是没有字幕，看懂了80％的样子。samule的能力，sylor哪里去了，莫非是在peter身上，peter怎么变得那么差劲，还有hiro，哇，这个剧乱得就跟我的生活一样。不对，我的生活应该是简单到令人难以想象才对。编程啊，哦……我的笔记在实验室，好借口哦……</p>
<p>&emsp;&emsp;看犬夜叉啦，和小白一起看。背后的大胡看什么“黑椒”，我们看犬夜叉的时候一直在说，阿细啊，不要看犬夜叉了，这么“清纯”的，来，和我一起看口味重的黑椒。呵呵，无聊。口味重了受不起。</p>
<p>&emsp;&emsp;这个时候要是有瓜子磕该多好，小白说。好啊，我们去买怎么样？我看到他穿的是一双拖鞋，还是我去买吧！听到你说这话真是太好了，待会儿回来我们玩游戏。</p>
<p>&emsp;&emsp;我去买东西啦。不过我向来不怎么吃零食的，买啥？瓜子，麻花，山楂，橘子，香蕉，嗯！</p>
<p>&emsp;&emsp;dota，死红红，居然要上网打AI，好吧，奉陪了。</p>
<p>&emsp;&emsp;两盘，哦，我的麻花，都被小白洗啦！</p>
<p>&emsp;&emsp;吃饭……小白消失了？超哥，后后，红红，糟了，there suppose to be another one，不会吧！这也能忘，他吃的是黄豆，嗯，这个绝对没有记错。我的记性啊……</p>
<p>&emsp;&emsp;又见桃李，又吃烤鸭，明明刷了卡，大妈却诬我，理亏了吧，全是骨头，呃，一点感觉都没有了，完全找不到满足感。</p>
<p>&emsp;&emsp;开会，班委会。活动，选举。</p>
<p>&emsp;&emsp;日志中，切莫打扰，哎……我在做什么？编程，作业，不懂的东西……</p>
<p>&emsp;&emsp;加油^_^</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>123</title>
    <url>/123.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;天下着小雨，早上出门的时候还没有下的。天气预报还是挺准的。</p>
<p>&emsp;&emsp;我的实验室在10楼。本来打定主意每天都爬楼梯的。后来因为爬楼梯把膝盖给伤了，找了个借口说，每次爬楼梯都是刚吃了饭，刚吃了饭爬楼梯对胃肯定不好。于是还是成了一个耗费国家电力的家伙。</p>
<p>&emsp;&emsp;在货梯旁边，洗漱池背后从一楼到十楼，至少是十楼打，打通了一个洞。从那里往下看，可以看到这个洞一直通到一楼。和站在窗口往外看不一样，从这里只能看到目眩，看不到美景，或者至少是活物。这个洞是大概一个月之前打通的。没有人知道是用来做什么的。我甚至觉得就着这个洞可以发生一系列离奇的盗窃、杀人案件。可是，什么都没有发生。直到今天。</p>
<p>&emsp;&emsp;不好意思，不要误会，并不是今天真的发生了离奇的事件。而是一声声整齐的呐喊。1,2……3……</p>
<p>&emsp;&emsp;几条黑色粗大的电缆线还是数据线的从天花板上面滑下来，躺在黢黑的走廊里面。经过时还以为是蠢蠢欲动的蟒蛇。还好天冷，衣服传的比较多，不至于吓出一身冷汗。走廊的东边，也就是洗漱池和货梯旁边围了一群人，大概有七八个人。衣服比较脏乱，或者至少上面有一层让人看不清的灰尘。他们手里握着那根不只是光缆还是电缆的黑粗绳子。他们的眼睛全注视着缆绳，完全没有看到我。我径直进了实验室。外面有节奏的响起“1，2，3……”以及一人用建议的口吻调整队形，增加士气的声音。</p>
<p>&emsp;&emsp;不一会儿上课了。老师在黑板上狂书。我们在底下笔走游龙。教室就在实验室隔壁。外面的响声更盛。丝毫没有停歇的意思。身边同学似乎被这声音吵得无心听讲，无心做笔记了。因为他时不时地就会看时间。“怎么才过了两分种……”他叫道。我想起了《美丽心灵》里面纳什讲课，外面施工的情景。估计我们的老师的功力还没有纳什那么高。不知道我们之中有没有那么高功力的人。</p>
<p>&emsp;&emsp;哦……我的思绪也飞走了。</p>
<p>&emsp;&emsp;下课了。我不经意地仔细看了看缆绳。有好几股铜线组成，大概一个手掌勉强能握住。从一楼到十楼每层三米少说也三十米，三十米的缆绳哇，肯定重的要命。</p>
<p>&emsp;&emsp;天气预报说今晚有小雪，明天有中雪。其实我都不知道我喜不喜欢下雪了。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>花木兰</title>
    <url>/%E8%8A%B1%E6%9C%A8%E5%85%B0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;《花木兰》是晚上7点放映，5点售票。师兄请客，我主动请缨去买票。</p>
<p>&emsp;&emsp;基于上次《2012》售票形式的火爆，于是我决定早一点到大礼堂排队。3点40我已经到大礼堂了，结果一个人都没有，连门都锁着紧紧的。透明玻璃大门里面摆着一张大大的海报。手工书写的“花木兰”几个打字十分惹眼。</p>
<p>&emsp;&emsp;一对情侣走过来，朝里望了望，然后开了另一扇门走了进去。呵呵，我居然没有看到那边的门是开着的。我跟着他们走了进去。坐在了东边角落的椅子上。中间有个茶几，对面就是那对情侣。他们窃窃私语着。我就一个没电，短线的电灯泡。我装作漠不关心的样子，慢慢从书包里掏出京极夏彦的《姑获鸟之夏》。书包里的书不少，能在这个时候用来打发时间的就只有这本了。是vincentc从图书馆借来刚看完的。据他描述，看完了以后，毛骨悚然却合情合理令人感伤。于是他就塞给了我，强烈推荐我看。</p>
<p>&emsp;&emsp;我开始翻看关于读者京极夏彦的介绍。一般看书我都不会看这些，尤其是莫名其妙的一个名人对于这本书的长篇大论的序。这些序好像除了赞赏夸奖以外就没有其他内容。不过今天我答应来买票就是要考验一下自己的耐性，看看有没有退步。因为以前要是等上四五个小时我都还能耐得住，不过前一段时间似乎有些浮躁。我想看看我的浮躁到底到达了什么样的境界。</p>
<p>&emsp;&emsp;于是我开始看京极夏彦的简介。这家伙简直不是“盖”的，简介里面把他说的跟个小说神似的。</p>
<p>&emsp;&emsp;倒要看看他写的东西到底是什么，难道比《红楼梦》还厉害？</p>
<p>&emsp;&emsp;开头感觉就很罗嗦。不过这种罗嗦对于长篇小说是必要的吧，这样才能把环境描述清楚。也许我的文学素养根本就和蚕翼一样薄，完全理解不了书中的深层次的语义。我看书的速度慢的跟蜗牛上树一样，都快四点半了，我就看了十多页。这时排队买票的人已经来了不少，大概有十几个了。而且已经排成了队，跃跃欲试。我赶紧装好了书准备也加入队伍。但是发现，手脚都快冻僵了。都怪今天的中午的太阳，我以为大地会给这阳光给考热，还特地脱了一件衣服，我想我一定是哪一根筋今天搭错了。</p>
<p>&emsp;&emsp;我站在一个头挂耳机的家伙的后面，他在熟练的用老成的口吻打着电话。我又把书拿出来继续翻着。不一会儿我身后就串接了上百个形形色色的家伙。我可没有功夫来理会这些家伙的情况。因为我的手脚的冻僵了，我只好左脚换右脚的左右摇晃，来换取一些热量。可是这微弱的热量根本不足以让我的身体增加一点儿可测量的温度。</p>
<p>&emsp;&emsp;前面挂耳机的家伙满口的川音，听起来很耳熟，但有不能确定认识。</p>
<p>&emsp;&emsp;“如果温家宝有朱熔基那样的手腕就好了……”“他提出了环境保护，可是一点用都没有……”“未来中国的核电将占世界的60%”“如果上海人花200万买一套房子，还不如移民到加拿大。移民加拿大只要四五十万……”</p>
<p>&emsp;&emsp;这家伙都在说些什么啊？似乎就是一个对中国社会了解得十分透彻的专家。</p>
<p>&emsp;&emsp;功夫不负有心人啊！买票窗口终于在我冻僵之前打开了。我向买票的阿姨索要了22张票，差点塞了120块钱给她（每张5块。）。大家的视线都注视着我，看着我手上的两大版票，看得我怪不好意思的。</p>
<p>&emsp;&emsp;《花木兰》开演了。整体还不错，除了一些比较雷的对白。花木兰，民族英雄，还有什么好说的。</p>
<p>&emsp;&emsp;回到宿舍，我和小白又看起了《犬夜叉》。这几集故事太精彩，我们被故事情节深深地吸住了。</p>
<p>&emsp;&emsp;白心上人是得道活佛，有那么高强的纯净法力。确仍然败给了死亡这道坎，从而憎恨世人憎恨世界。他哪里还有资格作佛。世上也没有一个完全的人，每个人心中总有善和恶。明白了这一点，白心上人成佛了，我们的心里也坦然了许多。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>Dloc</title>
    <url>/Dloc.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我似乎又dloc了。我不是故意的。大概是因为上周末晚饭过后出去转了一转，还有昨晚也吹了吹冷风的缘故。</p>
<p>&emsp;&emsp;Dloc对于我是司空见惯的了。我几乎没有什么大的病痛，除了初三摔断手壁，高三给自己狗咬到。dloc这种事情不到一个月就会有。或许是因为抵抗力差了些吧！老妈说我小时候三天两头就住院了，能挺过来还挺不容易。</p>
<p>&emsp;&emsp;从小到大我记得的dloc症状大概就只有两种发展类型。一种就是狂流鼻涕，另一种是先喉咙痛，然后狂流鼻涕。</p>
<p>&emsp;&emsp;几乎每次快到考试的时候就会dloc。我有时会怀疑是考试综合症。老妈说头发长了就会“变狗”。变狗的意思就是dloc，生病。我甚至想过用科学的方法来合理头发长了与dloc的关系。比如头发长了，免疫系统更新较慢等等。因为正如老妈讲的，每次我的头发长的时候都会dloc，但是我却找不到他们之间的关系。 </p>
<p>&emsp;&emsp;记得最清楚的一次感冒考试是高一考数学。因为经受了初中老师的关于考试时间的观念，不管有没有把试卷做完都应该坐到考试结束。那天dloc正进入严重时期，爆发期。考试到一半的时候，我准备的纸巾已经被我的鼻涕吸完了。好吧，这的确比较恶心，随后当然就没有办法咯。我用一只手写着卷子，另一手拧着鼻子。那次的考试似乎有点简单，大家纷纷都提前离场了。大概提早了半个多小时，考场里面几乎就只有我和另外一个同学了。我仍然坚持着。坚持着把时间坐够。最后，监考老师说，你们还交不交的啊，不交我走了。要知道那个时候离考试结束还有十多分钟呢！我们只好把试卷交了。结束我拧鼻子的痛苦。</p>
<p>&emsp;&emsp;食堂的苦瓜从来都没有炒熟过，苦的难以下咽。自从尝了第一次以后我便没有吃过第二次。如果食堂师傅做的苦瓜能有老妈做的那么好就太棒了。有一次dloc居然影响到了我的味觉，吃东西都没有味道。于是我就打了平时不敢吃的苦瓜。</p>
<p>&emsp;&emsp;其实dloc对于现在的我一点影响都没有，除了可以成为我不去实验室的借口。</p>
<p>&emsp;&emsp;也许dloc还能一点一点得侵蚀人的大脑，让人变得更傻。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>旧年</title>
    <url>/%E6%97%A7%E5%B9%B4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我本应该在09年年末做一个年终总结的，但是因为各种原因，以及自己的犹豫不绝和薄弱的意志才拖到现在。</p>
<p>&emsp;&emsp;我想我的09年就可以用我没有写总结的原因来说明：各种外部的因素限制以及自己内心的脆弱。</p>
<p>&emsp;&emsp;在这里回故一下09年的事迹，怕到某年某月想回想这段往事却找脑中找不到，记不得。</p>
<p>&emsp;&emsp;09年二月，家那边下过了场雪，那只有不到一天的短暂寿命的雪，我说，瑞雪兆丰年。</p>
<p>&emsp;&emsp;09年不知在那个地方看到了我的运程，说我会遇到一个能够给我带来好运的人，还说下半年我会有桃花运。</p>
<p>&emsp;&emsp;09年4，5月，我们在抓紧着时间准备着本科时期的最后一个作业，毕业论文。事实上大部分时间还是在玩。</p>
<p>&emsp;&emsp;09年6月，我毕业了。和相处几年的同窗说再见。我没有喝多，但是我却让我自己以为自己喝多了。我流泪了，但是没有哭。穿上了学士服，和同学留下了最后的本科记忆。我以为未来是美好的。</p>
<p>&emsp;&emsp;09年7，8月，在家度过的最漫长的暑假，我不知道接下来迎接我的是什么。</p>
<p>&emsp;&emsp;09年9月，我成了一个研究僧。对于学习一样是那么懒惰，对于工作仍然没有动力。</p>
<p>&emsp;&emsp;09年10月，拿到了还能算是工资的第一笔钱。但是却没能用来买有意思的东西。因为我的电脑在同一时间瘫痪。</p>
<p>&emsp;&emsp;09年11月，我递交了第一封情书。虽然我早知道结果，但是心里却依然很痛。</p>
<p>&emsp;&emsp;09年12月，我和小白打赌，如果每玩一次游戏就给他十块钱。结果是他挑唆我玩，我给了十块，完了一天。</p>
<p>&emsp;&emsp;09年最令人难忘的是，我们毕业了。各自都有自己美好的出路，前程。我们开心的喝酒、谈笑、照毕业照。噢，对了，分发毕业照的时候我似乎发错了，谁多领了的赶紧还我，因为我还没有。</p>
<p>&emsp;&emsp;09年值得开心的事是，那个对我09年运程的估计是对的。因为在下班年真的认识了好多女生，不过我一个都没有抓住。当然那不是重点，重点是，我认识了好多朋友。几个舍友哥们幽默、知识渊博、平易近人。一大帮容易相处的师兄总能在关键时候有莫大的帮助。还有就是和我一起打发时间的七上八下。能带给我好运的人，应该就是我的导师，七上八下，师兄，室友。</p>
<p>&emsp;&emsp;09年最伤心的事是，我好像一点成就都没有。这是08年的失误，09年的失败啊！</p>
<p>&emsp;&emsp;10年不能再像09年那样没有计划了。09年没有计划的我就像是无头苍蝇在到处乱撞，也像是漂泊在太平洋的小舟遇上了阴雨天气，没有指南针，没有方向，没有动力，没有出路。</p>
<p>&emsp;&emsp;再见，2009！</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>红色</title>
    <url>/%E7%BA%A2%E8%89%B2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;红色是我比较喜欢的一种颜色，或者说我个人比较喜欢红色的东西，但是红色内裤除外。</p>
<p>&emsp;&emsp;新年的前一天，vincent调侃的问道：“明年是谁的本命年啊？”我居然傻到附和，举起了手。接下来便是不想听到的：“记得一定要穿红色内裤，可以辟邪的……”</p>
<p>&emsp;&emsp;“可是我没有红色内裤，明天我就去买……”我还假装开心的应道。不过后来真的没有买。</p>
<p>&emsp;&emsp;今天早上起床后兴高采烈的跑下楼去实验室。结果在下到一楼的时候一脚就踏空了，全身的重量集中在歪向一遍的右脚。顿时痛得我差点叫出声来。那种痛没有办法形容，总之你会巴望着受伤的脚长在别人腿上，就算自己能飞起来也不能减轻一丁点儿痛楚，当然那个时候你不可能想到飞。唯一能想的就是，一定没事，一定没事，千万不要伤到骨头。我撑着拐角的扶手悬空了一回会儿，然后有80%的把握没有伤到骨头。回宿舍呢，还是去实验室？回宿舍还有五楼要爬，我可爬不动；去实验室骑车，只需要下一层楼，然后骑车，还好，还能坚持，况且还有课要上；但是，要不要去医院？以前也偶尔崴到脚，不过不会有多严重，崴了一会儿就能好。但是这次能够感觉到不是一时半会儿就痊愈的。</p>
<p>&emsp;&emsp;下午上完课，脚还在痛，要是烙下病根儿可不好。要不要去看医生呢？七上八下说要的，他预支了一次惩罚我的机会让我去看。既然处于一番好意，那我就只好遵命，犯了一次规去找vincent帮忙送我去医院看脚。</p>
<p>&emsp;&emsp;悲剧的事情发生了。vincent骑自行车不会载人，况且我的自行车没有后座。让vincent去借车，结果问到最后，就借到老大的那辆女士小轮永久，后轮没有气。有打气的地方，可是坐上去连腿都伸不直。于是打电话找有正常的车会载人的小平，可是电话那头只有一个说着标准普通话，通知我会短信通知机主的女士的声音，估计小平又去陪女朋友了。打电话找大胡，大胡的电话通了，嘟了半天，就是没有人接，估计又是去打球去了。打电话给小白，对了，小白的自行车也没有后座。对还有二毛。电话通了，二毛还在西区上课。不过人挺好的，接通电话说20分钟后就回来。</p>
<p>&emsp;&emsp;我踱着脚，时而跳两步和vincent在大楼大厅里面等二毛。忽然就想起今年是本命年，然后话题就转到了红内裤。</p>
<p>&emsp;&emsp;然后我明白了一个道理，命这种事情，信则灵，不信就没什么了。真不巧啊，我有点信了。</p>
<p>&emsp;&emsp;医院5点30关门。二毛明明说20分钟到的，结果等了半个多小时。然后来了个电话说，你们再等7、8分钟，刚才我的车链子掉了，刚刚修好，马上就过来。等他回来的时候已经五点过十多分了。不过还算赶的紧，去医院放射科拍片的时候，医生刚刚关机器。还好那医生人挺好的，愿意帮我重开。大概挂科处，放射科，外科，收费处，还有买药窗口今天接待的最后一个人就是我了。不幸中的万幸就是，没有伤到骨头，嘿嘿。</p>
<p>&emsp;&emsp;准备从此窝在宿舍，再窝上一个星期。应该用冷水泡脚还是热水？小白说，热水，还热情地帮我打了水。泡起来的确舒服。泡完脚手机来了几条短信。短信1：阿细，要先用冷水敷，然后再用热水泡。短信2：今晚9点组会，请准时参加。天呐！</p>
<p>&emsp;&emsp;我在想我的人品是不是和手机的那个什么积分一样，过年就清零了。哎～</p>
<p>&emsp;&emsp;多攒点人品，嗯！加油……</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>头晕</title>
    <url>/%E5%A4%B4%E6%99%95.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;《avatar》很火。不是火辣的火，呃，也不一定，也许在那威人的眼里面他们身材十分火辣也说不一定。反正最近每天打开网页都能见到avatar的宣传，上映，观后感铺天盖地的映入眼帘。</p>
<p>&emsp;&emsp;下午去电影院看了3D的avatar，确切的来讲是“被看”。因为大伙儿都看，都在谈论。自己不看，不谈论就会落伍。顺着朋友的观点，我就得到了以上的结论和推论。而我是冲着3D去看的，但不能不说没有受到舆论和宣传的影响。</p>
<p>&emsp;&emsp;同学问为什么看完电影回来没有激烈的讨论，基于我说这部片子很感人很震撼？我只能说，当时看的时候真的很感人很震撼，至于为什么看完以后就没了热情，只能说太完美啦！当然，完美不是指故事情节，这一点是针对于那些说故事情节老套，各种漫画动画用老了的而言。</p>
<p>&emsp;&emsp;还有，我想说的就是，头好晕。因为今天和小白去准备买15好以后的票，结果一问说只能买三天之内的。可是三天之后又考试，三天内还是不要看，好好复习为好。但是一问，三天之内的各个好时段的票都空了。嗯，难得跑那么远来一次，看看今天有没有，有的话就看掉好了。有呃，不过中午1：30，而且只剩下第一排。好吧，还是将就将就勉强勉强。于是把其他5个家伙一起给招过来。</p>
<p>&emsp;&emsp;开看啦。我的天，屏幕那么高，170分钟，看完下来脖子肯定断掉了。坚持一下，牺牲一回啦，为了这个传奇。挺清晰，活灵活现，有时觉得那些飞虫就在眼前，还想用手把它们赶走，还有那个催泪弹投过来时，感觉是快砸到我的头，身体不禁想躲。剧情发展速度也很合适，主要是蒙太奇用得比较好。不像有些电视，想用一两个镜头来表达十年发生的事情或者感情的发展变化，往往让人觉得太快，太迅速，难以接受。细节也是十分出色的。</p>
<p>&emsp;&emsp;问题：1，几个科学家做实验，把人的意识转移到克隆的avatar身上，这个，难以说通吧！2，潘多拉星球的所有生命组成的超级网络把人类的意识和灵魂转移到avatar体内，不可思议啊！本来想用电脑的联网来解释的，这倒不错，但是转移意识就弄得魔幻了。3，那个大的网络可以召唤所有潘多拉生命起来反抗外族，不可思议啊，怎么交流的？有点魔幻。4，第一排啊，头晕，脖子痛，全身都麻了。对哦，这些都不能算是问题的，特别是在如此震撼的视觉下。</p>
<p>&emsp;&emsp;哎呀，眼睛饱餐了一顿，时间杀死了一些，心震撼了一回，心情疏通了一些，中午吃的事物中的油脂沉积了些，钱砸了一些，头晕了一回，脚酸了一回……</p>
<p>&emsp;&emsp;“明天该好好复习了吧？”</p>
<p>&emsp;&emsp;“复习哪要那么久？”</p>
<p>&emsp;&emsp;“你干嘛给我借口……”</p>
<p>&emsp;&emsp;“你的人身目标是什么，追求是什么？”</p>
<p>&emsp;&emsp;……</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>饭后感2</title>
    <url>/%E9%A5%AD%E5%90%8E%E6%84%9F2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;吃过晚饭，忽然想起有通电话未打，于是下楼拨通了号码，有事忙，待会儿打来。于是决定出去转转。</p>
<p>&emsp;&emsp;不知不觉到了街边的小公园。其实冬天寒冷的夜晚没有几个露天的好地方可以用于人们晚上饭后游览。</p>
<p>&emsp;&emsp;我也不知道这算不算个公园，公园的意思大概就是公开的用于大家游览的地方。公园中间有一个人工小湖，其他的花草树木小设施都是围绕着这个湖簇拥着。湖中心象征似的修了个小岛，岛上除了和岸边相同的树木的装饰，还有一个比较显眼的小屋子。见到了事实真相就缺少了几分想象，那个屋子是几只黑天鹅的黑色小屋子。白天也没见里面住过天鹅，大概里面的居住条件不好吧，估计晚上也不会把它们关在里面，因为据说一只黑天鹅价值6000块。各处少不了照的四处通明，小偷无处可藏的霓虹灯，使得这公园才有晚上这许多人的光顾。</p>
<p>&emsp;&emsp;最显眼的要数西边的一个转动的水车，据我们多次观察，一致断定，水车不是电动的。它的半径有大概7至8米宽，时刻不停地被水流带动着转动，水车上装有装水的竹筒，只可惜没有一个引水的小沟，竹筒里的水随着水车的转动来到半空，然后被无情的抛弃，直落下来，像被抛弃的婴儿，有的溅到他母亲的身上像是手脚有力气抓住母亲衣角，有的直接落在了母亲脚下随着水流而下，发出几声哄哄的哀鸣。对了，这像泉水一样泄入小湖里带动水车转动的水是哪里来的？三岁小孩也能思索的出，是用水泵时刻不停来回抽取的。因为站在离泉眼附近还能感觉到水泵的震动，仿佛是汶川地震的余震。东边也如此炮制，只是少了个水车，只剩下拙略的剩有人类加工过的瀑布，发出嚯嚯嚯的噪音，似乎纪律缺管的刚成立的地下组织在召开激烈的讨论会。</p>
<p>&emsp;&emsp;绕这个椭圆形的小湖快步一圈大概要花二十分钟左右，因为刚刚有一个白运动衫胖大阿姨快步从我身边经过，如今过了将近二十分钟，白色胖大身影又从我眼前掠过，若不是我眼花或者看到了鬼，又或者那个阿姨在那个凳子上面歇息过，我的估计就应该是比较准确的。她第三次经过我的身边时我真好正对着她，看了个仔细，人家哪是阿姨啊，反正女士的年龄总跟她们的心思一样是个谜。我沿着湖走了一圈，花了三十多分钟，然后发现，的确走不动了，结论是，这双鞋确实买的小了，伤脚。于是找了湖男岸木质小路上的一个金属冷条凳坐下。身上带有刚刚步行时附着在身上的余温，还可以抵御的了这条凳的寒，这如白天一样的黑夜的冷。</p>
<p>&emsp;&emsp;今天是农历十三，我抬头望了望天，月面的一边少了一圈，像被馋嘴偷吃的小孩沿着边掉了，月亮光洁的挂不住任何云彩做成的面纱，像接掉红头巾的新娘，但是她却独守空房，因为今天的天空没有一丝云彩，新郎大概被亲朋好友拉去灌酒了。仔细瞧才发现不远处有一个星，若不是有点儿高中的天文知识谁也不会想到那个便是著名的太白金星，因为它的光亮全被皎洁的月夺去了，但是它却依然不依不舍的守在月的身旁，看样子对月一片真心。</p>
<p>&emsp;&emsp;远处天边升起了一个孔明灯，大概是孔明灯，在天空中往西斜飘了一阵便熄灭了，大概放孔明灯的人的愿望实现不了了，好失望伤心啊！过了一会儿另一个孔明灯又升起来了，这次也是向西，似乎在追寻前一个似的，它追了好远好远，但是心上人已经不在了。黑暗一点点的吞没了孤单的它，然后天幕就只是黑暗的天下。</p>
<p>&emsp;&emsp;公园北边是一些居民楼，还有一栋灯火通明的教学楼，那是我初中时上课的地方。窗口正对着我，日光灯根根可数，灯光下大概又是困顿发倦的自习生。对岸霓虹灯的灯光照在湖面反射进双眼，水面承载着大量的面波震动信息，波光粼粼照的人有些眩晕。几个晚上锻炼身体的小孩子不时的从我眼前跑过，喘着粗气。我想告诉他们晚饭过后不适宜跑，逛逛就行了。顺着他们跑过去的方向看去，一个穿着单薄迷彩服蓬乱头发的小伙子从路上走到湖边的大石头上坐了下来，一动不动的看着湖面，像是有心事。又或者他本来就是一个疯子。也许他看着我傻傻的坐在这儿也以为是一个疯子呢！过了一会儿他向我这边走过来，靠近我时从岸边地上捡起一块鹅卵石，我以为他听到我心里说他是疯子要赶过来报复呢，我的脚因为寒冷而哆嗦着，要跑的话估计也来不及了。谁知他把鹅卵石向湖中一仍，然后傻兮兮的冲我笑了一笑，然后跑掉了。</p>
<p>&emsp;&emsp;突然水面扰动起来，水纹显示从湖心小岛方向有东西向我这边游过来，像电影中鳄鱼游动留下的激起的水面。不过这里哪来鳄鱼啊，我为自己的想法而发笑，好奇心驱使我起来去看个究竟。一看，发现是一只在水面游动的老鼠，正思索着它游过来的目的，它看到了我，吓得来了个大潜水，等再起来时已经到岸了，然后迅速找了自己的老洞躲了起来。我靠近岸边，想看看它是否因为心急紧张而跑错了路。过了一会儿又一只老鼠从湖心游过来，这次这只小一些，游得慢一些，像刚学会游泳。我故意跺了一脚，像上一只一样的，它也潜进了水里，不过它起来的时候还在原地，远没有上一只灵敏矫捷。我不忍心再吓它，万一要是这只是上一只的媳妇儿，我吓了她，待会儿她的老公来找我报仇就麻烦了。终于她费了九牛二虎之力游到了岸边。</p>
<p>&emsp;&emsp;电话响起了，我酝酿了好多话要讲，可是讲话可不比写文章啊，说起来什么都忘了。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>饭后感</tag>
      </tags>
  </entry>
  <entry>
    <title>流水三</title>
    <url>/%E6%B5%81%E6%B0%B4%E4%B8%89.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;“阿三，我打你的电话试一下，你别接！”小白转过身对阿三说道。</p>
<p>&emsp;&emsp;“好！”阿三正专心的在魔兽世界里镇压敌军。手机铃声响了两声，然后停了。</p>
<p>&emsp;&emsp;“我刚充了话费，所以打你的电话试一下。”</p>
<p>&emsp;&emsp;“充上了吗？”</p>
<p>&emsp;&emsp;“充上了啊，要不然怎么能打通你的手机？”</p>
<p>&emsp;&emsp;“你打了我手机吗？”</p>
<p>&emsp;&emsp;每天早上从床上爬起来都是一件让人烦恼的事情，不，那种感觉不应该叫做烦恼，床就像人的恋人，让你离开你的恋人的感觉总归是难以割舍。不过我们对这个恋人倒是残忍至极，晚上回来睡他，白天却留她孤零零一个。</p>
<p>&emsp;&emsp;总会在清晨醒一次，但那个时候的我大概只是在睡魔的疏忽下溜出梦的监牢出来透透风。天已经大亮。只是不知道太阳有没有游览到这块院子。以为已经八九点光景。然后打开手机，原来只六点多，迅速编辑一条短信，通常在我来不及意识到短信是否发出的那一刻睡魔就抓住了我，再次陷入朦胧的梦境，很难忆起梦境的人事。</p>
<p>&emsp;&emsp;如果课是在上午，下午或者晚上，那么我肯定会在上午，下午或者晚上打瞌睡，简而言之就是，上课的时候我总会不知不觉不能自已的打瞌睡。曾经有人拿老鼠做过实验，想方设法让老鼠不能睡觉，结果老鼠在第13天的时候就死掉了，因为没有睡觉的缘故，呃，这家伙真是残忍。我在想要是再这么下去我会不会也尽快的死掉了。呵呵，还是得认真调整一下生物钟了，拿一个整天来睡觉或许是个比较好的办法。</p>
<p>&emsp;&emsp;我试着给自己写一首打油诗的评语，不过还没有完成，因为我不知道自己以后会是怎么样的，所以那首打油诗一直都没有完成，也许人本来就无法知道自己以后的路该怎么走。</p>
<p>&emsp;&emsp;我把自行车推去校园自行车行修了，我不会记恨因为他儿摔过，呵呵，大概我只会畏惧。</p>
<p>&emsp;&emsp;在看正负2摄氏度的视频，突然觉得人类是多么无知渺小啊，活着真好，真糟糕！</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>消失的几天</title>
    <url>/%E6%B6%88%E5%A4%B1%E7%9A%84%E5%87%A0%E5%A4%A9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;顺便交代一下这个国庆是怎么过的吧！因为似乎这几天对好多人来说我都音信全无呢！</p>
<p>&emsp;&emsp;九月二十几号接到一个任务，那就是：国庆节出差；更值得开心的是，出差地点是家乡。本来准备国庆依然决然的宅在办公室的，接到这份差事的我无疑是欣喜若狂。</p>
<p>&emsp;&emsp;不过我们准备的不是很充分，而且单单讲求效率了，确切来讲是做了最好的打算以及相对于这个打算的最好的准备，当然这个准备扩大了实际达到的效果与预期的目标之间的差距与麻烦。一路上吃的还算不错都是家乡的口味，只是一路肚子都不舒服，说拉肚子倒又不是，总之胃部和肠道很是不给力。身上不知哪里来了几处伤疤，就像梦一样，因为梦也是不知道从哪里时开始。三四天前被蚊子叮的疮口现在都是猩红，这些蚊子难道就是传说中的外星来客？坐车对于我是最苦的差事，前后总共10天，总共算来大概有3天多时间是在车上呆着的。我自小是不晕车的（除了学前班时去动物园，看见隔座的同学晕车呕吐不觉也似乎干呕了一阵。），而此次坐车坐得我直想吐。</p>
<p>&emsp;&emsp;值得夸耀开心的是在家乡见到了几年未见的老友。我们还一起在火锅前叙了旧。（顺便说一下，我现在这个身体这个胃是吃不了火锅的，吃不消，实在是吃不消！）还有有一晚的住宿问题是得到另一个好友的女朋友秋秋的帮忙解决的，还免费做了她的哥哥一回，这应该提提的，毕竟我比她大三天，不算亏的。末了还得谢谢他们俩的帮忙。另外就是见到了爸妈，见到了外公外婆，见到了舅舅舅妈，见到了小姨，见到了二姨父，很开心。还有就是在火车上闷着没事看完了三本阿加莎.克里斯蒂的悬疑侦探小说，还看了季羡林散文全编第五本的一半。阿加莎克里斯蒂的小说果然构思严谨缜密，总是出奇不意，种种结果总是让人始料未及，却又合情合理，故事也总是有条不紊的展开。然后昨晚没睡就想到也要写一个悬疑故事。（当然不睡也不完全是因为在构思这个故事，一大半原因是吵闹，还有本就在车上睡了一晚，睡得脑热头疼如何能入眠。）这也就是《爱妻之死》啦，我会慢慢写的，呵呵，第一次写这种类型，就当写着玩吧！</p>
<p>&emsp;&emsp;刚刚洗了个澡。发现自己瘦了些。好吧，事实是，我也不清楚我是不是真的瘦了，也许只是因为三的一句玩笑。我发现自己的胳膊还有腿在变细（比之前细），肚子的赘肉在凸显，肉在变软，这正朝着我害怕的老年以后变得肉松皮皱，四肢小肚子大的趋势发展，这是多么恐怖啊，如果发生在自己身上。具体有没有变瘦还得经过磅秤的检验以后再说。总之之后的健身是少不了的了。</p>
<p>&emsp;&emsp;这次出差欢喜甚多，收获不少，我们积累了一些野外布台的经验，许多都是自己吃了亏得来的。不过这些也不算亏，因为我们既没有被谁敲诈也没被骗，许多都是自己欠考虑，还得多坐了几次车，多跑了些路而已。读万卷书，行万里路，路跑多了总是没有错的。路跑多了就会知道以后想办法怎么让自己尽量少跑路，少走弯道。但是接下来就有麻烦了。因为出差的缘故，好多事情都堆在一起了，不过事是要一件一件做的，脚踏实地就好。还有就是出差或多或少是有补助的。既有补助又获得锻炼以及经验经历还能增进感情，所以大家都是愿意去的，但是却只让我们三人去。如果换作我不在这三个人里面我总是会眼红好一阵的。而我却实实在在的是在这三个人里面，如果别人问我，出差开心吗？我说好也不是，坏也不是。说好，别人就更加羡慕嫉妒恨，换作是我，我也会这样。说不好不开心，别人就会说你虚伪等等。总之左也不是右也难为。呵呵，早知道把请客吃饭摆在见面的招呼寒暄中了。</p>
<p>&emsp;&emsp;头还是晕，睡不着，马上就上课了，别胡思乱想了，愿一切都好^_^</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>扑克</title>
    <url>/%E6%89%91%E5%85%8B.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;“诶～你又耍赖啊！”木斯灰白的眉毛往上挑动了一下，用奇怪的眼神看着坐在眼前的小佳。</p>
<p>&emsp;&emsp;小佳身子有些发福了，脸圆圆的，头发花白遗留着很久以前烫染过的痕迹。她不敢看木斯的眼睛，只盯着手里握着的几张扑克，学小女生的样子撅了一下嘴，柔声说：“我哪有啊！”仍然没有敢看木斯的眼。</p>
<p>&emsp;&emsp;木斯的眼睛躲在一副棕色镜框厚厚镜片的老花镜后面，眼里泛着些浑浊的光，说到：“欺负我的眼神不好，是不是？刚才明明看见你换牌了，还有，上一把也是……你说大牌作弊换牌还有什么……”</p>
<p>&emsp;&emsp;“喂喂，我好心考考你的眼力，你却在这里罗哩罗嗦的一大通废话，太过分了吧！小心我捶你哦！”小佳抬起了肥胖的右手，手掌握成了松散的拳头，瞄准着木斯的肩膀，准备把这一拳像炮弹一样投过去。</p>
<p>&emsp;&emsp;“呃，打牌嘛，何必那么认真呢，呵呵！”木斯被小佳的拳头震慑住了显得有些胆怯，做出妥协的样子。小佳忽然放下了手中的拳头，两个人开始笑起来，开怀的笑着。木斯的花白头发在灯光的照耀下反射出阵阵油光。</p>
<p>&emsp;&emsp;木斯今年67岁，已经退休两年了，其实他早可以退掉的，只是单位新苗子都能力欠佳，上级也不放心木斯走了以后单位落到一群光吃饭不干事的家伙手里，于是千方百计的要留下木斯这个老资历。其实木斯心里明白，上级说的话有一半可信就不错了。单位好只狼都盯着他的位置，明争暗斗，自己要是一下台，单位准被这群狼弄得支离破碎。所以上级是需要木斯这个老好人在局长这个位置上再撑几年的。一方面为了稳定大局，一方面木斯也老了，许多事情管不过来，上级也可以好好过过瞎眼牧人的日子。</p>
<p>&emsp;&emsp;可是现在，所有这些都不关木斯的事情了。为了工作，他已经耽误了太多的时间。他终身没有娶亲，因为他和小佳说好了：要是35岁之前，我未娶你未嫁，那么我们就在一起。</p>
<p>&emsp;&emsp;他欠小佳太多太多。35岁时他本想辞掉工作去找小佳的，可是那是正是他工作事业的上升期，上级准备提木斯，升他的职。他咬咬牙，心想，也许小佳早已经嫁人了。自己去找她也许会落的一鼻子的灰，会伤透自己的心，而且现在事业蒸蒸日上，如何能离开？于是，在他的岗位上一干就是32年。这32年来，如何好好工作，好好表现无时无刻不在他的生活中交织。因为工作的关系，他很少停下来想，想自己真正想要的是什么，真正的幸福是什么！有时候夜里为莫名的噩梦惊醒，会忽然想起自己脑海的深处原来藏着一个时刻惦记自己的人。那个人时隐时现，木斯想伸手抓住，可是她却越飘越远。</p>
<p>&emsp;&emsp;小佳是在34岁时辞掉工作的，木斯那时候35岁。她回到了当初他们相识的地方，她怀着满心的欢喜，心想，木斯肯定会在那里等她的。可当她来到这里时，木斯根本就不在。小佳很伤心，伤心过后又是一阵担心。然后又在内心琢磨，自我安慰，自我嘲笑，当初是说过你未娶我未嫁，然后就在一起的，但也许木斯已经和别人组成了家，过着幸福的生活。自己的愿望是彼此过着幸福的生活，即使不在一起那又有什么关系呢！于是，她擦掉了眼泪，开始过着自己想要的生活。她喜欢写作，于是就观察生活，写生活，如今她的作品已经在市面上大卖，成了一个知名的作家。她爱画画，于是也认真学画画，画自己的内心世界，她的画也价值不匪。</p>
<p>&emsp;&emsp;等了这许多年，她终于等到了那个久违的木斯。木斯也为见到玲而开心不已。他以为自己的幽默风趣会被几十年的腐奢生活工作磨耗，他还有好多话要说给玲听。是的，他终于有机会把心里的话说给她听，她也终于不用在夜深了却孤单入眠。</p>
<p>&emsp;&emsp;只要他们在一起，生命就还有好长好长，他们不用在因为怕没有事情忘记做而遗憾而悔恨。</p>
<p>&emsp;&emsp;8月7日在望江路和金寨路交口的地下通道碰到一对玩扑克的老妪和老头。呵呵，愿他们永远幸福^_^</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
  </entry>
  <entry>
    <title>&#92;@宁波</title>
    <url>/%E5%AE%81%E6%B3%A2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;之前的五天是同同组的同学一起去宁波参加了一个国际地球物理会议去了。这个会议以前是不叫国际会议的，只是因为今年请来了几位台湾和日本的某专家学者用蹩脚的英语做了几个报告于是也叫国际会议了。</p>
<p>&emsp;&emsp;宁波这个城市，以大胡的观点来讲是算个小城市的。因为从最繁华的地方打的士坐到火车站只用时5分钟左右。通常人们会把听到的自己觉得有道理的或者与自己世界观人生观爱情观相近的话当作固有事实或者固有历史加以深信不移的。我觉得大胡说的有道理，所以我也觉得宁波是个小城市。</p>
<p>&emsp;&emsp;宁波人的穿衣是……好吧，我不能简单用一个词语来形容。去宁波的天一广场逛过两次。见到的女人穿衣都十分时髦时尚。事实上我并不知道时髦时尚是什么意思，总之，吸引眼球就对了。男人穿什么衣服我就不清楚了，因为男人可不会吸引我。汗！颇为难忘的是在广场上遇到的两个帅哥。其中一个穿着白衬衣，黑裤子，皮鞋（也许是皮鞋。）。他朝我们走过来，我以为是流氓或者小偷预对我们有所不轨。当他接近我们时，忽然摊开了自己的左手，我发现他的手心里躺着几枚硬币。愤青忽然就说，‘没没没！’，然后往前走掉了，我们也迅速跟上，把衬衣男甩在后面。只听愤青说道：“我最讨厌向我伸手要钱的乞丐了！”于是我稍有震惊，原来宁波这个小城市的乞丐也是需要穿戴整齐的。另一个就是大胡的一张名为《帅哥与puppy》的相片的男二号了。照片上风中一只小长毛北京犬（也许是吧，就当自己是行家好了。）在广场的阶梯上往下寻路，十分活泼可爱。它的旁边有一个穿着帅气的头发飘逸的帅哥，是这张很有feel的相片的极好烘托啊！圆形广场周围最多的是金银首饰等的奢侈品店。我们还专门进了一家，目的是打击一下自己。在橱窗里，我见到一只185块的手表，然后遭到愤青的鄙视，因为我看掉了一个逗号，那只我觉得差之又差的手表实际标价是18万五千块。好吧，那也许是我们毕业以后头三年的工资，大胡说。后来上到二楼三楼，衣服一件是几千块，一个小玩具也是好几百。看完这些，我的想法，用不真实的话讲就是，这些算什么，无非是小菜一叠，改明儿个有钱了，这些啥都不是；真实的想法就是 ，算了，有钱人的奢侈生活，咱们不跟他们一般见识。</p>
<p>&emsp;&emsp;宁波的吃的东西，呃。我不能因为自己只吃了几顿饭的经历而片面的判断宁波的食物之好坏，这叫以偏概全。总之呢，四星级饭店里面的自助餐还是不错的。只是不管怎么样大家也都认为那么一顿值不了60块。因为靠海的关系，海产品是比较多的。超市里好多有卖。有一个叫做泥螺什么的，据大胡说是十分好吃的。一吃之下全是酒味，终于明白他说的只是酒。极为痛苦的是，有一天晚餐，大胡因为午餐吃多了的缘故没吃，于是晚上点了肯德基。我喝了冰的奶茶，然后接下来的两天都是在肚子痛食欲不振的状态下度过的。由于文化交流交通的便利，吃的口味在任何地方几乎都是可以满足所有人的需求的，所以没有什么过多的需要评价的。</p>
<p>&emsp;&emsp;本以为我们可以住在会场所在的四星级宾馆里头。结果宾馆住的人满为患，我们被安排在了同一条街上的三星级宾馆里面。三星级宾馆的房间价格与四星级的只差40块。看样子我们的待遇很是不错了。市内的房子都挺高，干净整洁，错落有致，挺有大城市的范。靠近海的原因吧，空气也很好，秋天这时还暖暖的。</p>
<p>&emsp;&emsp;的士的起步价是10块。的士司机是绝不会和乘客搭讪的，一点也不像合肥和成都。道路十分干净没有一点白色污染，黑黝黝的柏油路面很有绅士风度。人们十分遵守交通规则。交通灯的路口，非机动车道上会有一个遮雨蓬。我觉得那个是多此一举，要是下大雨人被淋成落汤，那蓬也起不了什么作用，要说用来躲雨，也躲不了几人；小白觉得挺人性化，因为人总是有一会儿不被淋到雨，那多好。摩托车应该是被取缔了，所以见不到一辆。非机动车道里人和电动车争着先，是挺恐怖的。到处可见的都是一些高档车，什么宝马奔驰还有法拉利的，看样子大家都好有钱，都是小康富裕家庭。一次坐的士在四星级宾馆门前下车，保安递过来一张原以为是名片的卡，一看原来是刚才坐的的士车的车牌号，是为了如果有东西落在车上，联系的士方便。果真是高端洋气上档次。</p>
<p>&emsp;&emsp;好吧，我总算是回来了。每个城市总有每个城市的可爱的地方。我说错了，应该说，每个城市总有人喜欢，总有喜欢的理由。而我……好吧，该干正事了，干正事之前先休息，休息一下。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>宁波</tag>
      </tags>
  </entry>
  <entry>
    <title>怪癖</title>
    <url>/%E6%80%AA%E7%99%96.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;盥洗池洗漱时遇到一个家伙在刷牙，刷的很卖力认真，就像所有的人生真理和责任都掌握在手把的牙刷上。于是，他刷的格外的仔细，以至于当我刷完牙洗完脸时，他还在刷。这还不算什么，当我洗完头以后发现，他仍然坚守自己的人生阵地，始终坚持不懈的刷，真佩服他的这种持之以恒的精神……</p>
<p>&emsp;&emsp;人们通常会自言自语，比如没有别人在身边的时候，他也许会不经意间把自己的想法从嘴巴泄漏出来。也许并不是“人们”都这样，至少我是偶尔这样。当有人在身边却又不会理会你在做什么在想什么，嘴更有可能泄漏你的想法。同样在盥洗池，遇到了这样一个人。我们一起在刷牙，盥洗池就我们俩。起初我以为他在嘟囔，在抱怨。当他第二次发出奇怪的嘟囔和一种人类难以理解的语言时，我着实吓了一大跳。只是盼望希冀他的思考不是因为奇怪的变异或者外星人的插手产生。</p>
<p>&emsp;&emsp;每次醒的到早不晚的便会听见盥洗池传来的震耳发溃，声如洪钟的擤鼻声音。就像他擤的不是自己的鼻子，而是在蹂躏一种玩腻了的原来可以发出动听声音的玩具，或者在鞭笞审讯训练有素嘴巴极严的叛变特工。一天极为不巧的起的早了一些，我本该查查黄历然后再决定去洗漱的时间，可是我没有，我只比平时早去了一两个小时，然后壮烈的悲惨的事情发生在了我的面前。那个人十分庞大，大约有200磅重，尤其是对比我的身量以后，更觉得他是石山上落下的一大块滚石。他滚动时，会引发三级地震。随后，他便开始执行他的酷刑，严惩他的鼻子。任何人看到这种惨状也会于心不忍，心有余悸的逃离现场。</p>
<p>&emsp;&emsp;我并不是有喜欢收集奇异份子怪癖的人，但是总有一些人像携带巨量细沙的西北风吹向眼睛一样的出现在你眼前，你躲也躲开。食堂就有那许多怪异分子。其中那个穿着一双黄拖。我有点憎恨黄拖，原因不是因为我某一次约会赶不及穿着黄拖见女友结果被女友甩掉，也不是因为某一天穿着黄拖参加运动会结果被猜到摔了个四角朝天。事实上我根本就没有女朋友，所以黄拖并不会让我失恋。憎恨黄拖的原因我也说不清楚，在内心深处似乎有个声音，或者有个行为准则，他说，‘黄拖低俗，无教养，像某钟动物的排泄物，鄙视穿黄拖的……’于是我就讨厌黄拖了。他还会穿短裤，露着惨白，像是患白化病死掉的干瘦的腿。衣服是蓝色短袖，就像已经穿过几个世纪，从来没有换过，已经掉色，布??????疏，变得半透明。像失宠的中年妇人为了吸引丈夫的目光穿的透明装。他的脸像一个骷髅为了伪装在世上证明自己是个活物而包装的画皮。他的剃须刀是新式的三D的带有菱角的，因为他的胡子从来都是没有形状的。他的头发像是楼道大妈扫厕所用的扫帚一样，从来都是乱糟糟脏兮兮。他在食堂的神秘出现，通常会让人的胃口大减，瘦身信心大增。</p>
<p>&emsp;&emsp;澡堂是那种公共的。大家会脱的精光，相对而望，不过大家都没有什么心思去审视别人的身材形状，因为怀有这种兴趣的人还是为数不多的，也许这些人的数目众多，只是我没有意识到，而且他们隐藏的很深。有一次去洗澡，不小心瞟到一个苗条的背影。拥有苗条身材的男性不一定少，不过让我受惊的不是他苗条的身材，而是他一头飘逸齐腰的乌黑秀发。让我忽然以为自己走错门，或者“他”走错了门。事实证明，“他”是货真价实的他。只是xx人文专业的……</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>憎恨</tag>
      </tags>
  </entry>
  <entry>
    <title>愿逝者安息</title>
    <url>/%E6%84%BF%E9%80%9D%E8%80%85%E5%AE%89%E6%81%AF.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;刚刚得知高中好友母亲去世的消息，内心有太多东西哽咽着。我不懂得如何安慰人，以至于好友母亲病重中都没有给于他足够的关怀和支持。做人做到这个份上算是老差劲的了。</p>
<p>&emsp;&emsp;映像里，映像里好友的母亲鲜活依旧。她温柔慈祥的脸庞清晰的浮现在眼前。她算是一位成功的母亲了，把女儿和儿子养大，尤其把我的好友培养的聪明好学又有领导才能，她把家庭维护的和和睦睦，而且她还是一位为祖国培育下一代的小学教师。</p>
<p>&emsp;&emsp;为伯母的去世我感到十分惋惜和痛心，同时也觉得人生真是世事无常。生活在这世上，我真不知道明天将发生什么。</p>
<p>&emsp;&emsp;厌倦了同baorihan同志的争论。在他的观点里，人只要修行达到一定境界，就能放下一切，就能解脱，就能掌控生死。我是极厌恶只关注自己注重自己休养（简而言之，自私）的人的。人在世上只短短几时年，为自己考虑，为自己的生存而考虑无可厚非。但要是单单的做某些事以谋求自己心里的安慰比完完全全为自己的利益考虑而自私自利为事还要来的低劣。完完全全自私自利行事的人属于没有灵魂，做事以谋求安慰拥有的是浑浊的灵魂。</p>
<p>&emsp;&emsp;当然，这世上没有纯粹的灵魂，没有一个完全不为自己考虑的人。要是哪个人不为自己考虑的活着，那我们看到的只是一副躯壳，躯壳下隐藏的是空或者谎。这样的一副躯壳根本就不能算是人，而是禽兽或是虚构幻想了。</p>
<p>&emsp;&emsp;谁知道明天将发生什么呢？也许世界末日就是明天了也犹未可知。但不管明天怎么样，我们都应该好好过好每一天，认真做自己该做的事。</p>
<p>&emsp;&emsp;愿好友尽快走出低谷，愿伯母走好……</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>躯壳</tag>
        <tag>逝者</tag>
        <tag>安息</tag>
        <tag>好友</tag>
      </tags>
  </entry>
  <entry>
    <title>成都印象</title>
    <url>/%E6%88%90%E9%83%BD%E5%8D%B0%E8%B1%A1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我想说说我对成都的印象。因为我毕竟也是一个成都人。我是在这儿出生长大学习的,经历的不多,耳濡目染的却不少。有句话叫做少不如蜀,老不出川。意思就是讲成都很好,年少时呆在成都,人就不会奋斗单图享乐了,而老了以后就在这里养老吧,还出去干什么呢?当然成都也不是所有的都好完了哈。</p>
<p>&emsp;&emsp;先说说成都的自然环境。成都处在四川盆地里,盆地里的天总是十分阴沉的,一年中难得见到几次艳阳的天。不怪古有蜀犬吠日的说法。常年在成都呆着或许对阴沉的天并没有什么感觉,只是自然而然的认为,天就是这样的。在其他地方呆过,见过真正的算是明亮的蔚蓝的天,以及没有丝毫云彩阻挡的阳光,如果这时候来成都见到如此阴沉的天气的话是让人的心里有说不出的抑郁的。所以我是劝一些性格内向,敏感,心情容易受外界影响的人不要来成都居住的哈。因为这里的被阴云笼罩的阴沉沉的天,足以让人抑郁到想要自杀的。开玩笑的哈,如果有成都人做你的朋友,你就不会那么郁闷了哈。成都的水算是比丰富的,所以空气中的水汽很重,而且是盆地缘故,水汽也不容易散去。所以这里很潮湿,也许不像江边城市如重庆长沙和海边城市如海南那么湿。瓜子花生如果不密封放在空气中,只一天就潮了。鞋子如果晚上没有放进屋里,第二天也像是刚洗过不久的。冬天洗的衣服晾在外面不管多久,都没有真正干的感觉。被子如果不时常拿出去晒晒是很快会发霉的。冬天气温并不算低,通常在零度以上,但是因为湿冷的关系,人会感觉冷的刺骨。所以很多人生冻疮,患风湿。成都的地是很肥沃的,不像北大仓的黑土那么肥,但也相当肥了。所以物产十分丰富,种类也十分繁多。所以就有天府之国的美称了。</p>
<p>&emsp;&emsp;再说说成都的人哈。非常抱歉我不能像林语堂的《吾国吾民》里讲中国人一样的罗列出成都人的所有特点。因为我对成都人的了解不及林语堂对中国人研究的十分之一。我也不太懂得成都的自然环境对成都人性格影响的微妙关系。成都处在一个盆地里,物产丰富,自给自足,也许因为这样所以造就的是安逸自得,及时行乐,容易满足,自我感觉良好,容易相处亲近,拿得起放得下,没有太多大志的成都人。成都人特别爱打牌。他们不管男女老少都会在茶余饭后,在街头巷尾,在农忙间隙,围成一桌开始打牌。几乎在任何场合,任何地方都可以听到打牌的声音,看到打牌人的身影。打牌不为输赢,只为耗磨时间,也许也体现出成都人的素质比较低吧,找不到其他更有意思的娱乐方式。不过打牌又有什么不好,既娱乐又加强了大家的感情交流。成都人对打牌到底有多热爱?记得那天到车站坐公交,上车时离发车时间还有大约15分钟。只见此车的司机和售票员正和另一车的司机在司机座位旁边兴高采烈的打斗地主,旁边还有两个其他车的司机或售票员观战。直到公交车调度人员过来催促,他们才收起家什,可口中还叫喊着:瞧我的一手好牌啊……成都的人爱喝茶。也许现在喝茶已经成了老年人的专利了。因为我看到的只是茶铺里头满满的全是老头儿。拿我外公来说,不管刮风下雨,早上起来用完早饭后的唯一一件事就是去茶铺喝茶,闲聊,直到午饭时间。从他铿锵的步伐到现在蹒跚的行走,一直都没有变过。(除了有农忙或者重要的事情。)成都人自我感觉良好。在亲人的聊天中,时常听到的就是:放眼全国望去,就我们成都最好,水好,土好,人好,吃的好,会享乐。成都的男人都是耙耳朵。他们具有女性的一些气质,包容,能忍耐,不好斗。在家里总是听妻子的话。难怪国学大师文怀沙开玩笑的说,如果他是一个女子,他一定嫁给成都小伙子。成都的女子都是温柔体贴的。不仅人长的漂亮,皮肤好,而且说话也是柔柔的。结了婚以后会把老公麻得很干（就是母老虎的意思）,但对老公却是一心一意。一个结了婚的师兄老是强调说,一定要娶四川的女子做老婆。这样的女孩子你可千万别去惹怒她们,否则你可遭罪了,呵呵。成都人容易满足,比如我。他们做事也会很努力,但是不强求,会顺其自然。他们有了一些成果就容易坐享其成。等到坐吃山空才又开始努力。所以,成都人有很多积蓄的很少吧,呵呵。成都的电视会放街头巷尾拍到的美女，电视台的主持人会带着你到各处去吃好吃的，名字叫吃八方。</p>
<p>&emsp;&emsp;我所了解的就这么多了。也许因为我是成都人,对家乡有特别的情感的缘故,以及我的经历有限,所以我的理解多有偏颇哈。对了,成都人也是很好客的哈,希望朋友常到这里坐坐。</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>成都</tag>
        <tag>打牌</tag>
        <tag>盆地</tag>
        <tag>茶铺</tag>
      </tags>
  </entry>
  <entry>
    <title>读后感</title>
    <url>/%E8%AF%BB%E5%90%8E%E6%84%9F.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;夏看了L写的新的日志了。真的很开心。并且夏还惊奇的发现，喜欢L的另一个原因是她看事情的独特的观点。当夏了解到L的对于好多问题的看法以后，觉得世上的事都是可笑的呀。</p>
<p>&emsp;&emsp;对了，夏还要无力的辩驳一下，他说他并没有把感情等等的事情放到公式里面来计算，他现在的脑子里面的公式少之又少。不，也许L是对的，夏活在公式里面。但我想他的心还是想摆脱这些公式堆砌的框架的。但夏至少是活在一层壳里面的，他自己也不知道这层壳是什么时候覆在自己的表面（不是污垢哦，洗过澡的哈。）的。</p>
<p>&emsp;&emsp;夏很听话的。他肯定会活的好好的。特别是有L这样的好朋友在心灵上给予的支持和帮助。所以，夏会很尊重L的决定的，会与她保持安全的距离。虽然夏很明白，女生都是比较犹豫不安的，特别是当男生在死缠烂打的情况下。但夏一点儿也不懂，不会死缠烂打的招数。夏就是一个“好人”，nice guy！（有一次英语作文，夏把guy写成了gay，笑死人了，呵呵。）不过他正在试着变成坏人。嗯！</p>
<p>&emsp;&emsp;夏活的很肤浅，很糊涂。但是很自在。至于北京那个女孩儿，大约也只是简单做朋友了吧，呵呵。</p>
<p>&emsp;&emsp;夏已经开始渐渐相信L说生活是不需要爱情这种调味剂也可以继续的那句话了。他只需要L以及他的朋友过的好就很开心了。嘿嘿^_^</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>读后感</tag>
      </tags>
  </entry>
  <entry>
    <title>猫</title>
    <url>/%E7%8C%AB.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;L给我出了一个心理测试。按喜欢的多少程度依次说出三种动物。第三种是真正的自己。而我，就是一只猫了。</p>
<p>&emsp;&emsp;通常许多时候许多东西信则是则有，不信则无了。比如星座学说。里面对人的性格的描述语言都比较中立。它的每一种星座描述的性格也许每个人都具有。而看到他的描述以后你就会在身上找自己的相印的性格特点，把它们放大，于是觉得自己原来就是这样的人。</p>
<p>&emsp;&emsp;现在我相信我是一只猫了。</p>
<p>&emsp;&emsp;猫是一种比较灵异的动物。之前看到的一个新闻，说国外的一个老人院里面养了一只猫，这只猫非常奇怪。当一个老人寿命将尽的前几个星期，这只猫都会匍匐在老人的床边，陪伴着他，直到他去世。而同样的事情在这只猫身上发生了十几次。这算很诡异了吧。当然我也不算很诡异，除了偶尔眼前会闪现诡异的东西，估计是玻璃体里面的沉浊物吧！初中的时候，老妈帮我在街边的算命先生那里算过一次命。具体我不记得了，只说我的一个亲戚会去世，我会戴孝。结果把我外婆吓得够呛，她寻思着是不是两老的寿命将近了。结果后来拜祭了一个干妈，没多久，干爹就死掉了。说到干妈就好玩了。她也在我算命不久前去算过命，算命的说她有两个儿子。而事实上她只生了一个儿子，而自己都60好几岁了，哪来什么第二个儿子？然后我就横空的成了她的第二个儿子。呵呵，这些东西真的好诡异。不信他却无法解释他啊。。。</p>
<p>&emsp;&emsp;猫这种动物，你对它好它就对你好，赖着你，有一天你对它不好，它就记恨着你，不理你，离开你，没准一辈子就不见你。外婆家养了一只猫。它是外婆养的，从它的妈妈到它一直养着。所以它只对外婆一个人好。只有外婆进的它身，可以摸它，听到外婆的声音它都会跑过来。但是别人都不行。我想外婆和那只猫有很深厚的感情的。过年的时候，舅舅和表弟放了好多好多鞭炮，那只猫被吓着了，躲了起来。第二天，外婆唤了它好久，它才战战兢兢的叫几声。然后外婆担心的给它喂了食。第二天再唤，它再也没出现。外婆伤心了好久。后来不时念叨那只可爱的猫。那天是它来见的外婆最后一面吧。其实人也是这样的啊，你对他好他也就对你好。</p>
<p>&emsp;&emsp;猫是有洁癖的吧。它会自己清理自己的抓子毛发，用口水，呵呵，放心，我是不会用口水来清洗自己的。以前我家也养过一只猫。开始没有养过猫的我将猫的脖子拴起来养。结果差一点把它勒死。是的啊，如果猫被拴起来又怎么会有自由怎么去捉老鼠呢？不知道是因为报复我拴它还是因为它爱干净的缘故。后来它总是在我的房间里面解决问题。虽然异味不重，但是总要打扫，而且看着想着又比较恶心。所以老妈总对它有不喜欢的情绪。也许猫它感觉到了吧，不久后它就离家出走了，老妈说它定是吃到毒药死掉了。希望它好好的。</p>
<p>&emsp;&emsp;猫的弹跳力很好。这很像以前蹦蹦跳跳的我啊，可惜现在比较缺乏锻炼，都跳不高了。</p>
<p>&emsp;&emsp;猫走起路来没有声音。我也是这样，有一次回家，老妈也在。我就跟在老妈后面一步步上楼梯，她一点儿也没发现，她转过脸来，看到我，吓了一大跳，呵呵。</p>
<p>&emsp;&emsp;猫吃饱了会把玩嘴里的猎物。嗯，我还没有想到我与这一点相关的事情。不过确实有点可怕，当你看到一只吃饱了的猫，把老鼠咬的半死，放在地上逗着玩的时候，你会不寒而栗的。</p>
<p>&emsp;&emsp;猫会傻傻的自娱自乐。比如有一个圆圆的球，猫儿看到了，它会去追逐它。球不动了，它又用抓子推它挠它，玩得很开心很专注。我也可以这样，呵呵。</p>
<p>&emsp;&emsp;猫也许会胡思乱想吧，就像我。我想现在L应该会以为我已经在记恨她了吧。因为她总是把“你别恨我，别怪我”之类的挂在嘴边。我好久都没有和她联系了。为的是不去打搅她。嗯，希望她不要胡斯乱想。希望她好好的。呵呵，也许就我一个人在胡思乱想而已。猫也许真的会胡思乱想，只是它不能像我们一样把不开心的事情说出来。当它不开心的时候它只会趴在地上，用无神迷茫的眼神望着，或者闭着眼假装在睡觉。</p>
<p>&emsp;&emsp;这周都是六点多起床，然后看半小时左右的书，然后到操场跑步。精神还算不错。不过老板交代要看文献的，总是没有进展。</p>
<p>&emsp;&emsp;今天下完雨过后陪师兄去买手机了，中国的手机怎么会是这样的呢？山寨，翻新机，水货，港航，行货，欧版……哪个才是真的啊？师兄还真有种不折不挠的精神，他是给老爸买的手机，买了以后是要寄到家里的，所以非要到邮局旁边的餐馆吃饭。所以我们1点多才吃饭。我的胃又饿过了头。午饭以后已经2点。睡了一下午的觉。睡的好畅快，把这一周的觉都补回来了，因为我之前都不睡午觉，睡眠严重不足啊。。。</p>
<p>&emsp;&emsp;明天要主持会议，看我这只病猫发威吧，嘿嘿^_^</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>猫</tag>
        <tag>诡异</tag>
      </tags>
  </entry>
  <entry>
    <title>活着or霸王别姬</title>
    <url>/%E6%B4%BB%E7%9D%80or%E9%9C%B8%E7%8E%8B%E5%88%AB%E5%A7%AC.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;先看的《活着》，然后看了《霸王别姬》。因为这两部电影被同寝室室友予以高度的评价，甚至说是中国最优秀的电影。所以就看了。</p>
<p>&emsp;&emsp;看了很多电影，却不是很清楚大众的眼中最好的电影是什么样的。但在我的眼里，我觉得，如果一部电影，在看的时候可以让人聚精会神，而不想其他东西；让人影响深刻，眼前一亮；让人情绪高涨，感同身受；发人深省，豁然开朗；或者强烈的视觉震撼的，都算好的电影。而那种让人看着看着就想睡觉，没法集中注意力的电影算不得好的电影。这两部应该算好电影了。</p>
<p>&emsp;&emsp;两部电影的时代和时间跨度比较相近，都是从半封建社会的中国到民国到抗战到解放战争到新中国到文化大革命。。。文章和为时而做，诗歌和为事而做。针砭时弊的东西都总会赢得大家的呼声，因为人是社会的人，人还是挑剔的人。所以聪明的人会看到这个社会的弊病，普通的人因为聪明人的暗示而欢呼雀跃，期待睿智的人来改变这些弊病。两部电影都用小人物的艺术人生，悲凉人生，比较全面的描述了近代中国的发展历程。给我们展示活在这个过度时期的人的形态，以及这个特殊的时期给人们带来的影响。看电影应该用娱乐的眼光来看，而不是政治的。因为电影只是一种娱乐。<br>    两部电影描绘的主人公有所不同，但都与艺术有关。《活着》处处透着黑色的幽默，笑过以后显得无奈和无助。比如富家纨绔子，因为赌博，输掉了所有祖产，赢回妻儿的守候，在土改时还保住了自己的性命。主人公和好友凭着皮影戏在中共和国民党的战场死里逢生。被批斗的妇科大夫很久没东西吃得了馒头高兴的吃到撑死。儿子因为特殊的时代以外而死，女儿病得哑了。女儿生孩子的时候难产死掉了。《活着》的意思就是让主人公经历所有世事变迁仍然活着，承受所有的痛苦和折磨，活着比死了还不如。《霸王别姬》不同于《活着》的地方在于它直面的，不加修饰的把那些残忍的东西展现出来。民国前，京剧发达起来，人们追京剧。戏班严厉交学生，往死里大学生，小孩子学生恐惧到自杀。成了角儿，被公公调戏，心理扭曲。被地主欺压，被国民党打压，被文化大革命蹂躏。处处都是鲜血淋淋的。片中还有一处比较讽刺的对比。国民党看戏的时候无纪律，明摆着搞破坏；共产党看戏的时候纪律严谨规规矩矩，到了后来迫害人是到了骨子里。相对于《活着》中主人公的苟延残喘的活着，《霸王别姬》里的主人公选择了死。</p>
<p>&emsp;&emsp;我们看到的对于电影这种表现形式的描述通常都是说，相对于小说，人物内心描绘的不够多，还把文字用实物展现出来。一百个人读一篇小说有一百种读法，一百个人看一部电影就只有一部电影。但我不这么认为。任何人眼中的世界都是与其他人不同的，都是专属于自己的认知的世界。所以，不同的人看同一部电影也是不同的。</p>
<p>&emsp;&emsp;我喜欢看电影，因为电影虽然来源于生活，但总是比生活要高那么一点。</p>
<p>&emsp;&emsp;完了。</p>
]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>活着</tag>
        <tag>霸王别姬</tag>
      </tags>
  </entry>
  <entry>
    <title>花卷</title>
    <url>/%E8%8A%B1%E5%8D%B7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;晚饭时，实验室只剩师妹了。她的一卡通忽然找不找，约莫买东西时落在了黑超。我说没事，要是找不着，我请吧。时间是17：40。快到东苑的时候，师妹说先去找她的卡。我建议和她一起去，以免找不到卡没法吃饭。但是一个东西突然钻进了我的脑袋，那就是：花卷。</p>
<span id="more"></span>

<p>&emsp;&emsp;师妹我得要先去买花卷，要不然待会儿就卖完了……但是你没卡吃饭……我对师妹说。她说，好的，没事，你先去吧，我带了钱。我想可能师妹并不知道有什么花卷是非买不可的。昨天和师弟一起吃晚饭，问到我为什么要去二楼，我说我要买花卷，当作早餐。师弟说，他不喜欢带回去，第二天吃冷的东西就不好了。他问，师兄你为什么不每天早点起床到食堂买早点吃呢？我笑了，然后什么都没有说……</p>
<p>&emsp;&emsp;娘子在年后胆结石发作，剧痛使她彻夜不能安寝，还间杂腹泻和呕吐。第二天奄奄一息的娘子被我们带到了传说中的做保胆取石的最好的医院去做手术。被一颗小小的黄绿色恶魔精灵折磨的生不如死的娘子心理和身理都脆弱的像块悬挂的冰块。从娘子被推进手术室到接下来的15个小时，我的心也是一直悬着的。当然，手术并没有做那么久，只有3个多小时。只是这三个小时都不见人，只能希望什么事都不会发生。只在那时才体会到电视剧中主角眼睁睁自己的亲人被送进手术室，然后自己在走廊里除了焦急等待以外什么都不能做的如热锅上的蚂蚁心理。只不过走廊里的热锅蚂蚁不是一只，是好多只。从手术室出来有12个小时娘子都必须要忍痛和困保持清醒，以免做过手术的部位粘连。然后我就一个劲儿的在娘子耳边唠叨不停，估计娘子耳朵也成茧几次，然后又被共振掉几次了。实在抱歉啊。</p>
<p>&emsp;&emsp;虽说只是个小手术，却签了好多的恐怖的协议，自愿承担各种风险；况且是第一次被推进手术室，还被人动了刀子开了肚子。不过总算是顺利的进行了手术，取出了结石。娘子也认为那个小小的东西就是一个妖怪。几天以后娘子出院了，不过瘦了好几圈，比之前少了20多斤。</p>
<p>&emsp;&emsp;从此，娘子再也不能大鱼大肉，连饭菜里面多一丝辣椒末也会让肚子难受，胆处生疼。馋坏了本来见好吃就吃的从不忌口的我家娘子，害的她只能每天吃清淡异常的饭菜，然后逛美食博客以慰馋心，苦了一个为麻辣美食而生的胃。另外，患了胆结石是需要少食多餐的，早餐尤其重要。</p>
<p>&emsp;&emsp;我们试过早餐吃馒头还有汤圆。馒头总是没味，干瘪，难以下咽。汤圆就更不行，试过一次，娘子吃后就犯疼。对比了好多，我们还是决定吃花卷吧。因为花卷还是挺香挺有味的，比起馒头来。对了，可能你要问：为什么不吃面条？大概也许你没有吃过除盐以外什么都不放的面条吧。然而，早上起来买的街上的花卷不但个子小，而且就像得了白化病一样，吃着好不安心。所以决定每天晚饭时从食堂带几个回去，第二天早上热了吃。</p>
<p>&emsp;&emsp;得了这胆的毛病，娘子身心受了好多的摧残。很多的痛我也无法替她分担，以至于好多的事都没有替娘子考虑周全。只怪我做事马虎啊。需要向娘子道歉之处甚多。盼娘子容我好好的改。</p>
<p>&emsp;&emsp;希望娘子慢慢好起来。可以快快乐乐健健康康开开心心的做自己喜欢做的事情。</p>
<p>&emsp;&emsp;阿门。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>命题作文</tag>
      </tags>
  </entry>
  <entry>
    <title>雾霾齐步走</title>
    <url>/%E9%9B%BE%E9%9C%BE%E9%BD%90%E6%AD%A5%E8%B5%B0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;据传，雾霾的妈妈叫他回去吃饭了。</p>
<p>&emsp;&emsp;连续几天各大新闻媒体都在大肆报道华北华东的雾霾天气，中央打响了雾霾攻坚战。发言人说：污染主要来自于急功近利的工业生产。我们很有进步，现在每个省市都毫不隐瞒地向人民群众公布具体的污染数字。。。</p>
<p>&emsp;&emsp;我和妻不禁感叹：中国人果然还是有在变得更好啊，瞧，这种家丑也终于敢拿出来示人了。</p>
<p>&emsp;&emsp;慢着，我和妻花了一晚上的功夫，并不是要来数落中国人的好的啊，而是为了自我安慰似的找到中国发展到今天这个样子的根源。</p>
<p>&emsp;&emsp;为什么雾霾这么张狂的睡在我们身边，把我们生活的地盘都要挤没了？经过我俩的激烈争论，终于有了初步答案。那就是——-很多中国人目光短浅。（大概我也是如此。）并不是我在骂自己人。好吧，其实很多时候骂自己人有种推卸责任的快感。不过好的借口是，知己知彼百战不怠。目光短浅这个结论并不是我根据自己自身特点总结出的，而是经过很多负面报道还有眼见而得的。比如中国人在一个劲儿的重视遛进10%的人口袋里的GDP，忽视长期的发展，忽视环境的污染，就甭提医保社保神马了。一味的追寻产量业绩，产品的质量得不到保证，市场自然就没了。产业结构一直走劳动密集型，没有自己的自主高科技产品（品牌）。山寨货横行。（慢着，很多东西是我自己说的，和娘子无关啊。我们没有讨论到这儿。）举个最鲜活的例子，欧洲美国人建城市，规划基本奔着几百年方案做（比如下水道可以跑车子）。中国人。。。我不知道你们（我们）在干什么。。。除了拆还会什么？</p>
<p>&emsp;&emsp;再等等，GDP如果真是进了10%的人的腰包。那么这些金字塔尖上的人儿，您们应该深谋远虑些吧您哪。利益都钻到亲们的口袋了难道就不思忖着如何长期的可持续的捻到更多的肥肉？非要立刻马上卷了所有祖产，不给长工们活路。</p>
<p>&emsp;&emsp;好吧。我们是无论如何也揣踱不出他们的心机的。也许他们就是那样想的，完事之后跑到列强国家摇尾祈怜也说不一定。因为来自中学课本的鲁大师说过，中国人是有奴性的。这帮金字塔尖儿上的人们，在咱们这儿做不了奴隶，那只能。。。去给别的国捡肥皂。</p>
<p>&emsp;&emsp;话说，中国人为什么目光那么短浅？中国的某些官儿为什么那么爱贪？在中国，关系为什么就是生产力？为什么在中国面子问题是大问题？中国为什么发展的没有别的某些国发展的那么好？</p>
<p>&emsp;&emsp;娘子的话很精辟——因为中国人太多，东西太少了很久。你能明白吧，弱肉强食，人不为己天理难容。</p>
<p>&emsp;&emsp;因为僧多粥少，我们不得不努力为自己的肚子奋斗，长此以往，这种基因会刻在中国人的DNA里。就像肥胖症，是在饥荒年代那些拥有囤积脂肪能力的人保存下来的能力，贪婪也是中国人在华夏土地上几千年的食物争夺战中习得的能力。按理说，消除这种贪污腐败现象完善的监督机制就能解决，就像欧美的多党执政。你还别说，在中国要这样也不是不可以。不过前提就是中国就不是中国了，只有中国联邦，中国联盟，那谁谁谁都会争先化为被小美蹂躏小国的吧。您说对了，原因还是中国人多，而且中国还没有发展到好到很多党派来同时治理国家。倘若中国有很多党派如美国并且依然那么统一，试想，就目前的短视（能见度极低）而言，那岂不换一个执政党地皮都会翻转一回。由此由我俩可见，目前的由我党领导的一党专政体制还是很适合15亿中国人的。</p>
<p>&emsp;&emsp;封建社会，中国人也是很多的，要保存自己的DNA并且延续下去也是很激烈残酷的。要想获得更多的生活资料，比如钱财，房屋，女人，在同一个家族里面我们需要表现很好才能获得长辈的肯定。瞧，你也能分析出中国人爱面子的原因了。因为首先在父母长辈眼里，你很厉害，至少比其他八个儿子厉害，你就能获得更多的遗产。（先不考虑嫡出庶出带来的先天地位不均）在女人面前有面子才能让她们觉得爷们儿有让孩子成为亮丽富二代的资本，才能赢得觉得嫁了有面儿的老公自己有面儿的女人的小心脏。在封建体制的官场，拉帮结派，乌纱才可保，有面儿才能赢得更多觉得你很不错，觉得你后台硬的羽翼。要想在官场坐稳位子，同时配合自己遗传物质中的贪婪捞取些民脂民膏，怎么办呢？当然就找人咯，培育关系网啦。把自己的亲戚都弄成官党，肥水怎能流外人DNA。要晋升，上级干嘛用你？他自然要安排自己的亲戚。亲戚安排完了以后，又为什么要用你？当然啦，你给他的礼不匪，从你这里可以捞更多的好。那目光是怎么短浅的呢？因为生活资料争夺太激烈了，要是不在最短的时间里抢夺到最多的东西，那就没有你的分了，哪里还去管持不持续。也许你也有疑问，那些金字塔顶端的人应该有远见了吧。回答是，要有那也得多少代多少代的积累啊。你看中国历史，哪几个朝代不是农民革命成功翻身的啊。处在最底端的人翻身到了塔尖儿，你也别期望他们短时间里就变成目光如炬的人了啊。最终目的只有一个——-在激烈的物质资料争夺战中保全自己的DNA，于是导致了爱面子，自私自利，目光短浅，等等毛病的产生。</p>
<p>&emsp;&emsp;对了还得说说中国人为我独尊的自大形象。从征服了长江黄河流域的始皇帝开始中国历代皇帝为了巩固统治不遗人口食通常都说自己是龙之子或者天子，自己就是神。而很多欧美人都有自己独特信仰，认为人人都是上帝子民人人平等。就算统治者教皇大人也不敢说自己就是神，而说自己只是神的代言人。足以看出中国人是以人为中心以自我为中心相信人定胜天。而别国多是以卑贱之心自视。中国为什么以前当世界的一哥当了那么久，原因除了归功于生产力地下的时代人多力量就大，其次就是以人为本。当然这里的以人为本并不是说人的权利和能动性得到最大限度的利用。相反，几乎所有人都被禁锢在儒家思想所倚仗的封建的严酷的等级制度下。能动性也都限制在很小的范围下，个人发挥的作用也都得到很大的限制。不过相对于人烟稀少的他国，信奉上帝的安排要好很多。他们自然也就无更多作为。但是思想启蒙运动（妻的历史显然要比我好几百倍）以后，某些国的人思想解放了。生产力飞升，我们自然也就不能比了。我们的思想还在干什么呢？雾埋了？</p>
<p>&emsp;&emsp;好了，说到僧多粥少导致爱面子自私自立目光短，那僧少粥多的时候呢？发源于黄河流域的炎黄子孙难道从古猿人开始就多得如京城人一样没房子住？不是的。华夏人为什么那么自大，因为皇帝炎帝联军打败了蚩尤大军。胜王败寇啊。能打败蚩尤自然无所不能啊，信心爆蓬。我们是最厉害的，我们是世界的中心啊。所以我们叫中国。</p>
<p>&emsp;&emsp;好了，最后的最后还是没有弄明白中国人为什么信自己不信上帝。我和妻只能推断，黄河流域土地太肥沃，人们风衣足食，在子孙蓬勃之前没有必要理会太多的不能被解释只能归功于上帝的自然现象而子孙无穷馈以后激烈的生活资料争夺使他们没有时间也无暇考虑那些神乎其神的事情。所以，我们不信上帝，我们也不讲科学。我们讲人。</p>
<p>&emsp;&emsp;然而，我们的人呢？</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>雾霾</tag>
      </tags>
  </entry>
  <entry>
    <title>Win7下格掉Linux盘如何启动windows</title>
    <url>/Win7%E4%B8%8B%E6%A0%BC%E6%8E%89Linux%E7%9B%98%E5%A6%82%E4%BD%95%E5%90%AF%E5%8A%A8windows.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;在win7下用系统的磁盘管理工具把原来的fedora14给格了，然后重启就只能进入grub，试了安装盘修复也不行。</p>
<p>在grub中输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grub&gt;rootnoverify (hd0,0) </span><br><span class="line">grub&gt;makeactive </span><br><span class="line">grub&gt;chainloader +1</span><br><span class="line">grub&gt;boot</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;奏效。进入了windows。然后下载clear mbr （还原清新畅快的mbr，大概格掉了grub）。</p>
<p>然后大功告成。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>grub</tag>
      </tags>
  </entry>
  <entry>
    <title>乱2</title>
    <url>/%E4%B9%B12.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;弯弯曲曲的阳光直直的照进屋外，熟睡的我高兴地蹦起来落在了天花板。窗台上留下了10年以后我的脚印。我重重的摔在软绵绵的岩石上，像蹦极一样来回颠簸。一只尖叫的青蛙从结冰的湖面窜出，湖面结了一个窟窿，天空泛起直直的嶙峋波纹。半空中横陈着的乐者手舞足蹈的吹奏着口中的琵琶，一只只曼妙的如箭的音符射向四周，箭尖着地处开出了美丽的蝴蝶。我泛舟湖底，领略着满天的繁星。一对鱼儿在空中划着拳，输了的那位颐指气使，赢了的那位红了双腮。忽然一阵微风袭来，将我卷进了透明的电话簿。可怜那船儿被卷成了一颗树苗。我花了一立方的时间睁开眼，发现树苗上结满了刀子。我摘下其中熟透了的一把，割下了我的一只脚趾。我将我剩下的部分扔进了雷电，那只脚趾开始慢慢的发了芽。</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>启程去玛雅一</title>
    <url>/%E5%90%AF%E7%A8%8B%E5%8E%BB%E7%8E%9B%E9%9B%85.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;“你不是开玩笑吧蕊。。。哈哈哈。。。”电话那头尖叫起来：“真的替你感到高兴啊。。。”</p>
<p>&emsp;&emsp;“谢谢你萱萱”，蕊高兴的说到，仿佛两只小熊一同分享着超甜的蜜。</p>
<p>&emsp;&emsp;“找到财宝可不要忘了我啊。。。呵呵。。。”电话那头开始寒暄起来，玩笑的说到。</p>
<p>&emsp;&emsp;“当然不会啦，话说，你说的财宝恐怕早已经被别人挖空了。。。哎。。。不管怎么样我一定要找到它的秘密。。。”</p>
<p>&emsp;&emsp;“诶诶诶。。。别认真啊。。。我最怕你认真了。。。想当年念书那会儿你是整天泡在图书馆。要不是老娘当初看你有几分姿色是个可塑之材，把你从学海那个什么深渊旁边拉上来，还不知道你会变成怎么样的书呆子呢。你看看你今天，要风得风，要雨得雨。。。呃。。。尽管还是被学术给套牢了，那至少还是一个知性大龄剩女青年啊。。。”</p>
<p>&emsp;&emsp;“喂喂喂。。。就你厉害，谁也胜不了你的乌鸦嘴行了吧。”</p>
<p>&emsp;&emsp;“话说，你一走我就成孤家寡人了啊。。。这精神损失费你自个儿掂量掂量啊。。。”</p>
<p>&emsp;&emsp;“嗯，知道，我也会想你的。。。”</p>
<p>&emsp;&emsp;“你会想才怪呐。。。改明儿个见了个石头都当情人，你要是会记得我那石头都讲人话了。呵呵。。。”</p>
<p>&emsp;&emsp;电话两头同时响起笑声，房间里的空气也欢乐的共振起来。蕊的眼睛凝神在博古架上的一块透明不规则水晶石上面。那块石头是校领导从美洲带回来的，据说是在蒂卡尔城的金字塔旁边捡的。这块不起眼的石头被其他来自各个地方的地质矿物石头所簇拥着。其他堆满博古架的颜色各异，形态各具的石头都是蕊随地质考察队在野外采集的标本。除了这一块，其他的任何一块石头蕊都知道来历，能道出是形成于哪个地质年代，还能知道每一块石头形成的环境，经历的世事。唯独那块水晶她不知道。不是不知道它的组成——无非是一堆二氧化硅晶体；也不是不明白它的生长条件—–要有足够的压力和温度，最重要的是硅酸盐富集液。令她不安的是她不知道这块水晶长在哪块晶洞，被来自哪里的营养液滋养。也就是说她不知道这块水晶的家在哪里，不知道这块水晶的“父母”是谁，就像她自己一样。在她看来每块石头都是鲜活的生命，都能够和她对话。其他蕊亲手收集的标本石头都是开朗活泼的，而这一块从来到她的这个小公寓里尽管与满屋的书香，满屋的石气书香气混在一起，但是从来都显得格格不入，因为与其他石头不同伴随着它的是孤独和无助。看到这块水晶就像蕊看着天真无助的自己。尽管所有其他石头都是她亲手挖掘、把玩、测量，像极了自己的孩子，然而这一块却像极了自己。对于孩子她可以献出所有，然而对于自己她却无所适从。</p>
<p>&emsp;&emsp;“对了，你哪天的飞机啊？”电话中的询问把蕊拉回现实。气氛变得严肃了一秒钟。</p>
<p>&emsp;&emsp;“哦，具体时间我还不清楚，公司那边安排的专机，到时候会通知我的。” </p>
<p>&emsp;&emsp;“专机啊，小妮子还真气派啊。。。能不能捎上我啊？小女子给您烧火做饭暖床，如何啊？”</p>
<p>&emsp;&emsp;“我倒是想啊，不过这次经费全是高德公司提供，所以一切都得听他们安排。仪器、资料、行李什么的据说都不用带，带上我的人就够了。”</p>
<p>&emsp;&emsp;“听起来怎么那么像包养啊？我仿佛看到了李美美啊。。。”</p>
<p>&emsp;&emsp;“狗嘴里果然是吐不出象牙来。。。”</p>
<p>&emsp;&emsp;呵呵呵。房间里又是一通笑声。两人许久未长聊，如今相谈甚欢。萱萱的存在能够些许的慰藉她的孤独的心。</p>
<p>&emsp;&emsp;“人家为什么要给你经费啊？哦，我明白了，不是仰慕你的文材学问就是为了劫色。哈哈哈。。。”</p>
<p>&emsp;&emsp;“都是我争取来的啊。。。是我的梦想。。。他们看了我的关于玛雅文明的研究论文，觉得很出色。。。”其实在蕊的心里，她更觉得这是她的宿命。</p>
<p>&emsp;&emsp;“得得得，又来劲了不是。”</p>
<p>&emsp;&emsp;高德司这家跨国企业为了加强与南美州国家经贸关系才有此次的投入。蕊清楚高德司是做古董生意，在签合同前她对这家公司做了仔细的调研。认为其还算是一家合法正当的盈利机构，并没有收购非法国家珍宝的勾当，更没有联合盗墓贼做见不得光的事。</p>
<p>&emsp;&emsp;“好了，时间不早了，我也不打搅你科研了，大科学家。” </p>
<p>&emsp;&emsp;“我才不是什么大科学家呢。。。算了不和你说了，改天吃践行饭再细说。好了，晚安。。。”</p>
<p>&emsp;&emsp;蕊挂了电话，忽然想起住在疗养院的母亲。母亲是孤儿院的老院长，在疗养院已经住了有十年。十年前操劳过度的母亲患上了帕金森综合症，也就是老年痴呆。以前的所有事情都不记得，连亲手带大的孩子也不记得。要是母亲没有生病就好了，她想，没有病的话说不一定还能记得我的可恶的生生父母是谁，还记得我的身世。不过母亲生病前她也问过，她并不知道她的身世，只知道一天她莫名其妙就出现在孤儿院门前，身上连纸条都没有。有时候蕊又忽然觉得自己好可笑。人为什么要知道自己的生生父母是谁？有一个爱自己的养母不是很好吗？有自己喜欢做的事情不是很好吗？尽管如此想着，心里的那一丝绳结仍然解不开。总有一节疙瘩化不开，像是血液里的一块坚硬的血栓，总是时不时的碰撞她的柔软的心脏瓣膜。</p>
<p>&emsp;&emsp;她翻看着《失落的印加文明》，书的扉页已被她翻得发黄，可仍然找不到她想要的答案。因为除了那块石头的秘密，她还有许多的疑问：玛雅文明、阿兹特科帝国、印加帝国曾经如此辉煌为何轻易被蛮夷的西班牙人摧毁？印加帝国的国徽为什么看起来似曾相似？为什么三个文明都隐藏于深山，放着广袤的平原不去利用？关于2012灭亡的预言是他们的历法的错误还是他给后代人的玩笑？好多好多的疑问等待她去揭示，像揭开美丽新娘的面纱。</p>
<p>&emsp;&emsp;算了，她和上了书，心里即期待又兴奋，终于有机会亲自去揭露这些秘密了。</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
  </entry>
  <entry>
    <title>血色乎浪漫</title>
    <url>/%E8%A1%80%E8%89%B2%E4%B9%8E%E6%B5%AA%E6%BC%AB.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;人活着该削平自己将自己融入社会大染缸，还是该看清事实从中跳出来，或者该坚持自我暴力抵抗，还是怀揣着希望守护自己的安全岛？</p>
<p>&emsp;&emsp;《血色浪漫》里面所演绎的人生几乎统统都是悲剧。剧中毫不夸张甚至说是完全真实的展示了几乎社会所有阶层人的艰苦历程（不管是心灵的还是肉身的。），尽管我们不敢说自己能完全体会到其他阶层人的艰辛和苦难，也不能全体会他们的心情。不过作为一个观影的旁观者，作为一个血色的参与者，我们能感受到的是那种骨子里的无奈。“阶层”，这个词说起来如此顺口，但听起来却如此刺耳。这是出生在中国大地的人们一出生就有的东西，烙在骨头上，烂在骨髓里头的东西。“阶层”演化和包装下成为如今的“拼爹”。李奎勇说的那个时代自己能干的大概和自己的爹干的差不多。大概就是这个意思吧。我已经不想去讨论这个社会变态到什么样子（又或者变态的只是我）。</p>
<p>&emsp;&emsp;主人公钟跃民有个“好爹”所以遇事都有权贵相扶。但他终究没有超人的能力能够与这个变态的恶魔抗争。然而这些变态的特质与他的自由的人生价值观（这是他的么？不是每个人都有的么？）相背离。他选择的路是不屈服，但却无作为。这个恶魔无处不在，只要与人打交道，他就来骚扰你，甚至吃了你。在现实生活中，钟跃民无处遁形，他只能逃避。逃到隔壁沙漠，人越少越好。然后最好还有一批被这个社会排斥并且定义为罪无可恕的恶徒可以作为他发泄情绪的消遣对象。他无法让自己屈服于怪兽的淫威，甚至连与怪兽有关的人都成为他惧怕的对象，所以他几乎不可能“接受”任何人（朋友除外哦）。</p>
<p>&emsp;&emsp;宁伟是个危险分子， 我们每个人身上大概都有像宁伟性格这样的不安分情绪。面对变态社会的侵蚀，他的作为是奋力的充满暴力的反抗斗争。就像被变态的父母养大的孩子孕育出的暴戾性格。只要给它合适的契机他就会破壳而出，势不可挡的占据你的全部。不过剧末告诉我们一个残酷的事实：不管你有多暴力，那个变态的恶魔终究会把你像蚂蚁一样捏得粉碎，连骨灰都不剩下。</p>
<p>&emsp;&emsp;大多数出现在剧中的人无非都是平凡的小市民，农民，工人。面对猛兽，他们并没有十足的精神洁癖，没有表现出臣服并且屈居人下的怨念。又或者因为他们的精神领地被恶魔消磨殆尽。他们有的只是一副孱弱的驱壳，经受着怪物实施的各种残酷的刑罚，按部就班的服刑着妖魔的窑役。</p>
<p>&emsp;&emsp;这个妖魔势力过于强大，我们都不能逃脱，更没有力量去战胜。然而于众人的道路中，我们愿选择怀揣希望的活法。就像郑桐与蒋碧云。不管这个希望是自欺欺人还是一片渺茫，尽管在削平了自己成为恶魔的狗腿子的人的眼里他们是傻的可爱，蠢的可怜。但只要有固执的希望扎根，他们过的尽快清苦，但却乐在其中。 </p>
<p>&emsp;&emsp;有一种情是慰藉，是救命稻草，那就是友情。钟跃民什么都想抛弃，唯独友情伴随其左右。可能如果周晓白不牵挂，李奎勇不出现，宁伟不出事，高钥不守候，钟可能会提早出家修行。不，也许是因为李奎勇去世，宁伟赴黄泉才促使钟对社会丧失了希望。友谊无价那是因为没有负担。又或者双方彼此都是被欺压的奴隶，一起生活就像出生入死的战友。然而这种好的战友，好的精神慰藉是可遇而不可求的。</p>
<p>&emsp;&emsp;生活并不可怕，有了恶魔才慎人。恶魔在世为生活涂上了血色。怀揣着希望于血色中找寻浪漫。</p>
]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>电视剧</tag>
      </tags>
  </entry>
  <entry>
    <title>跟伴</title>
    <url>/%E8%B7%9F%E4%BC%B4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;这是一种路上游荡的魂魄。</p>
<p>&emsp;&emsp;因为生前性格孤僻十分孤单，没有一个朋友，所以容易走极端。遇到人生的重大挫折没有地方需求帮助，没有人来帮忙分担，最后在绝望中选择各种手段结束自己的生命。</p>
<p>&emsp;&emsp;死后由于怨气未散，所以不愿到阴曹，傍晚十分喜欢在偏僻小路上飘荡。</p>
<p>&emsp;&emsp;最喜欢跟踪单独一个人行走的路人。通常能感知孤独，可化作路人的熟人面目，但又让路人无法辨认出是哪个人。路人若是回头发现，并且警觉，快速行走。。。</p>
<p>&emsp;&emsp;当路人以为自己已经甩开跟踪者，回头看时。。。什么也看不见。。。。。。因为跟伴紧贴着路人的后背。。。。。。他露出诡异的笑。。。准备把你拉到阴间。。。作伴。。。</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>妖怪</tag>
      </tags>
  </entry>
  <entry>
    <title>这个网站是怎么来的</title>
    <url>/how-I-build-this-web.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目的：心血来潮，漫无目的。<br>方法：利用Hexo+Github构建。<br>花费：1块钱用于腾讯云买域名+6块用于阿里云买域名+宝宝睡了之后的晚上。<br>用途：好记性不如烂笔头。用手敲敲还可锻炼一下。<br>时间：2020年5月26日晚。<br>步骤：参见<a href="https://cloud.tencent.com/developer/article/1423783">这里</a>，具体如下：</p>
<span id="more"></span>
<h2 id="一、建立repo"><a href="#一、建立repo" class="headerlink" title="一、建立repo"></a>一、建立repo</h2><p>建一个和自己的github用户名一样的repo。</p>
<h2 id="二、安装必要的程序"><a href="#二、安装必要的程序" class="headerlink" title="二、安装必要的程序"></a>二、安装必要的程序</h2><p>需要安装的程序有Git，node.js，hexo</p>
<h3 id="1，安装Git"><a href="#1，安装Git" class="headerlink" title="1，安装Git"></a>1，安装Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt install git</span><br></pre></td></tr></table></figure>
<h3 id="2，安装node-js"><a href="#2，安装node-js" class="headerlink" title="2，安装node.js"></a>2，安装node.js</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt install nodejs </span><br></pre></td></tr></table></figure>
<h3 id="3，安装hexo-初始化"><a href="#3，安装hexo-初始化" class="headerlink" title="3，安装hexo&amp;&amp;初始化"></a>3，安装hexo&amp;&amp;初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo</span><br><span class="line">$ hexo init [<span class="built_in">dir</span>] <span class="comment">#当前目录或新建[dir]</span></span><br></pre></td></tr></table></figure>
<h2 id="三、设置"><a href="#三、设置" class="headerlink" title="三、设置"></a>三、设置</h2><h3 id="1，设置文件为-config-yml，自行修改例如"><a href="#1，设置文件为-config-yml，自行修改例如" class="headerlink" title="1，设置文件为_config.yml，自行修改例如"></a>1，设置文件为_config.yml，自行修改例如</h3><p>title 博客名字<br>subtitle 副标题<br>author 作者<br>等等。遇到问题多看看<a href="https://hexo.io/zh-cn/docs">hexo的官方文档</a>。</p>
<h3 id="2，主题配置"><a href="#2，主题配置" class="headerlink" title="2，主题配置"></a>2，主题配置</h3><p>想要自己的博客好看那就需要配置主题theme,我用的是Next。<br>具体设置可以到google搜索关键字hexo+next。</p>
<h2 id="四、部署网站到github"><a href="#四、部署网站到github" class="headerlink" title="四、部署网站到github"></a>四、部署网站到github</h2><h3 id="1，在-config-yml中添加"><a href="#1，在-config-yml中添加" class="headerlink" title="1，在_config.yml中添加"></a>1，在_config.yml中添加</h3><p>deploy:<br>  type: git<br>  repository: <a href="https://github.com/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97.github.io.git">https://github.com/你的名字/你的名字.github.io.git</a><br>  branch: master </p>
<h3 id="2，安装部署工具"><a href="#2，安装部署工具" class="headerlink" title="2，安装部署工具"></a>2，安装部署工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git  --save</span><br></pre></td></tr></table></figure>
<h3 id="3，发布"><a href="#3，发布" class="headerlink" title="3，发布"></a>3，发布</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>现在可以打开网址：你的名字.github.io访问。</p>
<h2 id="五、绑定域名"><a href="#五、绑定域名" class="headerlink" title="五、绑定域名"></a>五、绑定域名</h2><h3 id="1，购买域名"><a href="#1，购买域名" class="headerlink" title="1，购买域名"></a>1，购买域名</h3><h3 id="2，域名解析"><a href="#2，域名解析" class="headerlink" title="2，域名解析"></a>2，域名解析</h3><p>找到域名解析选项添加两条记录:<br>CNAME www 你的名字.github.io<br>CNAME @ 你的名字.github.io</p>
<h3 id="3，添加CNAME文件"><a href="#3，添加CNAME文件" class="headerlink" title="3，添加CNAME文件"></a>3，添加CNAME文件</h3><p>在hexo文件夹的source目录中新建CNAME文件，将你的域名写入。然后就大功告成。<br>完结撒花。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>如何回复审稿人意见？</title>
    <url>/how-to-reply-to-reviewer.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>SCI文章是否得以发表，生杀大权很大一部分都在peer reviewer手上。文章投出去如果收到了审稿人意见，那么恭喜，机会大大的有。那么如何回复审稿人意见就是关键了。下面是一些要点。</p>
<span id="more"></span>
<hr>
<h2 id="主旨"><a href="#主旨" class="headerlink" title="主旨"></a>主旨</h2><ol start="0">
<li>给编辑单独回复意见，说改了哪里，改的用什么标出来的。</li>
<li>对审稿人表示感谢。人家花时间和精力看你的文章，不求回报，指出你的问题和不足让你得到提升让科学进步难道不该感谢?</li>
<li>认真回复编辑和审稿人的每一条意见&#x2F;疑问&#x2F;陈述，具体就是指每一句话，每一个模糊描述，每一个疑问句。</li>
<li>作为意见&#x2F;疑问&#x2F;陈述的回应，必要要在正文稿件中有所体现。以表明对审稿人意见的尊重。</li>
<li>回复的文字量尽量要与审稿人意见差不多，最好更多，但不要重复或者罗嗦，要直接。</li>
<li>尽量不要辩驳(你证据充分，你业界大佬怼人我没意见)，多做工作，审稿人让做的都要尽量测试&#x2F;计算。实在搞不定的就说我们认同你的观点，然而这个还需要未来大量的工作。</li>
<li>文章修改的部分要在回复意见中提及，例如，我们修改了那句话，为“xxx”，或者我们重新描述了该问题在linexxx-xxx。我认为前者更好。这样做是为了免得审稿人再去看你的文章。浪费人家时间不说，万一给你整更多问题就哈皮了。</li>
<li>大修修改文章50%以上，中修30%以上，小修10%左右，显得自己足够认真。话说目前这篇文章已经修改了70%左右了。审稿人意见加回复意见比正文还长。</li>
<li>一般先回应意见，再提及正文做了那些修改。</li>
</ol>
<h2 id="具体"><a href="#具体" class="headerlink" title="具体"></a>具体</h2><ol>
<li>审稿人称赞：感谢鼓励。</li>
<li>审稿人疑问：表示自己表述不清，改。</li>
<li>表示有问题：感谢指出，赞同，承认错误，修改。</li>
<li>迂回的战术：通过充分考虑觉得审稿人的意见有问题，先肯定在部分情况下审稿人的看法是对的。然而。。。。肯定是自己没有描述清楚。改。</li>
</ol>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>如何备份hexo</title>
    <url>/how-to-backup-hexo.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>要是换了电脑网站怎么办？那当然是需要备份的了。u盘什么的，网盘什么的也不错。不过搜到大神的<a href="https://notes.doublemine.me/2015-04-06-%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E6%96%87%E4%BB%B6.html">博文</a>介绍说放到githup的repo里面就可以了。于是试了一下，果然可以啊。步骤如下：</p>
<h2 id="创建github的repository"><a href="#创建github的repository" class="headerlink" title="创建github的repository"></a>创建github的repository</h2><p>创建一个和你的hexo目录一样的repo。我的就是hexo。在hexo主目录下执行如下命令：</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$echo</span> <span class="string">&quot;# hexo&quot;</span> &gt;&gt;README.md</span><br><span class="line"><span class="variable">$git</span> init</span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable">$git</span> add README.md </span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">&quot;README&quot;</span></span><br><span class="line"><span class="variable">$git</span> remote add origin https://github.com/junxie01/hexo.git</span><br><span class="line"><span class="variable">$git</span> push -u origin master</span><br></pre></td></tr></table></figure>

<h2 id="备份-推送"><a href="#备份-推送" class="headerlink" title="备份&#x2F;推送"></a>备份&#x2F;推送</h2><p>每次完成hexo的更新或者新博文的建立就可以运行如下命令进行推送&#x2F;备份。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$git</span> add .</span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">&quot;hexo备份&quot;</span></span><br><span class="line"><span class="variable">$git</span> push origin master</span><br></pre></td></tr></table></figure>

<h2 id="新电脑网站移植"><a href="#新电脑网站移植" class="headerlink" title="新电脑网站移植"></a>新电脑网站移植</h2><p>需要在新电脑写博客需要安装npm，node.js，hexo。然后把github的repo克隆到本地就好了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$git</span> <span class="built_in">clone</span> git@github.com:junxie01/hexo.git</span><br></pre></td></tr></table></figure>

<h2 id="同步本地网站"><a href="#同步本地网站" class="headerlink" title="同步本地网站"></a>同步本地网站</h2><p>当github中的repo有更新时，执行一下命令可以同步到本地。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$git</span> pull origin master</span><br></pre></td></tr></table></figure>

<h2 id="自动推送-备份"><a href="#自动推送-备份" class="headerlink" title="自动推送&#x2F;备份"></a>自动推送&#x2F;备份</h2><p>那位牛人博主还有一篇博文<a href="https://notes.doublemine.me/2015-07-06-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E6%96%87%E4%BB%B6.html">利用nodejs脚本自动备份</a>。我不太懂，省得麻烦。干脆写一个bash脚本(例如do_deploy_push.bash)就可以解决这些问题。脚本如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;backup hexo at `date` &quot;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>在hexo主目录下面运行 bash do_deploy_push.bash就大功告成了。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo免密发布</title>
    <url>/passwd-free-for-deployment.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>每次发布都得输入用户名和密码，挺麻烦费事。网上<a href="https://blog.csdn.net/hhgggggg/article/details/77853665">大神</a>可真多，搜搜就能解决。和ssh登录服务器类似，步骤如下：</p>
<span id="more"></span>
<h2 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h2><p>使用ssh-kergen生成密钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ssh</span>-keygen -t rsa -C <span class="string">&quot;junxie01@gmail.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>一路enter就行了。生成的秘钥在主目录的.ssh&#x2F;id_rsa.pub中。复制一下。</p>
<h2 id="添加Github项目的Deploy-keys"><a href="#添加Github项目的Deploy-keys" class="headerlink" title="添加Github项目的Deploy keys"></a>添加Github项目的Deploy keys</h2><p>在项目junxie01.github.io点击settings–&gt;Deploy keys–&gt;Add deploy key.把拷贝好的秘钥粘贴在这里。然后勾选可写。</p>
<p>测试是否配置成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ssh</span> -T git@github.com</span><br></pre></td></tr></table></figure>
<p>如果出现如下内容则表示配置成功。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi junxie01/junxie01.github.io! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<h2 id="网站设置文件设置"><a href="#网站设置文件设置" class="headerlink" title="网站设置文件设置"></a>网站设置文件设置</h2><p>在网站设置文件deploy字段设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:junxie01/junxie01.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>好了，发布网站时hexo d就不用输入用户名和密码了。大功告成。</p>
<h2 id="Git自带配置文件"><a href="#Git自带配置文件" class="headerlink" title="Git自带配置文件"></a>Git自带配置文件</h2><p>这个方法是针对github的，配置好了推送克隆什么的都万事大吉了。是这位大神<a href="https://www.jianshu.com/p/28efda0555bb">博文</a>里看到的。里面介绍了两种方法，我用的是第一种，因为它看起来更简单。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global credential.helper store  </span><br></pre></td></tr></table></figure>
<p>如果有多个账号什么的去掉–global就好了。为安全性着想还要给store设置一个时限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper <span class="string">&#x27;cache --timeout=3600&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这个我就没有管了。问题不大吧。</p>
]]></content>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next开启打赏</title>
    <url>/reward-configuration.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>厚颜无耻的开始想要打赏。如何配置打赏呢？原来next是有打赏的选项字段的。直接修改主题配置文件如下：</p>
<span id="more"></span>
<p><img src="/donate.png" alt="打赏字段"><br>然后把微信和支付宝的二维码图片放在&#x2F;themes&#x2F;next&#x2F;source&#x2F;images中。然后就大功告成了。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>next网站字数统计</title>
    <url>/word-count.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>想给网站显示字数统计，搜到<a href="https://www.jianshu.com/p/baea8c95e39b">这里</a>。根据说明开始设置。结果网站都差点挂掉。检查了好久也没有发现问题，以为玩完了。然后马上开始重新建hexo。结果还是有问题。后来终于发现在网站设置文件插入功能字段时误插到其他字段导致出错。注销以后问题就修复了。然后又搜索到<a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93670772">这里</a>。没想到搞定了，使用的插件是hexo-symbols-count-time。设置步骤如下：</p>
<span id="more"></span>
<h2 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1. 安装插件"></a>1. 安装插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<h2 id="2-配置文件设置"><a href="#2-配置文件设置" class="headerlink" title="2. 配置文件设置"></a>2. 配置文件设置</h2><p>在网站配置文件中加入如下字段：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true                # 文章字数统计</span><br><span class="line">  time: true                   # 文章阅读时长</span><br><span class="line">  total_symbols: true          # 站点总字数统计</span><br><span class="line">  total_time: true             # 站点总阅读时长</span><br><span class="line">  exclude_codeblock: false     # 排除代码字数统计</span><br></pre></td></tr></table></figure>

<h2 id="3-主题配置文件设置"><a href="#3-主题配置文件设置" class="headerlink" title="3. 主题配置文件设置"></a>3. 主题配置文件设置</h2><p>在主题配置文件加入如下字段：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class="line">  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br><span class="line">  item_text_total: false   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class="line">  awl: 4                   # Average Word Length</span><br><span class="line">  wpm: 275                 # Words Per Minute（每分钟阅读词数）</span><br><span class="line">  suffix: mins</span><br></pre></td></tr></table></figure>

<p>然后大功告成。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>网易博客迁移</title>
    <url>/wangyi-blog-transfer.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;今天想到自己在网易上的博客。翻出来一看，乖乖人家网易在2018年就把博客给停了。估计是看我不在上面更新了，伤心欲绝了吧。笑。</p>
<span id="more"></span>

<p>&emsp;&emsp;我的那些怪文扔了怪可惜的。于是就想都搬到这里来吧。没法直接搬啊。看看网易怎么说吧。可以下载到xml文件里，或者搬迁到Lofter里面。都试一下。xml里面是个啥。果然有博文，但乱码一大堆。咋行。搬到Lofter里面吧。显示得要７天左右。</p>
<p>&emsp;&emsp;好吧，趁此机会在网上搜索吧。我疯狂的搜了从xml到wordpress, 网易到hexo，网易到其他博客，等等等等。为此还在csdn建了自己的账号。因为搜到说可以一键从网易搬到那里。结果迟了啊。这都0202年了，人家的网易搬家功能早都扔了。对了hexo博文都是markdown格式。岂不将xml转换到markdown格式就完美了。</p>
<p>&emsp;&emsp;于是我又疯狂开始搜索xml转移到markdown。倒是搜到了一些有用的。比如<a href="https://zhuanlan.zhihu.com/p/67765274">墨问非名</a>的项目<a href="https://github.com/alicewish/Lofter2Hexo">Lofter2Hexo</a>，<a href="https://himring.top/lofter-expo-repo/">北方之塔</a>的脚本<a href="https://github.com/FromEndWorld/lofter2Jekyll">lofter2Jekyll</a>。两个程序的名字居然一样叫readxml。这本来没啥问题。</p>
<p>&emsp;&emsp;问题是我的网速慢啊。程序名字一样是我安装好之后才知道的啊。安装其中一个结果安装好久。安装空挡就看了另一个，也来试一下。开了两个terminal同时安装两个程序。有些依赖包啊什么的没安装。于是又另开两个terminal继续安装。搞了半天，真的搞了半天。因为中间吃饭去了。</p>
<p>&emsp;&emsp;然后我也不记得哪个安装好了。算了先看看网易博客有没有导入到Lofter里面吧。点开看，完成了。太好了，下载了Lofter的xml文件。看起来还不错。然后，试试吧。不知道用的哪个readxml，总之是把某个程序的windows文本结果的\r换成Linux以后就可以用了。然后就试了。果然可以，虽然有几张图没有下载下来。不过没关系了。</p>
<p>&emsp;&emsp;我迫不及待的打开了LOFTER文件夹中的md文件查看。我的乖乖，全都是乱码。title乱码，标签乱码，日期是今天。简直没办法看。此外我的博文显示有270篇，转换过来只有220篇，估计还有50多篇都被认为不和谐吧。但我写的东西很和谐啊。一点也不愤青。</p>
<p>&emsp;&emsp;心想，算了。嘴巴也说算了。妻说，别。以后整理出来可以给儿子看看啊。</p>
<p>&emsp;&emsp;于是晚上娃睡了以后花了一个多小时，才搬了40篇到这里来。下次再继续吧。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>网易</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo图片显示</title>
    <url>/show-picture-in-hexo.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>网站上没有图片是不行的，无图无真相。解决办法在<a href="https://blog.csdn.net/qq_38148394/article/details/79997971">这里</a>，主要是利用了插件hexo-assrt-image。所以先安装这个插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<p>安装完以后将网站配置文件的post_assrt_folder字段的值改为true。每次在利用hexo new name 建新文章时，在source&#x2F;_posts目录下会生成一个name的文件夹。把要调用的图放在该文件夹里，写文章的时候直接用该图的名字进行调用就行了。像这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![插图](a.png)</span><br></pre></td></tr></table></figure>
<p>大功告成。</p>
<p>后来听来的说要让google搜到自己，博客的层级就不能太多。于是将</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: :year/:month/:day/:title/</span><br></pre></td></tr></table></figure>
<p>改为了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: :title.html</span><br></pre></td></tr></table></figure>
<p>结果图片怎么都显示不了。果然permalink和post_assrt_folder是相互影响的。最后还得改回来。结果又不行了。将node_modules&#x2F;hexo-asset-image&#x2F;index.js替换一下<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.csdn.net/xjm850552586/article/details/84101345
">[1]</span></a></sup>然后才行。</p>
<p>当然我还是喜欢简洁一点的地址。我又将permalink改为了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: :title.html</span><br></pre></td></tr></table></figure>
<p>如此，在运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p>的时候程序会将图片拷贝到public&#x2F;name 下面。然而，引用的时候图片的地址会变为blogip&#x2F;image.png自然就无法显示。<br>在node_modules&#x2F;hexo-asset-image&#x2F;index.js里可以看到这句话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br></pre></td></tr></table></figure>
<p>表明图片的地址是blogip+link+图片名称。所以这里是link出错了。<br>在link赋值的部分找到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;</span><br><span class="line">var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;</span><br><span class="line">link = link.substring(beginPos, endPos);</span><br></pre></td></tr></table></figure>
<p>之前的link是博客的位置。begionPos是’&#x2F;‘在link中第三次出现的位置下一位。这个定义是我需要的。endPos就不需要了。<br>所以改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">link = link.substring(beginPos);</span><br></pre></td></tr></table></figure>
<p>然后link后面没有’&#x2F;‘，就加一个：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">link = link.concat(&quot;/&quot;);</span><br></pre></td></tr></table></figure>
<p>然后图片位置就准备了。然后就大功告成。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://blog.csdn.net/xjm850552586/article/details/84101345<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>历史和反演</title>
    <url>/history-and-inversion.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;研一的时候上过一节外系的选修课。现在已经想不起来是什么课了。那为啥我还记得这个课呢？</p>
<span id="more"></span>

<p>&emsp;&emsp;有两个原因，第一，课上有一个女生的眼睛比较好看。这千万不要被老婆发现了(嘘)。另一个重要原因就是老师布置了一个讨论作业。</p>
<p>&emsp;&emsp;说是十年前有一个地区要建垃圾处理场。政府的意思是要建，大部分群众的意见是不建。具体老师让我们讨论什么记不太清了。我起来回答，第一，群众是愚昧的；第二，历史就像反演一样。过了十年了，当时的很多事情我们是不清楚的。有个同学起来反驳我说，历史怎么是不清楚的呢？历史资料是很清楚的啊。</p>
<p>&emsp;&emsp;其实历史就和反演一样。我们记录的资料只是历史当中的很小一部分。就像地球物理里的观测资料，台站稀疏，资料就少。另外历史是人记录的，难免带有感情色彩，主观因素。就像地震仪器会有仪器响应。知道了仪器响应还可以反卷积掉，那人为因素怎么定量，如何扣除？</p>
<p>&emsp;&emsp;历史是无法回去重新观摩的，就像是地下介质的结构基本没有办法挖进去一探究竟。以记录到的少量资料想要去描绘历史图景，与反演过程一样，是具有非唯一性的。因而我们并不知道真正的历史是什么样的。我甚至认为作为历史参与者的我们，连此时此刻发生的事情的全貌都不清楚，就更别提不是我们书写也不是我们缔造的历史了。</p>
<p>&emsp;&emsp;反演和历史是一样的。忽然想到一个可怕的比喻－－历史就像是任人打扮的小姑娘。由于这个非唯一性，大家拿到了一部分资料就可以按照自己的理解，站在自己的角度，根据自己的学识，经验，立场去解释历史。反演不也是这样吗？你拿到一部分资料来做一个反演，反演出结构或震源机制，便可给一通解释。他也可以。要是解释的人位高权重，或者权威泰斗，那大伙儿就信了。但事实真的就是这样的吗？</p>
<p>&emsp;&emsp;有人说，没有一个模型是对的，只有有些是有用的，是有参考价值的。</p>
]]></content>
      <categories>
        <category>乱笔</category>
      </categories>
      <tags>
        <tag>反演</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title>Eric的趣事</title>
    <url>/funny-thing-about-Eric.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;记录一下儿子好玩的事情，以免以后忘记了。以后他看到应该会觉得好玩吧。</p>
<span id="more"></span>

<h2 id="Eric的深刻发问"><a href="#Eric的深刻发问" class="headerlink" title="Eric的深刻发问"></a>Eric的深刻发问</h2><p>Eric四岁零两个月，一些问题问的特别深刻啊。得好好引导一下，说不定未来成为科学家了。笑。</p>
<ol>
<li>我们为什么能看到五颜六色的东西？</li>
<li>为什么地球会转？</li>
<li>为什么会有白天和晚上？</li>
<li>人是从哪里来的？</li>
<li>我们什么时候死啊？</li>
</ol>
<h2 id="Eric的优秀品质"><a href="#Eric的优秀品质" class="headerlink" title="Eric的优秀品质"></a>Eric的优秀品质</h2><p>Eric有好多优点。罗列一些想到的如下：</p>
<ol>
<li>每次都说Lady first让妈妈先尝东西，先进门。</li>
<li>爱分享食物。</li>
<li>爱帮忙。会说，妈妈需要我帮忙吗？每次叫他帮忙他总会帮。</li>
<li>爱干净，玩完玩具一般都会分类收拾。有一丝垃圾都会扔到垃圾桶。</li>
<li>爱看故事书。有时候自己一个人抱着书看。</li>
<li>记忆力不错，读了挺久的英文书还记得一些句子。</li>
<li>英文比较可以了，有时和我只讲英文。一般自己玩玩具自言自语都讲英文。</li>
<li>每次结巴完了之后，语言能力就会有比较大的提升。这次又开始结巴了。</li>
<li>刷牙习惯很好。每天都自己刷。</li>
<li>Eric可以自己擦屁股了。</li>
<li>很早就开始自己穿脱衣服和鞋子了。</li>
<li>很早就开始自己吃饭了。</li>
<li>十分会拼乐高玩具。比较有创意。</li>
<li>意志力比较坚定。说好了买ninjago的船一直都念着。</li>
<li>钝感力比较高。能吃亏。</li>
</ol>
<h2 id="Eric的不足之处"><a href="#Eric的不足之处" class="headerlink" title="Eric的不足之处"></a>Eric的不足之处</h2><ol>
<li>有些时候有些着急。完成不了东西就叫唤，烦躁。可能是小孩子的通病。</li>
<li>有些时候会动手动脚，激动了会打人。可能小孩子比较难以控制。</li>
<li>有些时候有点拖沓，比如每次让洗澡都拖的比较久。</li>
<li>有时候情绪不太稳定。不开心的时候沉默不语。可能语言和情绪控制能力还没有发育好。</li>
<li>过于喜欢乐高玩具，天天都想买，天天抱着手机搜乐高玩具，收藏，说要买。</li>
</ol>
<p>&emsp;&emsp;希望宝宝越长越好。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>儿子</tag>
      </tags>
  </entry>
  <entry>
    <title>我对这个博客做了什么</title>
    <url>/what-did-I-do-to-this-blog.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;原本是想记笔记，写一些技术性的东西。然而现在为止好像还没有干啥正事。那我对这个博客做了些什么呢？干了这些：</p>
<span id="more"></span>

<h2 id="重新配置"><a href="#重新配置" class="headerlink" title="重新配置"></a>重新配置</h2><p>按<a href="/how-I-build-this-web" title="这个网站是怎么来的">这个步骤</a>重新配置了一遍。之前不知道从哪里下载的一个山寨版还是啥的，应该是老版本，很多东西都没有。所以重新下载了最新版本。折腾了好久。对了，还干了好多无用功。网上搜来的很多教程版本都比较老。别马上按着别人的办法干，先看看主题的配置文件，或官方的文档。</p>
<h2 id="插入脚注"><a href="#插入脚注" class="headerlink" title="插入脚注"></a>插入脚注</h2><p>请参见此神仙<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/kchen0x/hexo-reference
 ">[1]</span></a></sup>。 </p>
<h2 id="封面模式"><a href="#封面模式" class="headerlink" title="封面模式"></a>封面模式</h2><p>参见<sup id="fnref:11"><a href="#fn:11" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/fuchen/hexo-less
">[11]</span></a></sup>。下载这个插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-less</span><br></pre></td></tr></table></figure>
<p>语法是在封面后面加上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--less--&gt;</span><br></pre></td></tr></table></figure>
<p>这样前面的部分不会显示到文章主题部分。可以搞一张图片就完美了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![封面](图片地址)</span><br><span class="line">&lt;!--less-&gt;</span><br></pre></td></tr></table></figure>

<h2 id="设置标签云"><a href="#设置标签云" class="headerlink" title="设置标签云"></a>设置标签云</h2><p>按照这位大仙<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.csdn.net/Aoman_Hao/article/details/89416634
 ">[3]</span></a></sup>的操作弄好了标签云，但是发现它不在正中啊。于是找到了tag cloud的<a href="https://github.com/MikeCoder/hexo-tag-cloud">github</a>。里面有一句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;canvas width=&quot;250&quot; height=&quot;250&quot; id=&quot;resCanvas&quot; style=&quot;width:100%&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>那个100%前面是一个冒号，而大仙<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.csdn.net/Aoman_Hao/article/details/89416634
 ">[3]</span></a></sup>写做等号。我发现等号就偏右边，冒号就在正中，很奇怪。</p>
<h2 id="侧边栏圆角"><a href="#侧边栏圆角" class="headerlink" title="侧边栏圆角"></a>侧边栏圆角</h2><p>搜索到这位大神<sup id="fnref:8"><a href="#fn:8" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="http://eternalzttz.com/hexo-next.html
 ">[8]</span></a></sup>。我的Scheme选的是Pisces，所以先在next&#x2F;source&#x2F;css&#x2F;_variables&#x2F;Pisces.styl里面改一下变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$border-radius                    = 5px;</span><br></pre></td></tr></table></figure>
<p>然后到next&#x2F;source&#x2F;css&#x2F;_schemes&#x2F;Pisces&#x2F;_layout.styl里面的.header-inner(对应菜单栏)字段改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">border-radius: $border-radius;</span><br></pre></td></tr></table></figure>
<p>在.content-wrap(对应文章页面)字段改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">border-radius: $border-radius;</span><br></pre></td></tr></table></figure>
<p>如此改完，然后……不对劲。在主页菜单栏和文章页面确实变圆角了，然而站点概况不是圆角。然而往下拖动，直到看不到菜单栏的时候，站点概况就变圆角了，不能忍。所以可能还要改siderbar字段。可惜_layout.styl里面木有。诶，我发现有next&#x2F;source&#x2F;css&#x2F;_schemes&#x2F;Pisces&#x2F;_sidebar.styl文件。打开看。果然找到了。.sidebar字段是没有border-radius变量的，于是我添加了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">border-radius: $border-radius;</span><br></pre></td></tr></table></figure>
<p>除此以外，还看到了.sidebar-inner字段。也一并改了。这下就大功告成了。忘了说。这些字段的另一个变量是background，把它替换成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">background: rgba(255,255,255,0.9);</span><br></pre></td></tr></table></figure>
<p>就可以让博客变透明了。</p>
<h2 id="站内引用语法"><a href="#站内引用语法" class="headerlink" title="站内引用语法"></a>站内引用语法</h2><p>这样:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link post_name %&#125;</span><br></pre></td></tr></table></figure>
<p>出来默认是博文题目，或者自己取个名字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link post_name 点击查看%&#125;</span><br></pre></td></tr></table></figure>

<h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>同样来自这位大神<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.csdn.net/as480133937/article/details/100138838
 ">[2]</span></a></sup>。最重要的是找到自己喜欢的图片放在next&#x2F;source&#x2F;images里，然后在next&#x2F;_config.yml里这样干就好了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/j-icon-16x16.png</span><br><span class="line">  medium: /images/j-icon-32x32.png</span><br><span class="line">  apple_touch_icon: /images/icon.png</span><br><span class="line">  safari_pinned_tab: /images/icon.png</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="首页文章加框"><a href="#首页文章加框" class="headerlink" title="首页文章加框"></a>首页文章加框</h2><p>设置请查看<a href="/how-to-add-frame-in-hexo-next" title="hexo next首页文章加框">hexo next首页文章加框</a></p>
<h2 id="添加版权信息"><a href="#添加版权信息" class="headerlink" title="添加版权信息"></a>添加版权信息</h2><p>根据此大仙<sup id="fnref:5"><a href="#fn:5" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://wylu.me/posts/e0424f3f/
 ">[5]</span></a></sup>的说明弄好了以后，发现署名”前面的cc图标老是乱码（一个叉）。那怎么可以，弄了半天没弄好。结果人家next已经集成了。在next&#x2F;_config.yml里面这样就好了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h2 id="加动态背景图片"><a href="#加动态背景图片" class="headerlink" title="加动态背景图片"></a>加动态背景图片</h2><p>根据这位大仙<sup id="fnref:7"><a href="#fn:7" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.diqigan.cn/posts/add-background-picture-for-next.html 
 ">[7]</span></a></sup>的方法弄的。<br>动态图片感觉太慢了。我在百度下了一个，有阳光森林，人，牛。感觉还不错，希望不要侵权。</p>
<h2 id="点击头像回到主页"><a href="#点击头像回到主页" class="headerlink" title="点击头像回到主页"></a>点击头像回到主页</h2><p>设置请查看<a href="/avatar-to-homepage" title="hexo next点击头像回到主页">这篇文章</a></p>
<h2 id="永久链接permalink"><a href="#永久链接permalink" class="headerlink" title="永久链接permalink"></a>永久链接permalink</h2><p>参见<sup id="fnref:10"><a href="#fn:10" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/Rozbo/hexo-abbrlink
">[10]</span></a></sup>。首先安装程序：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>
<p>然后在_config.yml中设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: posts/:abbrlink/</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32</span><br><span class="line">  rep: hex</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: false # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: false # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>

<h2 id="footer添加运行时间"><a href="#footer添加运行时间" class="headerlink" title="footer添加运行时间"></a>footer添加运行时间</h2><p>参见<sup id="fnref:9"><a href="#fn:9" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://www.93bok.com/Hexo网站运行时间添加/
">[9]</span></a></sup>。找到&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.swig，在里面添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=&quot;timeDate&quot;&gt;Loading days...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;Loading sec....&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt= new Date(&quot;05/26/2020 00:00:00&quot;);</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;Running safely for: &quot;+dnum+&quot; d &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; h &quot; + mnum + &quot; m &quot; + snum + &quot; s&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>本来大神<sup id="fnref:9"><a href="#fn:9" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://www.93bok.com/Hexo网站运行时间添加/
">[9]</span></a></sup>是写的中文，但我的出来是乱码，就改成了英文了。</p>
<h2 id="字数和阅读时长统计"><a href="#字数和阅读时长统计" class="headerlink" title="字数和阅读时长统计"></a>字数和阅读时长统计</h2><p>请参见<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/theme-next/hexo-symbols-count-time
 ">[4]</span></a></sup>，或者请查看<a href="/word-count" title="next网站字数统计">next网站字数统计</a>。</p>
<h2 id="添加google广告到post"><a href="#添加google广告到post" class="headerlink" title="添加google广告到post"></a>添加google广告到post</h2><p>参见<sup id="fnref:6"><a href="#fn:6" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://juejin.im/post/5c95d230e51d45124e35cef6#comment
 ">[6]</span></a></sup>。</p>
<h2 id="隐藏网页底部-powered-By-Hexo"><a href="#隐藏网页底部-powered-By-Hexo" class="headerlink" title="隐藏网页底部 powered By Hexo"></a>隐藏网页底部 powered By Hexo</h2><p>股沟出此大神<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://blog.csdn.net/as480133937/article/details/100138838
 ">[2]</span></a></sup>的方法。<br>但事实上next已经集成了这个功能，直接在next&#x2F;_config.yml里将powered改为false就可以了，像这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">footer：</span><br><span class="line">   xxx</span><br><span class="line">   powered: false</span><br><span class="line">   xxx</span><br></pre></td></tr></table></figure>



 <div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/kchen0x/hexo-reference<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://blog.csdn.net/as480133937/article/details/100138838<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://blog.csdn.net/Aoman_Hao/article/details/89416634<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/theme-next/hexo-symbols-count-time<a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://wylu.me/posts/e0424f3f/<a href="#fnref:5" rev="footnote"> ↩</a></span></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">6.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://juejin.im/post/5c95d230e51d45124e35cef6#comment<a href="#fnref:6" rev="footnote"> ↩</a></span></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">7.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://blog.diqigan.cn/posts/add-background-picture-for-next.html<a href="#fnref:7" rev="footnote"> ↩</a></span></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">8.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">http://eternalzttz.com/hexo-next.html<a href="#fnref:8" rev="footnote"> ↩</a></span></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">9.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://www.93bok.com/Hexo网站运行时间添加/<a href="#fnref:9" rev="footnote"> ↩</a></span></li><li id="fn:10"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">10.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/Rozbo/hexo-abbrlink<a href="#fnref:10" rev="footnote"> ↩</a></span></li><li id="fn:11"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">11.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/fuchen/hexo-less<a href="#fnref:11" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>不继续搬迁网易博客了</title>
    <url>/no-more-blog-transfer.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;那个网易博客太多私人的话题和内容就不往这里搬了。自己也不是明星，八卦什么的也不值钱。这里还是用来记好玩的吧。</p>
<span id="more"></span>

]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>关于写日记</title>
    <url>/about-diary.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;好久都没有写日记的习惯了。今天勉强写一些吧。</p>
<span id="more"></span>

<p>&emsp;&emsp;上周鬼使神差的建了这个个人网站。其实不是心血来潮，是一直都有建站的想法。只是不知道为啥中途就没有建过。可能这次只是收到了来自腾讯云广告的蛊惑。看样子广告还真是有用啊。用处就是让一直没有下定决心的人迈出临门一脚。腾讯云让我耗费了１块钱，但整这个博客的时间花了我一周了。</p>
<p>&emsp;&emsp;今天又不知哪根筋不对劲，忽然想起网易博客里面还有我以前的博文。翻出来看看居然有270多条。从2005年一直到2015年都有。（其中一部分是QQ转移过去的。）看样子我写字的习惯还不错。然而2015年之后就没有怎么写过了。想想也挺可惜的。不过回想自己没有坚持写文字，挺遗憾。可能大约是没有时间吧。</p>
<p>&emsp;&emsp;嗯。也不对。时间从来都是像药膏一样挤挤就会有的。这是借口。文字通常是人用来发牢骚的东西。牢骚多发的猛的就成了巨匠。例如鲁迅。牢骚发的弱的就凑不够字数。我是说每个人都牢骚，有的人发到了文字上，但有些人通过嘴巴，拳头，脑子什么都就发泄完了。大概这些年我的牢骚都从其他地方发了吧。</p>
<p>&emsp;&emsp;以后还想好好发发。不过还是别叫日记的好。自从看到大伙儿对委员长记日记习惯的调侃后就觉得“日记”变了味啊。</p>
<p>&emsp;&emsp;另一个目的就是还是继续写文字锻炼脑子吧。锻炼脑子准没有错的。说不定还能防老年痴呆。</p>
<p>&emsp;&emsp;不过也不要发宏愿，这类东西从来都是麻痹自己，让当时的自己产生多巴胺，且长不大的青少年才玩的玩意。</p>
<p>&emsp;&emsp;所以就这样吧。爱写写写写。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>sed插入和删除匹配行</title>
    <url>/learn-sed.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;sed功能非常强大，利用来处理文本文件不要太爽。要是能熟练掌握，在文本江湖简直随心所欲，无往而不利。我自然也想学学，不过入坑awk有点久。通常习惯了一种方式以后就难以醉心到另一种。这也大约是少林72绝技一般和尚难同时融汇多种的原因吧。一般人也很难精通多个领域。这两天在配置这个博客时遇到一些要对所有post处理的步骤。于是就尝试了sed的用法。倒是很方便。例如：</p>
<span id="more"></span>

<ol>
<li>匹配包含date行，在该行后添加copyright: true。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/date/a\copyright: true&#x27;</span> a.md </span><br></pre></td></tr></table></figure>
<p>在行前添加就把a换做i。</p>
<ol start="2">
<li>删除包含copyright的行。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/copyright/d&#x27;</span> a.md</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>批量处理就这样。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> md <span class="keyword">in</span> *md</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   sed -i <span class="string">&#x27;/copyright/d&#x27;</span> <span class="variable">$md</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;题外话，是不是觉得我找抽啊，插入了copyright之后又删掉。说来话长。我怕有人copy了我的东西不打声招呼，于是就想申明一下许可权益啊版权信息啊什么的（申明之后别人爱拿还得拿）。于是搜索到<a href="https://juejin.im/post/5c7dd8675188251b6406e7b5">上仙</a>那里，根据教程开始弄。过程中就得来个批量处理，用sed添加copyright。结果出来还不错。可谁知那个“署名”前面的cc图标老是乱码（一个叉）。哎呀，我这个暴脾气（洁癖），如何受得了。于是就搜啊搜，怎么才能显示出来呢？结果，啥办法没有。最后只能根据另一位<a href="https://wylu.me/posts/e0424f3f/">上神</a>的教程重新弄了一个简单的主题默认的版权信息。然后就得批处理copyright。啊，世界安静了。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
        <tag>hexo</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让Elementary OS取消自动更新检查</title>
    <url>/stop-os-update.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我的HP笔记本上的Linux系统安装的是Elementary OS。这是个基于Ubuntu的注重界面美观的系统。是挺漂亮的，但几乎每天那个引用中心都会跳出来，帮我检查更新。</p>
<span id="more"></span>
<p><img src="/app.png" alt="应用中心"><br>&emsp;&emsp;这很烦人，尤其是还有出错，不能忍。所以必须让它停止自己更新啊。解决办法是这样。在文件&#x2F;etc&#x2F;apt&#x2F;apt.conf.d&#x2F;10periodic中将第一行的1改为0，成这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">APT::Periodic::Update-Package-Lists &quot;0&quot;;</span><br><span class="line">APT::Periodic::Download-Upgradeable-Packages &quot;0&quot;;</span><br><span class="line">APT::Periodic::AutocleanInterval &quot;0&quot;;</span><br></pre></td></tr></table></figure>
<p>0表示false，自然就不帮您自动更新了。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next首页文章加框</title>
    <url>/how-to-add-frame-in-hexo-next.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我的博客首页的文章列表一直是连起来的，看起来不爽。因而一直在搜索如何加边框，搜出来的是如何添加文章边框阴影效果。看起来也对。于是就开始照猫画虎。</p>
<span id="more"></span>

<p>例如这位<a href="https://www.jianshu.com/p/428244cd2caa">大仙</a>说要在themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_custom&#x2F;custom.styl里面加入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.post &#123;</span><br><span class="line">   margin-top: 0px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;可是我没有custom.styl啊，连_custom文件夹都没有啊。咋办呢？直接建一个呗。建了以后也不行。我还一度怀疑自己的next版本不对，用不了custom.styl。</p>
<p>&emsp;&emsp;后来又搜到这位<a href="https://blog.csdn.net/qq_39119496/article/details/103372437?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">神仙</a>。是这个样子干的。</p>
<p>&emsp;&emsp;在themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post.styl中找到.post-block<br>然后改成这个样子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if xxxxx</span><br><span class="line">.post-block &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">  margin-bottom: 60px;</span><br><span class="line">  padding: 25px;</span><br><span class="line">  -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">  -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line"> &#125;</span><br><span class="line"> .pgaination, xxxx</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;谁知我用的是copy，也没仔细看那个神仙的脚本里面可能估计将post-block中的短横线敲作了下划线。我拷贝过来试了，没用。一度以为这个边框是永远加不上了。谁知今天鬼使神差的对比了一下神仙贴出的图，发现了问题。于是改了过来，结果就可以了。我估计神仙是故意打错了，让我们这些小白出错了长记性。只可惜自己不懂css啊，懂的话就没那么麻烦了。</p>
<p><img src="/frame.png" alt="边框"></p>
<p>&emsp;&emsp;这个边框效果还凑合吧。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>How to install and backup mediawiki</title>
    <url>/install-and-backup-mediawiki.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Meidawiki is a good tool to organise the information and knowledge. I even use it to keep some notes. My first mediawiki was established like in 2012. There are some important informations in my database. Therefore I hope to keep it and run it in every Laptop. This blog keeps the steps on how to install and backup it.</p>
<span id="more"></span>

<h2 id="intall-mediawiki"><a href="#intall-mediawiki" class="headerlink" title="intall mediawiki"></a>intall mediawiki</h2><p>I installed the mediawiki in Elementary OS (Ubuntu), so steps of installing mediawiki are like:</p>
<h3 id="install-dependents"><a href="#install-dependents" class="headerlink" title="install dependents:"></a>install dependents:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apache2 mysql-server php5 php5-mysql libapache2-mod-php5</span><br></pre></td></tr></table></figure>

<h3 id="install-mediawiki"><a href="#install-mediawiki" class="headerlink" title="install mediawiki:"></a>install mediawiki:</h3><p>There are two ways to do that:</p>
<h4 id="The-systematic-way"><a href="#The-systematic-way" class="headerlink" title="The systematic way:"></a>The systematic way:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mediawiki (this will install a low version)</span><br></pre></td></tr></table></figure>

<h4 id="Manual"><a href="#Manual" class="headerlink" title="Manual:"></a>Manual:</h4><p>step1: download an upgraded version:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://releases.wikimedia.org/mediawiki/1.33/mediawiki-1.33.0.tar.gz</span><br></pre></td></tr></table></figure>
<p>extract them and put them into &#x2F;var&#x2F;lib&#x2F;mediawiki</p>
<p>step 2: Create a database ( in mysql )</p>
<ol>
<li><p>Check and see if the database server is running; for example, run </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqladmin status</span><br></pre></td></tr></table></figure>
<p>If it is not, run mysqld_safe to start it: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /usr/local/mysql/bin/mysqld_safe &amp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Set a password for the “root” account on your database server. </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqladmin -u root password yourpassword</span><br></pre></td></tr></table></figure></li>
<li><p>Run the MySQL command-line client: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysql -u root -p</span><br></pre></td></tr></table></figure></li>
<li><p>Run command in the mysql command-line:</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database wikidb;</span><br><span class="line">GRANT ALL ON my_wiki.* TO &#x27;new_mysql_user&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">grant index, create, select, insert, update, delete, alter, lock tables on wikidb.* to &#x27;wikiuser&#x27;@&#x27;localhost&#x27; identified by &#x27;password’;</span><br></pre></td></tr></table></figure>
<p>problem? sometimes this message may show up: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">connection error: Access denied for user &#x27;root&#x27;@&#x27;localhost&#x27; (localhost)</span><br></pre></td></tr></table></figure>

<p>In my case, I found a solvation:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mysql -u root</span><br><span class="line">use mysql;</span><br><span class="line">update user set plugin=&#x27;mysql_native_password&#x27; where User=&#x27;root&#x27;;</span><br><span class="line">flush privileges;</span><br><span class="line">quit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>step3: go to 127.0.0.1&#x2F;mediawiki in your browser, follow the steps.</p>
<h2 id="Back-up-wikidb"><a href="#Back-up-wikidb" class="headerlink" title="Back up wikidb:"></a>Back up wikidb:</h2><p>All information are restored in mySQL database, so backup it with command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -u[user] -p[password] [databasename] &gt; [dump_name]</span><br></pre></td></tr></table></figure>
<p>In my case, it goes like:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -u root -p wikidb &gt;wikidb.mysql</span><br></pre></td></tr></table></figure>
<p>My database is in wikidb.mysql. And I do not want to do this by typing them in the terminal. In replacement, I use crontab, edit crontab:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>
<p>with a new task:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 12 * * 1 mysqldump -u root -p wikidb &gt;/home/junxie/work/wikidb.mysql</span><br></pre></td></tr></table></figure>
<p>This means to run backup command in the noon every Monday.</p>
<h2 id="Restore-a-wikidb-in-a-new-computer"><a href="#Restore-a-wikidb-in-a-new-computer" class="headerlink" title="Restore a wikidb in a new computer:"></a>Restore a wikidb in a new computer:</h2><p>If you move in to another computer, after installing the mediawiki, run the following commend to restore the backup one.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u[user] -p[password] [database_name] &lt; [dump_name]</span><br></pre></td></tr></table></figure>
<p>In my case, it is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p wikidb &lt;wikidb.mysql</span><br></pre></td></tr></table></figure>
<p>Have fun ^_^</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next点击头像回到主页</title>
    <url>/avatar-to-homepage.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;有了头像以后，看到头像一般就想点一点，点击了可以回到主页不是挺好的吗。</p>
<span id="more"></span>
<p>&emsp;&emsp;网上高手还是挺多。例如这位<a href="http://eternalzttz.com/hexo-next.html">上仙</a>说要找到文件&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro&#x2F;sidebar.swig然后做修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ &lt;a href=&quot;/&quot;&gt;</span><br><span class="line">    &lt;img class=&quot;site-author-image&quot; itemprop=&quot;image&quot;</span><br><span class="line">       src=&quot;&#123;&#123; url_for( theme.avatar.url | default(theme.images + &#x27;/avatar.gif&#x27;) ) &#125;&#125;&quot;</span><br><span class="line">       alt=&quot;&#123;&#123; author &#125;&#125;&quot; /&gt;</span><br><span class="line">+ &lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;于是我也这么干。但是，然而，怎么我的sidebar.swig没有这个avatar.gif的语句呢。瞎折腾半天也没明白。后来试了一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find . -name sidebar*</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后找到了themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;sidebar&#x2F;site-overview.swig。在里面做修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ &lt;a href=&quot;/&quot;&gt;</span><br><span class="line">&lt;img class=&quot;site-author-image&quot; itemprop=&quot;image&quot; alt=&quot;&#123;&#123; author &#125;&#125;&quot;</span><br><span class="line">src=&quot;&#123;&#123; url_for(theme.avatar.url) &#125;&#125;&quot;&gt;</span><br><span class="line">+ &lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>Finally, it works.</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>next</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>gmt画时间轴</title>
    <url>/gmt-time-axes.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;有些时候画图需要用到时间轴。gmt<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="gmt版本为5.4.3，运行系统为ElmentaryOS 4.15.0-107-generic.
">[1]</span></a></sup>里面的时间轴是比较简单的。画basemap的时候对于对于rangeR来说加上T就好了。例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-R1990T/1991T/0/1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;就可以画1990年到1991年的图。然后重要的是横轴的标注annotation怎么设置，见下图：<br><img src="/1.png" alt="时间轴单位"><br>&emsp;&emsp;要让这些单位显示出来还涉及到FORMAT_DATE_MAP的设置。其设置如下图：<br><img src="/2.png" alt="FORMAT_DATE_MAP设置"><br>&emsp;&emsp;例如封面的标注就是将FORMAT_DATE_MAP设置成jjj</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gmt set FORMAT_DATE_MAP jjj</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后在B选项用-Bsxa10D。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">gmt版本为5.4.3，运行系统为ElmentaryOS 4.15.0-107-generic.<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>gmt</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>axes</tag>
      </tags>
  </entry>
  <entry>
    <title>如何调用fftw进行Fast Fourier Transform</title>
    <url>/how-to-use-fftw.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我们常常要看信号的振幅谱来进行分析，那傅里叶变换就必不可少。如果水平不错你可以试着自己写。当然有很多已经写好的包，非常方便，例如这里要讲到的fftw<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="http://www.fftw.org/
">[1]</span></a></sup>。</p>
<span id="more"></span>

<p>&emsp;&emsp;他的用法其实人家<a href="http://www.fftw.org/">主页</a>说明文档讲的很清楚。我这里就记录一下怎么用之来对sac文件进行读取并计算fft。程序是用fortran写的，C的话可以参考fftw说明文档。<br>首先把主程序贴出来：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">program main</span><br><span class="line">use globe_data  // 全局变量</span><br><span class="line">use sacio       // sac 头变量</span><br><span class="line">implicit none</span><br><span class="line">integer i,nerr,itest</span><br><span class="line">character (180) :: sacfile,tmp</span><br><span class="line">type(sac_head) :: sachead</span><br><span class="line">complex(8),allocatable,dimension(:) :: s1,s2</span><br><span class="line">if (iargc().ne.2)stop &#x27;Usage: fft sacfile &#x27;</span><br><span class="line">call getarg(1,sacfile)    // 读参数到sacfile，即sac 文件</span><br><span class="line">call read_sachead(trim(sacfile),sachead,nerr) //读sac文件头变量</span><br><span class="line">npts=sachead%npts</span><br><span class="line">dt=sachead%delta</span><br><span class="line">nn=2</span><br><span class="line">npow=1</span><br><span class="line">do while(nn.le.npts)</span><br><span class="line">   nn=nn*2</span><br><span class="line">   npow=npow+1</span><br><span class="line">enddo</span><br><span class="line">nk=nn/2+1</span><br><span class="line">halfn=20</span><br><span class="line">dom=dble(1.0/nn/dt)</span><br><span class="line">allocate(sig(nn,3))</span><br><span class="line">call read_sac(trim(sacfile), sig(:,1),sachead,nerr) //读sac文件数据到sig(:,1)</span><br><span class="line">allocate(s1(nn),s2(nn))</span><br><span class="line">s1=czero</span><br><span class="line">s1(1:npts)=dcmplx(dble(sig(1:npts,1)),0.0d0)</span><br><span class="line">call dfftw_plan_dft_1d(plan,nn,s1,s2,FFTW_FORWARD, FFTW_ESTIMATE)</span><br><span class="line">call dfftw_execute(plan)</span><br><span class="line">call dfftw_destroy_plan(plan)</span><br><span class="line">sachead%npts=nk</span><br><span class="line">sig(:,1)=real(dreal(s2))</span><br><span class="line">call write_sac(trim(sacfile)//&#x27;_fft&#x27;,sig(:,1),sachead,nerr) ! problem with nerr=-1</span><br><span class="line">deallocate(sig,s1,s2)</span><br><span class="line">end program</span><br></pre></td></tr></table></figure>
<p>这里sig(:,:)是个二维数组，其实用一维的就够了哈。<br>sacio.f90 是一个module，定义了sac文件的头，并含有sac读写程序。需要的话给我发信息，或者邮件^_^。<br>globe_data.f90也是一个module，定义了全局变量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module globe_data</span><br><span class="line">integer,parameter :: nmax=2000000,nstmax=1000</span><br><span class="line">real(4),dimension(4,2):: fre</span><br><span class="line">real(4),allocatable,dimension(:,:):: sig,sigo</span><br><span class="line">real(4),allocatable,dimension(:) :: sigt</span><br><span class="line">real :: dt</span><br><span class="line">real(8) :: dom</span><br><span class="line">integer :: halfn</span><br><span class="line">integer :: ncom,comb,npts</span><br><span class="line">integer :: nn,npow,nk,nf</span><br><span class="line">complex(8),allocatable,dimension(:,:):: seisout</span><br><span class="line">complex(8),parameter:: czero=(0.0d0,0.0d0)</span><br><span class="line">integer,parameter :: FFTW_ESTIMATE=64,FFTW_MEASURE=1</span><br><span class="line">integer,parameter :: FFTW_FORWARD=-1,FFTW_BACKWARD=1</span><br><span class="line">integer(8) :: plan,plan1,plan2,plan3</span><br><span class="line">end module</span><br></pre></td></tr></table></figure>
<p>编译需要一个makefile：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC=gfortran</span><br><span class="line">FFLAG=-lfftw3 -I /usr/include -L /usr/lib64 -fbounds-check</span><br><span class="line">objects=call_fft.o sacio.o globe_data.o</span><br><span class="line">all:sacio.mod globe_data.mod call_fft</span><br><span class="line">.f.o:</span><br><span class="line">	$(FC) $(FFLAG) $&lt; -c</span><br><span class="line">%.o:%.f90</span><br><span class="line">	$(FC) $(FFLAG) $&lt; -c </span><br><span class="line">sacio.mod:sacio.f90</span><br><span class="line">	$(FC) $&lt; -c</span><br><span class="line">globe_data.mod:globe_data.f90</span><br><span class="line">	$(FC) $&lt; -c</span><br><span class="line">call_fft:$(objects)</span><br><span class="line">	$(FC) $^ -o $@ $(FFLAG) -lm</span><br><span class="line">clean:</span><br><span class="line">	-rm *.o *.mod </span><br></pre></td></tr></table></figure>
<p>注意这里要加上-lfftw3表示调用fftw，-I给定fftw头的路径，-L给定fftw的lib。如果是按照默认路径安装的fftw，那一般都不用指定-I和-L，因为默认路径一般已经包含在编译环境里了。<br>好了大功告成了，但不保证拷贝下来就能运行通过哦。有问题发邮件吧，我们再交流^_^</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">http://www.fftw.org/<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
  </entry>
  <entry>
    <title>如何访问google</title>
    <url>/how-to-access-google.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;Google产品尤其是Google scholar非常的方便，对于我这种有完美主义倾向，不喜欢山寨的人来讲真的太必要了。但是由于某些原因，在国内上不了google怎么办呢？</p>
<span id="more"></span>
<p>&emsp;&emsp;很早就接触了google，自从墙了以后一直用的是IPv6进行访问，在号称网络配置顶尖的学校表示毫无影响。间或还尝试了一些lantern、firefly之类的，结果这些都是要钱的。去年IPv6也被强墙了。不得已花数十块钱买了一年的梯子（shadowsocks），结果因为特殊原因也给墙了。可怜我的数十块钱啊，才用了几个月，心塞。</p>
<p>&emsp;&emsp;后来左搜右搜终于找到一个很好的方式。就是使用<a href="http://googlehelper.net/">ghelper插件</a>。平时就用它来登录登录邮箱，上上google scholar，虽然稍慢，但非常方便。希望它不要被墙了啊。</p>
<p>&emsp;&emsp;阿弥陀佛。</p>
]]></content>
  </entry>
  <entry>
    <title>现代人的智商在退步</title>
    <url>/IQ-decrease.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;记得有一次和老板一起吃饭聊到一个疑问，就是现代人的智商比起以前的人谁的智商高？</p>
<p>&emsp;&emsp;我记得我的想法是说现代人刺激多，所以感觉上会比以前，特别是古代人会更加聪明。老板的意思，我记得是说不见得现代人就比古代人聪明。我觉得也不无道理，特别是现代人接受太多碎片化的信息，往往难以深入思考问题，专心做事。要是像我所说一直在涨的话也总会有个头的啊，因为人的脑容量就那么多，再刺激也不能说无限的把脑容量给扩大。然而没有调查，谁也下不了结论。</p>
<p>&emsp;&emsp;今天看到一篇发表于PNAS的文章（见封面链接），里面利用1962年到1991年挪威征兵的IQ测试数据分析智商变化。结论是近些年来人们的智商没有增高，反而在倒退。看样子还是老板对啊。笑。当然，这些数据来源于挪威，可能缺乏普遍意义，也许只能说明挪威当兵的人在变笨^_^。要得到较为严谨的结论还需要调研更多其他国家的人，以及时间跨度也得更大。</p>
<p>&emsp;&emsp;话又说回来，IQ是用智力测试测量人在其年龄段的认知能力（“智力”）的分<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://zh.wikipedia.org/wiki/%E6%99%BA%E5%95%86
">[1]</span></a></sup>。他是一个测出来的分数，就有可能有测量误差，此外，测试题是否能真实反应人的智力水平也是一个巨大疑问。</p>
<p>&emsp;&emsp;话话又说回来，IQ测试测准了又怎么样？IQ高能决定人更成功，还是能决定人快乐力更强啊？</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://zh.wikipedia.org/wiki/%E6%99%BA%E5%95%86<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>乱</tag>
      </tags>
  </entry>
  <entry>
    <title>稍稍盘点地幔过渡带研究进展</title>
    <url>/mantle-transition-zone.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;不看不知道，一看吓一跳。地幔过渡带的研究热度要爆表。搜了一下2016年以来的文章，多如牛毛，而且乖乖，都是高影响因子期刊论文。<br><img src="/Picture2.png" alt="部分文献"><br>&emsp;&emsp;老板让想一下以后的方向，关于地幔结构，宜居性，热点。那就地幔过渡带的水咯。<br>&emsp;&emsp;地幔过渡带是上地幔与下地幔的交接区域。深度大约为410-660公里。通过研究地幔过渡带结构以及其与上下地幔的相互作用的可以帮助我们认识地幔对流的模式，了解地幔的演化以及揭示地球内部的水循环过程。<br>&emsp;&emsp;目前对地幔过渡的认识主要是认为它是相变层。上地幔中主要是橄榄石。410公里是橄榄石到瓦兹利石的相变。660是林伍德是到布里吉曼石的相变。另外过渡带中间约520km还有一个相变。两个相变面的克拉伯龙斜率是反的。意思是当温度高时410相变面会下降，660会上升，过渡带变薄，反之变厚。对地幔过渡带的研究提供的关键信息可以推断上地幔物质组成，过渡带含水量和温度。了解热柱和俯冲带与过渡带的相互作用等。<br>&emsp;&emsp;大量的研究表明上地幔和下地幔的储水能力较低，可能含的水很少。而过渡带有很好的储水能力，可能包含有大量的水。Bercovici and karato(2003)认为地幔有一个广域的上涌趋势，上涌的过程因为脱水，会在410界面上面形成一个局部熔融层，表现为一个地震学的低速层。含水的地幔过渡带可以解释地球化学观测到的不相容元素和稳定同位素特性，从而支持全地幔对流模式。<br>&emsp;&emsp;我们来看看近几年的地幔过渡带研究进展。刚刚提到的这个410km的低速层，近些年获得大量研究者的关注。Tauzin et al. (2010)认为全球普遍存在这个低速层，他们的观测台站较少，Wei and Shearer (2017)人发现他们的观测数据中只有30-40%有低速层。其他近些年的文章也都纷纷在不同的区域例如中国东南等发现这样的低速层(Tauzin et al., 2017; Li et al., 2019; Li et al., 2020; Xiao et al., 2020)。那这个低速层是否真的是普遍全球存在的，这个低速层的成因及与俯冲板块和热柱的关系都是研究的热点。<br>&emsp;&emsp;地幔过渡带的地形和速度变化也是研究的热点。例如Ai and Zheng (2003)和Ai et al. (2003)利用接收函数对研究660间断面他们发现660不是单一的一个界面在有些地方存在小的间断面。Zhang et al. (2019)发现中国东南660界面速度增大有8%。Ishii et al. (2019)也发现660界面十分尖锐，速度的跳变在数公里范围内。Wu et al. (2019)利用散射波发现410比较平缓，推断410是一个温度控制的相变面。而660含有小尺度的地形，因而推断它是一个相变面加上化学界面。这些研究极大的推动了我们对于过渡带界面的认识。不过可能还有很多值得发掘的点，例如Wu et al. (2019)采样的区域是中国东部及南亚，地球上其他地方是否也是类似的结论。另外660的小间断面与俯冲板块，地幔热柱有什么关系也是值得研究的(Chu et al., 2012; Jenkins et al., 2016)。<br>&emsp;&emsp;地幔过度带的水是大家十分关注的问题。高温高压实验证实地幔过渡带有储存大量水的能力。一些学者从地幔金刚石包裹体中的物质发现地幔过渡带的确含水(Pearson et al., 2014; Tschauner et al., 2018; Schulze et al., 2018)。不过这些例子较少，似乎不足以说明普遍情况。地震学的部分研究发现其实地幔过渡带含的水没有想象中的多(Houser, 2016)。因而地幔过渡带里的含水量还有一定争议。Thio et al. (2016)发现利用地震学的数据来研究地幔过渡带的含水量存在两个问题，一个就是误差较大，另一个就是温度与速度存在一定的折中关系。例如有些研究者直接将低速解释为含水导致，然而温度高也可以导致波速度低。尚需利用多种手段来进行研究，确认地幔过渡带的水含量及分布。<br>&emsp;&emsp;近些年来660界面之下的低速获得了广泛关注(Liu et al., 2018; Sun et al., 2020;Panero et al., 2020)。例如Schmandt et al. (2014)利用接收函数研究了美国西部660界面。他们发现了660之下普遍存在一个低速。他们推测可能是俯冲的法拉隆板片进入下地幔时脱水造成的部分熔融。Liu et al. (2016)等在日本地区发现了660之下的低速，推测是地幔转换带滞留的东亚俯冲的太平洋板片造成。目前在世界其他地区，中国等尚缺乏相关研究。研究660低速有助于提升我们对俯冲板块与地幔过渡带关系的认识。<br>&emsp;&emsp;地幔过渡带的地震学研究方法包括：非对称反射波的方法(Wu et al., 2019)，ScS多次反射波(Wang et al., 2017)以及上界面反射波的方法(Feng et al., 2017)。<br>&emsp;&emsp;还有地震源区转换波法，该方法对深源地震区附近的成像精度高(Li et al., 2008)。中心点反射波法，这种方法空间覆盖好，可以得到可靠的大尺度平均结构(Yu et al., 2018)。<br>&emsp;&emsp;此外还有三重震相法。该方法对垂直方向尚的速度结构非常敏感(Wang and Niu, 2010; Chu et al., 2012)。台站下方转换波法，该方法充分利用到时和振幅信息，但受限于台阵的孔径和台间距(Zhang and Schmandt, 2019)。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>过渡带</tag>
      </tags>
  </entry>
  <entry>
    <title>基于宽频带背景噪声面波的美国三维上地幔横波速度结构模型</title>
    <url>/US-upper-mantle-vs-model.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;利用宽频带的背景噪声面波做了美国三维上地幔横波速度结构，该工作做了x年。我不会告诉你这项工作做了多久，说出来都害sao。文章终于在2018年发表，文章链接在<a href="https://link.springer.com/article/10.1007/s00024-018-1881-2">这里</a>，如果有需要可以找我要全文。<br>&emsp;&emsp;做模型真的是需要大量细致的工作。这篇文章的主要贡献是表明只用背景噪声面波也可以做的比较深，比较准，另外就是为community提供了一个新的模型。怎奈自己的地质背景太差，看不到啥突出的科学问题，还被审稿人批评说，‘你做的啥工作啊，像本科生的作业。’心塞。师兄说的对，应该多向可能对你的工作感兴趣的人请教，例如动力学方向的人啊之类的。<br>&emsp;&emsp;老板建议把这个模型挂在<a href="https://ds.iris.edu/ds/products/emc-earthmodels/">IRIS EMC</a>里头，推广推广，让大伙儿都用用。我觉得不错，于是今天终于把它放到了IRIS里面。点击<a href="https://ds.iris.edu/ds/products/emc-us-upper-mantle-vsxiechuyang2018/">这里</a>就可以看到我的模型了。里面有netcdf格式的数据可以下载。如果有需要可以找我要更细致的结果。<br>&emsp;&emsp;IRIS EMC需要的是netcdf格式的模型数据。IRIS有提供把txt文本格式的模型转换成netcdf的<a href="https://github.com/iris-edu/emc-tools">python脚本</a>。另外向IRIS EMC提交模型的要求也可以这他们的<a href="https://ds.iris.edu/ds/products/emc-contributionguide/">网页</a>看到，按照他们的要求把netcdf文件准备好，然后写一个说明文档一并发送给<a href="mailto:&#x70;&#x72;&#111;&#x64;&#x75;&#x63;&#116;&#x40;&#105;&#x72;&#105;&#x73;&#46;&#x77;&#x61;&#115;&#104;&#105;&#x6e;&#103;&#116;&#111;&#110;&#46;&#x65;&#x64;&#117;">&#x70;&#x72;&#111;&#x64;&#x75;&#x63;&#116;&#x40;&#105;&#x72;&#105;&#x73;&#46;&#x77;&#x61;&#115;&#104;&#105;&#x6e;&#103;&#116;&#111;&#110;&#46;&#x65;&#x64;&#117;</a>就完事了。<br>&emsp;&emsp;netcdf是2进制文件。要查看其头段信息的话可以用命令ncdump -h xxx.nc（安装netcdf-bin），要读取其参数信息可以用命令ncks（安装nco）。其实IRIS EMC也提供了将netcdf转换成txt文本的<a href="https://github.com/iris-edu/emc-tools">python脚本</a>，非常方便。<br>&emsp;&emsp;求合作啊。我擅长处理数据，要是您能看到啥地学科学问题那真是求之不得啊。笑cry。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>model</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在elementaryOS下让gmt支持中文</title>
    <url>/how-to-configure-chinese-for-gmt.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;有些时候用gmt画图需要添加一些中文标注。之前在fedora里用gmt4的时候配置过一次。现在用的是elementaryOS+gmt5.4.3怎么配置中文呢？</p>
<span id="more"></span>
<p>&emsp;&emsp;与centos啦fedora不一样,elementaryOS是基于ubuntu的。ghostscript中文配置文件不是在&#x2F;usr&#x2F;share&#x2F;ghostscript&#x2F;conf.d&#x2F;cidfmap.zh_CN 而是在&#x2F;etc&#x2F;ghostscript&#x2F;cidfmap.d&#x2F;90gs-cjk-resource-gb1.conf<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://www.cnblogs.com/gisalameda/p/6840662.html
">[1]</span></a></sup>。<br>&emsp;&emsp;也不用像fedora下面需要安装ghostscript-chinese-zh_CN，而elementaryOS的中文支持已经预装了。知道了中文配置文件的位置以后就十分方便。我们只需要把自己需要的字体下载下来就好了。例如需要windows字体的话就把\C:\Windows\Fonts下面的字体文件拷贝到&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;winfonts下面。<br>&emsp;&emsp;下面就是老套路了。在中文配置文件末尾加上：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/STSong-Light &lt;&lt; /FileType /TrueType /Path (/usr/share/fonts/winfonts/simsun.ttc) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;</span><br><span class="line">/STFangsong-Light &lt;&lt; /FileType /TrueType /Path (/usr/share/fonts/winfonts/simfang.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;</span><br><span class="line">/STHeiti-Regular &lt;&lt; /FileType /TrueType /Path (/usr/share/fonts/winfonts/simhei.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ;</span><br><span class="line">/STKaiti-Regular &lt;&lt; /FileType /TrueType /Path (/usr/share/fonts/winfonts/simkai.ttf) /SubfontId 0 /CSI [(GB1) 4] &gt;&gt; ; </span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后更新字体map：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-gsfontmap</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;最后在gmt的字体配置文件&#x2F;usr&#x2F;share&#x2F;gmt&#x2F;postscriptlight&#x2F;PSL_custom_fonts.txt加上：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">STSong-Light--UniGB-UTF8-H 0.700 1</span><br><span class="line">STFangsong-Light--UniGB-UTF8-H 0.700 1</span><br><span class="line">STHeiti-Regular--UniGB-UTF8-H 0.700 1</span><br><span class="line">STKaiti-Regular--UniGB-UTF8-H 0.700 1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;用gmt pstext -L就可以看到添加的四中字体：<br><img src="/pstext.png" alt="gmt pstext -L显示的新添加4种字体"><br>&emsp;&emsp;然后就大功告成了。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://www.cnblogs.com/gisalameda/p/6840662.html<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>gmt</category>
      </categories>
      <tags>
        <tag>中文</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么计算理论的NCF？</title>
    <url>/how-to-calculate-synthetic-NCF.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;好久没有更新博客了。原因是上个月文章修改意见下来了，第二轮大修，这酸爽，难以言表。<br>&emsp;&emsp;不知道啥时候开始（大概是Fichter和Ermert的文章发表之后），做噪声互相关工作总会被审稿人问：噪声源影响有多大啊？难为人啊。要是能像Ermert他们把源和结构一块儿做了不就结了。但那是人家的手艺，捡起来难啊。<br>&emsp;&emsp;另一个方法就是做模拟。给定源，计算两点波形，做胡相关，叠加。一维，近距离还好做，全球的三维的咋办？<br>&emsp;&emsp;还好有大神啊。人家Tromp et al. (2010)早都弄出来了。就是用Specfem3d_globe就可以了。<br>&emsp;&emsp;其实specfem3d_globe的说明文档已经讲的很清楚了，我这里就简单说一下。一般，波形的正演模拟只需要一步，而ensemble average的NCF需要两步，要计算敏感核函数需要三步。需要注意的点主要有：<br>&emsp;&emsp;1，NCF的模拟不需要CMTSOLUTION，需将其六分量设置为0。<br>&emsp;&emsp;2，There are other parameters in DATA&#x2F;Par_file which should be given specific values. For instance, NUMBER_OF_RUNS and NUMBER_OF_THIS_RUN must be 1; ROTATE_SEISMOGRAMS_RT, SAVE_ALL_SEISMOGRAMS_IN_ONE_FILES, USE_BINARY_FOR_LARGE_FILE and MOVIE_COARSE should be .false.. Moreover, since the first two steps for calculating noise cross-correlation kernels correspond to forward simulations, SIMULATION_TYPE must be 1 when NOISE_TOMOGRAPHY equals 1 or 2. Also, we have to reconstruct the ensemble forward wavefields in adjoint simulations, therefore we need to set SAVE_FORWARD to .true. for the second step, i.e., when NOISE_TOMOGRAPHY equals 2. The third step is for kernel constructions. Hence SIMULATION_TYPE should be 3, whereas SAVE_FORWARD must be .false.. （从使用手册抄的，关于Par_file的设置)<br>&emsp;&emsp;3，利用EXAMPLES&#x2F;noise_examples&#x2F;NOISE_TOMOGRAPHY.m (main program)和EXAMPLES&#x2F;noise_examples&#x2F;PetersonNoiseModel.m两个matlab程序获得S_squared。运行该程序需要提供NSTEP和dt。这两个参数在编译之后运行xcreate_header_file会显示。<br>&emsp;&emsp;4，Create a file called NOISE_TOMOGRAPHY&#x2F;irec_master_noise. Note that this file should be put in directory NOISE_TOMOGRAPHY as well. This file contains only one integer, which is the ID of the ‘maste’ receiver. For example, if in this file shows 5, it means that the fifth receiver listed in DATA&#x2F;STATIONS becomes the ‘master’. That’s why we mentioned previously that the order of receivers in DATA&#x2F;STATIONS important. （该文件定义了是哪个台与其他台的互相关）<br>&emsp;&emsp;5，Create a file called NOISE_TOMOGRAPHY&#x2F;nu_master. This file holds three numbers, forming a (unit) vector. It describes which component we are cross-correlating at the ‘master’ receiv. （该文件定义了哪些分量做胡相关）<br>&emsp;&emsp;6，Describe the noise direction and distributions in src&#x2F;specfem3d&#x2F;noise_tomography.f90. Search for a subroutine called noise_distribution_direction in noise_tomography.f90. It is actually located at the very beginning of noise_tomography.f90. The default assumes vertical noises and a uniform distribution across the whole physical domain. It should be quite self-explanatory for modifications. Should you modify this part, you have to re-compile the source code. (again, that’s why we recommend that you alwaysre-compile the code before you run simulations)（这里根据需要自己给定噪声源的分布。）<br>&emsp;&emsp;接下来就可以运行了。要得到NCF需要运行要两步，在修改参数运行第二步的时候一定要重新编译一下。<br>&emsp;&emsp;然后就可以跑了。结果我老是跑不通，老是出错。多番检查发现错误出在子程序print_stf_file()，即输出震源时间函数的子程序。但没有弄明白为什么会出错。这个程序没有产生后续需要调用的参数。大胆的将其注释掉了。然后程序就跑通了。其实在Par_file里面将PRINT_SOURCE_TIME_FUNCTION改为false应该就可以了。在噪声源均匀的情况下，跑出来的NCF与single force差了pi&#x2F;4，以及一些微小的差异。移动pi&#x2F;4之后基本能够对上，应该是正确的了。Hooray!<br>&emsp;&emsp;第三步我是没跑通，估计是因为空间不足，因为我看到中间数据就已经接近900G。不过我要的是synthetic NCF，足够了，有空再试sensitivity kernel吧。<br>&emsp;&emsp;封面图是我用来做模拟的噪声源分布。结果表明源的影响不大啊。乐。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>sem</tag>
        <tag>NCF</tag>
      </tags>
  </entry>
  <entry>
    <title>如何下载网上的视频</title>
    <url>/how-to-download-video-from-internet.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;很多时候在线看视频遇到喜欢的就想下载下来慢慢欣赏。那如何下载呢？</p>
<span id="more"></span>
<p>&emsp;&emsp;每次都需要到某度搜索。结果大量的广告，烦银。搞定了吧，下次又给忘了。今天就记录一下，免得下次又去找某度，碍眼。<br>&emsp;&emsp;估计以后某度会没得搞头吧，除了广告还充斥着各路货色。知乎里面回答那么多，那么详细，自然是用手投票啦。<br>&emsp;&emsp;说回正题，总算搜到一个强大的python程序，叫做you-get。说是下啥平台的视频都行。安装命令是这个样子的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pip3 install you-get</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后要下载视频的话就运行这个命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">you-get 视频网址</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;就可以下载了。so easy。妈妈再也不用担心。。。慢着，下载下来是flv，虽然高清，但似乎一些视频软件打不开，编辑不能。咋办？转换格式呗。<br>&emsp;&emsp;哎～我又不争气的用了某度。果然，浪费我大把时间还弄得不快。什么在线转换，要么只能转小视频（极小），要么买app咯，气人。转换个格式，我买个app干嘛。这样子就可以了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.flv -c copy output.mp4</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;下载下来的视频太长了，想要剪切出其中的片段咋办？像这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -ss 00:00:05 -t 00:00:10 -i input.mp4 -q 0 output.mp4</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;就可以从5秒开始剪出10秒的片段。哈，大功告成。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>video</tag>
      </tags>
  </entry>
  <entry>
    <title>文章第三轮大修</title>
    <url>/about-anti-paper.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;文章的审稿意见今天又双叒下来了，值得记录一下。</p>
<span id="more"></span>
<p>&emsp;&emsp;这是一篇怼人的文章，连发表以后发moment的内容都想好了：我不是针对谁，只是各位的model都有问题。。。然而目前为止已经是第三次大修意见。首先要庆幸一下没有拒绝，因为有听过有人在大修中修之后又给据了的，相比起来还是给了希望啊。然而三次大修还是挺折磨。这次审稿人1觉得上次改的还不错建议小修，但审稿人2找不着了。主编找了另一个审稿人审，又提出大量问题和建议。虽然意见多到完成他的建议足够另写一篇，但很中肯，且留了大名。这是第一次审稿人留大名，值得纪念一下，且此人还是业内大牛，想想还是挺开心的。<br>&emsp;&emsp;脑子里一直在纠结这篇文章到底怎么个改法。每次大修回来都感觉无从下手。而在老板眼里似乎跟已经接收了在proof一样。看到知乎的一个问题说：上了985为什么还焦虑？我回答，上985和焦不焦虑没有半毛钱关系。<br>&emsp;&emsp;自己总是很难持之以恒的完成设定的小目标，例如每天看一片文献啥的。很羡慕这个<a href="https://www.stevepavlina.com/">Steve Pavlina</a>博主，每天都坚持写一篇博文。他说要是做不到你的目标的话那就把目标做的更加容易一些。例如不能做到每天都念一篇文章，那就每天都看一篇文章的题目。之后，每天看一篇文章的摘要，完成以后每天就看introduction，逐渐增加。慢慢就能完成了。那就按照他的建议先试试^_^。</p>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>关于瘾</title>
    <url>/addiction.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;什么是瘾？</p>
<span id="more"></span>
<p>&emsp;&emsp;读了Steve Pavlina这篇博文<a href="https://www.stevepavlina.com/blog/2020/11/pleasure-is-not-addictive/?utm_source=rss&utm_medium=rss&utm_campaign=pleasure-is-not-addictive">Pleasure Is Not Addictive</a>挺有感悟的。他说寻求快乐本身是没有什么危害的，也不会成瘾。成瘾的原因主要是因为逃避，逃避一个大的困难、问题、创伤、压力、恐惧或者羞愧。我觉得很有道理。例如逃避生活，逃避同行压力，没钱的状态等都会让你在其他的小事当中寻找所谓的快乐，例如有的人抽烟，有的人喝酒，有的人打游戏，有的人看视频。这种快乐是短暂的，不能解决更大的问题，而且通常会让大的问题更糟糕。<br>&emsp;&emsp;成瘾时通常自己无法控制。拒绝承认自己逃避更大的问题是一种瘾，过度的去纠正去改掉这个瘾也是一种瘾。<br>&emsp;&emsp;那怎么办呢？Steve Pavlina说“You do not need immediate solutions to life’s biggest challenges. What’s needed is an improvement in your relationships with those challenges. Instead of seeing them as curses or demons to be avoided, try framing them as invitations to learn, grow, and improve.”首先要想，我逃避的是什么？为什么我一定要逃避？我害怕的是啥？我该怎么去面对？这给了我一个怎样的提升的机会？直面生活的困难和挑战，而不要去逃避，寻找你的担忧和羞愧背后的好的美的一面。这会给你带来莫大的帮助。<br>&emsp;&emsp;快乐是用来享受的，然而，如果你将寻求快乐当做了逃避问题的方式，更大的痛苦也将在快乐中植根。接受生活带给你的挑战，因为那也是一个机遇，拥抱生活带给你的快乐。</p>
]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>瘾</tag>
      </tags>
  </entry>
  <entry>
    <title>为啥要这样安装FileZilla</title>
    <url>/how-to-install-filezilla.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;本地到服务器的数据传输使用FileZilla程序比较方便和稳定。只是Linux下需要编译安装该程序，那还不易热儿，那就安装呗。然而安装过程让人迷糊，复杂程度让人难忘，特此记录一下。遗憾的是，花了我两天时间，到现在为止，该程序仍然没有安装成功。</p>
<span id="more"></span>
<p>&emsp;&emsp;首先在<a href="https://filezilla-project.org/">https://filezilla-project.org/</a>下载了个可执行程序—显然是运行不了的。仔细看发现是在debian10.0下编译的。我的系统是Fedora和Elementary OS5，两个都运行不了。然后下载了源程序FileZilla_3.51.0_src.tar.bz2。<br>&emsp;&emsp;解压，安装filezilla-3.51.0，编译过程出错，显示没有安装libfilezilla。<br>&emsp;&emsp;于是下载libfilezilla-0.25.0.tar.bz2，解压，安装libfilezilla-0.25.0，编译过程出错，显示没有安装有nettle。<br>&emsp;&emsp;于是下载nettle-3.6.tar.gz，解压编译安装nettle-3.6一次通过。<br>&emsp;&emsp;然后在libfilezilla-0.25.0下预编译，出错，显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: hogweed 3.3 greater was not found. You can get it from https://www.lysator.liu.se/~nisse/nettle/</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;于是重装nettle-3.6</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --enable-mini-gmp</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;安装成功，然后在libfilezilla-0.25.0下预编译，出错，显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: GnuTLS 3.5.8 or greater was not found. You can get it from https://gnutls.org/</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后下载gnutls-3.6.15.tar.xz，解压gnutls-3.6.15编译出错，显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: </span><br><span class="line">***</span><br><span class="line">*** gmp was not found.</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后下载gmp-6.1.0.tar.bz2，解压gmp-6.1.0，编译安装完成。回到gnutls-3.6.15再次编译出错，显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: </span><br><span class="line">  ***</span><br><span class="line">  *** Libtasn1 4.9 was not found. To use the included one, use --with-included-libtasn1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后下载libtasn1-4.9.tar.gz，解压libtasn1-4.9，编译出错，显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ASN1.c: In <span class="keyword">function</span> <span class="string">&#x27;_asn1_yyparse&#x27;</span>:</span><br><span class="line">ASN1.y:152:47: error: <span class="string">&#x27;__builtin___snprintf_chk&#x27;</span> output may be truncated before the last format character [-Werror=format-truncation=]</span><br><span class="line"> neg_num : <span class="string">&#x27;-&#x27;</span> NUM     &#123;snprintf($$,sizeof($$),<span class="string">&quot;-%s&quot;</span>,<span class="variable">$2</span>);&#125;</span><br><span class="line">                                               ^~~~~</span><br><span class="line">In file included from /usr/include/stdio.h:862:0,</span><br><span class="line">                 from ./int.h:31,</span><br><span class="line">                 from ASN1.y:30:</span><br><span class="line">/usr/include/x86_64-linux-gnu/bits/stdio2.h:64:10: note: <span class="string">&#x27;__builtin___snprintf_chk&#x27;</span> output between 2 and 66 bytes into a destination of size 65</span><br><span class="line">   <span class="built_in">return</span> __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,</span><br><span class="line">          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">        __bos (__s), __fmt, __va_arg_pack ());</span><br><span class="line">        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">ASN1.y:164:47: error: <span class="string">&#x27;__builtin___snprintf_chk&#x27;</span> output may be truncated before the last format character [-Werror=format-truncation=]</span><br><span class="line">                 | <span class="string">&#x27;-&#x27;</span> NUM        &#123;snprintf($$,sizeof($$),<span class="string">&quot;-%s&quot;</span>,<span class="variable">$2</span>);&#125;</span><br><span class="line">                                               ^~~~~</span><br><span class="line">In file included from /usr/include/stdio.h:862:0,</span><br><span class="line">                 from ./int.h:31,</span><br><span class="line">                 from ASN1.y:30:</span><br><span class="line">/usr/include/x86_64-linux-gnu/bits/stdio2.h:64:10: note: <span class="string">&#x27;__builtin___snprintf_chk&#x27;</span> output between 2 and 66 bytes into a destination of size 65</span><br><span class="line">   <span class="built_in">return</span> __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,</span><br><span class="line">          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">        __bos (__s), __fmt, __va_arg_pack ());</span><br><span class="line">        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">cc1: all warnings being treated as errors</span><br><span class="line">Makefile:1112: recipe <span class="keyword">for</span> target <span class="string">&#x27;ASN1.lo&#x27;</span> failed</span><br><span class="line">make[2]: *** [ASN1.lo] Error 1</span><br><span class="line">make[2]: Leaving directory <span class="string">&#x27;/home/junxie/Downloads/libtasn1-4.9/lib&#x27;</span></span><br><span class="line">Makefile:1176: recipe <span class="keyword">for</span> target <span class="string">&#x27;check-recursive&#x27;</span> failed</span><br><span class="line">make[1]: *** [check-recursive] Error 1</span><br><span class="line">make[1]: Leaving directory <span class="string">&#x27;/home/junxie/Downloads/libtasn1-4.9/lib&#x27;</span></span><br><span class="line">Makefile:1009: recipe <span class="keyword">for</span> target <span class="string">&#x27;check-recursive&#x27;</span> failed</span><br><span class="line">make: *** [check-recursive] Error 1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;至此，我已几近崩溃，已经不知道自己在哪儿，是要干啥。网上已经几乎找不到相关问题词条，估计还没有人遇到过这些问题。<br>&emsp;&emsp;很想吐槽一下Linux。虽然用户可以随心所欲DIY，但是起点似乎有点太高。所谓的DIY也不过是把好多人写的代码集合在自己电脑上编译，源代码长什么样我虽然比较关心，但哪有时间闲情和精力去看？<br>&emsp;&emsp;像我这种需要用到Linux方便处理大量数据和程序编译的便利，又需要用到现成较为成熟程序包编译而不可得的情况，属实尴尬。<br>&emsp;&emsp;我又想到了Python。这个脚本语言似乎厉害透顶，几乎所有人都在学，都在用。人们纷纷把以往用fortran，C写的代码转成python或者用python给他们穿身衣服、塑个金身，显得高大上，自诩又为代码社区立功劳。可结果用起来嘛，一言难尽。某些脚本只能用python2运行，另一些又只能用python3。有些程序首次用还总告诉你某某module找不到。安装起来还常常不成功。使用起来十分不友好。真是让人头疼、恼火、焦躁。也不知大家是怎么喜欢上的。只能怪自己太菜，还没对python开窍吧。<br>&emsp;&emsp;谁能指条明路？</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>filezilla</tag>
      </tags>
  </entry>
  <entry>
    <title>新年快乐</title>
    <url>/happy-new-year.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;各位新年快乐。<br>&emsp;&emsp;我不是针对谁，我是说在座各位的模型都有问题。开玩笑的，别当真。<br>&emsp;&emsp;今天很高兴因为一篇文章刚刚接收了，收到了新年礼物。这篇文章经过了多重考验，三次大修。时间也长，文章从第一次投稿到接收用的时间二胎也都降世了。<br>&emsp;&emsp;文章的意思就是经过检验发现现在的模型都有问题。有点惹众怒啊。请轻拍。我忘记是谁说的了，没有一个模型是对的，但都是有用的。大家和气生财(文章)。切勿动怒。<br>&emsp;&emsp;下一步就是好好写本子了啊。哎。加了个油。</p>]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>安装完fedora32之后</title>
    <url>/after-fedora32.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;话说这台工作站已经有点“老了”，于是重新买了一台，美滋滋。5分钟安装了个fedora32，记录一下干了些啥。</p>
<span id="more"></span>
<h2 id="换阿里源并更新"><a href="#换阿里源并更新" class="headerlink" title="换阿里源并更新"></a>换阿里源并更新</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> /etc/yum.repos.d/fedora.repo /etc/yum.repos.d/fedora.repo.backup</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> /etc/yum.repos.d/fedora-updates.repo /etc/yum.repos.d/fedora-updates.repo.backup</span><br><span class="line"><span class="built_in">sudo</span> wget -O /etc/yum.repos.d/fedora.repo http://mirrors.aliyun.com/repo/fedora.repo</span><br><span class="line"><span class="built_in">sudo</span> wget -O /etc/yum.repos.d/fedora-updates.repo http://mirrors.aliyun.com/repo/fedora-updates.repo</span><br><span class="line"><span class="built_in">sudo</span> yum makecache</span><br><span class="line"><span class="built_in">sudo</span> dnf update</span><br></pre></td></tr></table></figure>
<h2 id="给root设密码"><a href="#给root设密码" class="headerlink" title="给root设密码"></a>给root设密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> passwd root</span><br></pre></td></tr></table></figure>

<h2 id="改主机名"><a href="#改主机名" class="headerlink" title="改主机名"></a>改主机名</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo hostnamectl set-hostname zbook7 --static</span><br></pre></td></tr></table></figure>

<h2 id="安装gmt6"><a href="#安装gmt6" class="headerlink" title="安装gmt6"></a>安装gmt6</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dnf copr enable genericmappingtools/gmt</span><br><span class="line">dnf install gmt</span><br></pre></td></tr></table></figure>
<h2 id="gmt6中文支持"><a href="#gmt6中文支持" class="headerlink" title="gmt6中文支持"></a>gmt6中文支持</h2><p>在这篇日志<a href="/how-to-configure-chinese-for-gmt" title="如何在elementaryOS下让gmt支持中文">如何在elementaryOS下让gmt支持中文</a>里有对gmt中文支持的说明。然而现在安装的是fedora32，ghostscript的cidmap文件不一样，搞不定啊。于是按照<a href="https://docs.gmt-china.org/">GMT中文社区</a>的说明，运行了<a href="http://raw.githubusercontent.com/texjporg/cjk-gs-support/master/cjk-gs-integrate.pl">cjk-gs-integrate.pl</a>脚本之后果然可以用中文了。</p>
<p>然而，如文档所说，gs果然不能用了。然后运行sudo perl cjk-gs-integrate.pl –remove，结果gs还是用不了。<br>按照以前的经验，那就删掉ghostscript然后重装。于是运行了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf remove ghostscript</span><br></pre></td></tr></table></figure>
<p>结果删除了一大堆东西，包括gmt等等，然后一一重装。<br>回想在运行cjk-gs-integrate.pl脚本的时候有看到&#x2F;usr&#x2F;share&#x2F;ghostscript&#x2F;Resource&#x2F;Init&#x2F;cidmap*等文件信息出现。<br>于是将这个文件当作以往编辑中文字体配置文件的方法:<a href="/how-to-configure-chinese-for-gmt" title="如何在elementaryOS下让gmt支持中文">如何在elementaryOS下让gmt支持中文</a>，于是就OK了。</p>
<h2 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h2><p>在<a href="https://nodejs.org/en/download/">这里</a>下载，然后安装。本来是想安装hexo，所以来安装这个软件。结果hexo一直搞不定。暂时就不理他了。</p>
<h2 id="安装sac"><a href="#安装sac" class="headerlink" title="安装sac"></a>安装sac</h2><p>在iris申请了一份sac102。源代码怎么都安装不成功，于是直接解压了可执行的二进制文件。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>一起看星星</title>
    <url>/sky-and-universe.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;小时候的爱好之一是看天空。白天看天上的云朵，总感觉会有不可思议的事情发生，或者突然会有UFO窜出。晚上看天上的星星，希望能够看到特别的一颗，或者天外有神秘来客造访。以前夏日的晚上，天上星星真的是光彩夺目，数也数不清;现在的夜晚天空是朦朦胧胧，想看也看不清。<br>&emsp;&emsp;幸好在<a href="http://ruanyifeng.com/">阮一峰的网络日志</a>里面看到了这个<a href="https://viewer.legacysurvey.org/">看星空网址</a>。我魔症的看了好几个小时。这里是全球多个天文台合作，经过多年合作观测，将天文望远镜拍摄的星空拼成的一张10万亿的图片。包含了10亿个星系，覆盖天空的1&#x2F;3。<br>&emsp;&emsp;不用怀疑，点进去。每一个亮点，可能都是一整个星系。起初我把图片放大到了30弧秒，遍历似的看。结果我发现我真低估了他的大小。用沧海一粟来形容人或地球都显得是对人或地球的极富夸张。后来发现很多星系已经被标了记，按顺序看就好了。总之是不舍眨眼。<br>&emsp;&emsp;那里有幽灵，有美人鱼，有飞碟，还有宝石，充满了幻想。有些橙黄，有些惺红，有些翡翠绿，还有宝石蓝，看花了眼。<br>&emsp;&emsp;有些有很多旋臂，像花瓣；有些只有两条，像手臂。有些还没有开始旋转，是青少年吧。另一些已经成了圆盘，垂垂老矣？<br>&emsp;&emsp;有些在热情舞蹈，有些在调皮逗趣，有些在静静凝视，有些在拥抱彼此，有些在聚会宴请，有些寻求孤独宁静，还有一些可能是傲游的仙人。<br>&emsp;&emsp;我们看到的是几十亿年前甚至更久远的他们，不知道他们现在是否依旧闪烁;而我们的光到达他们的时候，他们是否还能看到？<br><img src="https://i.loli.net/2021/03/08/DBtUqGVew1lWgQC.png" alt="黑洞？"><br><img src="https://i.loli.net/2021/03/08/1IuxsGyWAJTjQnl.png" alt="情侣？"><br><img src="https://i.loli.net/2021/03/08/SqhYyJQCXEBn8wT.png" alt="相依"><br><img src="https://i.loli.net/2021/03/08/9x3fXmA4z2tErQ1.png" alt="璀璨"><br><img src="https://i.loli.net/2021/03/08/pVBg48UefoGtSNZ.png" alt="双镯"><br><img src="https://i.loli.net/2021/03/08/7bj8uQZ5rI9UdBs.png" alt="欢脱"><br><img src="https://i.loli.net/2021/03/08/F46WaDXx5qweZBG.png" alt="亲吻"><br><img src="https://i.loli.net/2021/03/09/6Sz4uihkbEw7TJR.png" alt="九星联珠"><br><img src="https://i.loli.net/2021/03/08/4cuZhPki853Te6U.png" alt="大哥小弟？"></p>]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>杂</tag>
      </tags>
  </entry>
  <entry>
    <title>bash里如何循环读取文件</title>
    <url>/read-file-bash.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;Bash操作简单，可以处理简单的计算等。有些时候会遇到文件的读取问题，那如何对文件进行循环逐行读取呢？</p>
<span id="more"></span>
<p>&emsp;&emsp;这样就可以了:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   array=(<span class="variable">$&#123;line///&#125;</span>)  </span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br><span class="line"><span class="keyword">done</span> &lt; the_file</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>重新安装Elementary OS系统</title>
    <url>/install-elementary-os-again.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;之前买的新电脑Zbook还行，安装了fedora 32（见<a href="/after-fedora32" title="安装完fedora32之后">安装完fedora32之后</a>）以后结果出现各种问题。包括，不能安装sac，rdseed，hexo，wikimedia。一气之下就安装回了Elementary OS。这里记录一下Elementary OS的配置。</p>
<span id="more"></span>
<h2 id="软件更新管理器"><a href="#软件更新管理器" class="headerlink" title="软件更新管理器"></a>软件更新管理器</h2><p>安装命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install software-properties-common software-properties-gtk</span><br></pre></td></tr></table></figure>
<p>安装完以后在application里面输入app就可以运行了。挑选合适的镜像，然后更新系统。</p>
<h2 id="中文输入法安装"><a href="#中文输入法安装" class="headerlink" title="中文输入法安装"></a>中文输入法安装</h2><p>安装命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get remove ibus   <span class="comment"># 卸载ibus</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get remove scim </span><br><span class="line"><span class="built_in">sudo</span> apt-get autoremove   <span class="comment"># 删除依赖包</span></span><br><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:fcitx-team/nightly</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install im-switch fcitx fcitx-config-gtk fcitx-sunpinyin fcitx-module-cloudpinyin fcitx-googlepinyin   </span><br><span class="line"><span class="built_in">sudo</span> im-switch -s fcitx -z default</span><br></pre></td></tr></table></figure>

<h2 id="安装google-chrome浏览器"><a href="#安装google-chrome浏览器" class="headerlink" title="安装google-chrome浏览器"></a>安装google-chrome浏览器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i google-chrome-stable_current_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> apt install -f   <span class="comment"># 自动安装依赖</span></span><br></pre></td></tr></table></figure>

<h2 id="Hot-corner快速显示桌面"><a href="#Hot-corner快速显示桌面" class="headerlink" title="Hot corner快速显示桌面"></a>Hot corner快速显示桌面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install wmctrl</span><br><span class="line">wmctrl -k on</span><br></pre></td></tr></table></figure>
<p>命令wmctrl -k on为显示桌面，将其放在System Settings&#x2F;Desktop&#x2F;Hot Corners&#x2F;Custom Command就可以了。</p>
<h2 id="安装hexo，SAC，rdseed，gmt一点问题都没有。"><a href="#安装hexo，SAC，rdseed，gmt一点问题都没有。" class="headerlink" title="安装hexo，SAC，rdseed，gmt一点问题都没有。"></a>安装hexo，SAC，rdseed，gmt一点问题都没有。</h2><p>to be continued.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo如何插入角注</title>
    <url>/reference-mod.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在hexo中插入角注需要安装hexo-reference，命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-reference</span><br></pre></td></tr></table></figure>
<p>语法是：<br>加入这个：<br>[^1]<br>在最后加入这个：<br>[^1]:<a href="https://github.com/kchen0x/hexo-reference">https://github.com/kchen0x/hexo-reference</a><br>显示出来是：<br>参见这样加入reference<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/kchen0x/hexo-reference">[1]</span></a></sup></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/kchen0x/hexo-reference<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
  </entry>
  <entry>
    <title>Hexo添加字数统计</title>
    <url>/add_counter.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><p>修改根目录下的_config.yml. 找到busuanzi_count:<br>enable: true</p>
</li>
<li><p>修改themes下的_config.yml. 找到footer：<br>counter: true</p>
</li>
<li><p>修改themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk，添加:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>fatal&#39;&#92;:&#39; &#39;origin&#39; does not appear to be a git repository</title>
    <url>/git-error.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>运行git push origin master -f 的时候显示这个错误:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fatal: &#x27;origin&#x27; does not appear to be a git repository fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure>
<p>解决办法是重新关联远程仓库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:junxie01/junxie01.git</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Power Spectral Density</title>
    <url>/pdf.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="http://service.iris.edu/mustang/noise-pdf/1/query?target=IU.ANMO.00.BHZ.M&starttime=2013-12-01&endtime=2013-12-31&format=plot"><br>&emsp;&emsp;封面图是IRIS提供的查看台站能量谱密度图，网址见<a href="http://service.iris.edu/mustang/noise-pdf/1/query?target=IU.ANMO.00.BHZ.M&starttime=2013-12-01&endtime=2013-12-31&format=plot">mustang</a>.<br>&emsp;&emsp;咱们也得会啊，要不然怎么分析自己的数据？于是按照MacNamara and Buland (2004)的文章给的公式自己编了一个程序。同样计算了ANMO台2013年12月竖直分量BHZ的能量谱密度，是这个样子：<br><img src="https://i.loli.net/2021/03/29/rLfmZ1hWNleQKC8.png" alt="自己算的ANMO台BHZ分量2013年12月能量谱密度"><br>&emsp;&emsp;对比看来好像形状差不多了，但是。。。怎么我算出来的比IRIS的整体高了20分贝呢？<br>&emsp;&emsp;后来明白了，是公式里dt的原因。我是除的dt，其实应该是乘。乘上dt就对了，开森。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>任务管理</title>
    <url>/optimize-daily-task.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="任务管理很难"><a href="#任务管理很难" class="headerlink" title="任务管理很难"></a>任务管理很难</h2><p>关键：Keep It Simple and Stupid.<br>任务管理是决定什么时候应该做什么事。这么一个看似简单的问题，却难以找到最优解。<br>作者运用专业知识，从计算机科学的角度去解决任务管理问题。</p>
<h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><p>   “给定一个物品集合（多个物品），每个物品都有各自的重量和价格。存在一个背包，具有一定容量。我们应该将哪几个物品放进背包，使得物品总重量不超过背包的容量，并且背包中的物品总价格最高。”<br>   随着物品数量的增加，将所有方案尝试一遍会消耗大量时间，这就是背包问题很「难」的原因。<br>   如果将任务看成物品，一天的时间看成背包，那么任务所需时间就对应物品的重量，任务完成收益就对应物品的价格，任务管理其实就是决定将哪些任务放进一天这个背包中，从而使一天内完成的任务价格最高。<br>   如何优化任务管理？</p>
<h2 id="剪枝优化"><a href="#剪枝优化" class="headerlink" title="剪枝优化"></a>剪枝优化</h2><p>   对于每个任务，我需要决策是否将该任务列入「我的一天」。将这个决策过程具像化，就是一棵树（决策树）。每一个选项（是或者否）都像树枝一样，引出不同的结果，剪枝优化就是将决策树的枝桠剪去。<br>也就是说不是所有任务都值得被放进 todo list 中简化自己的需求。</p>
<p>如何保证剪枝的正确性？如何保证简化后的需求能够满足工作需要呢？首先明确任务管理的目的是提高工作效率，所以我将所有生活类的任务从 Todo list中移除。确保一个任务足够重要才会放入todo list中。<br>要定期删除 Todo list 中的任务，因为如果一项任务一直存在，意味着它可能不重要，否则早就应该被完成了。</p>
<p>最终，Todo list 中的所有任务通常不超过五个，我只需要选 2-3 个任务添加到「我的一天」，很快速，也很简单。</p>
<h2 id="局部性原理"><a href="#局部性原理" class="headerlink" title="局部性原理"></a>局部性原理</h2><p>在设计程序时，计算机通常倾向于重复利用邻近的数据，这就是系统设计中的「局部性原理」。</p>
<p>人脑也很健忘，很多事情转头就忘掉，所以应尽量将任务放在触手可及的地方，要具体。局部性原理保证了大脑注意力集中，不会因为频繁地上下文切换，忘记需要做什么，使跨天的工作更加流畅。</p>
<h2 id="任务完成时间期望"><a href="#任务完成时间期望" class="headerlink" title="任务完成时间期望"></a>任务完成时间期望</h2><p>背包问题中一个重要约束是背包的容量，对应任务管理：如何保证任务管理时，规划的任务能在当天完成。一天的工作时间很容易确定，但是没有完成任务的情况下，怎么知道任务所需时间呢？</p>
<p>想要准确地推测任务完成时间比较难，但总会有人帮你确定任务完成时间。因为生活中会有很多deadline。按照小时为粒度进行规划，就可以在一个上午安排好几项任务。要有意识地去评估每个任务的所需时间，利用数学方法去锻炼评估能力。例如期望值，代表了多次实验后，可能出现状态的平均结果。</p>
<p>记录下每次任务「评估完成时间」和「真实完成时间」，就可以知道每次推测是否准确。相应的差值称为「推测偏差」。如果推测偏差的期望为15%，那么一项需要120分钟完成的任务，实际完成时间很可能是 120+120*0.15&#x3D;138 分钟。根据偏差值的数学期望，就能够有一个大概印象，每一项任务大概需要多久时间才能完成，便于更高效地规划「我的一天」。</p>
<h2 id="任务管理的本质和愚蠢的系统"><a href="#任务管理的本质和愚蠢的系统" class="headerlink" title="任务管理的本质和愚蠢的系统"></a>任务管理的本质和愚蠢的系统</h2><p>任务管理的本质是个人管理。如果人足够自律，就像一个精密的机器，那完全不需要各种花里胡哨的工具或方法论，只需要将任务列出来，一个接一个地完成。但是一般人都没有那么自律，执行力也不够强，时间表不断被打乱，需要不断的优化。</p>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第一性原理</title>
    <url>/rule-no1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="第一步：定义问题"><a href="#第一步：定义问题" class="headerlink" title="第一步：定义问题"></a>第一步：定义问题</h2><p>要解决问题之前，一定要关注两件事情：</p>
<ol>
<li>我所解决的问题是真的，而不是一个假的问题；</li>
<li>我所解决的问题有一个明确的范围。<br>确保你的问题和别人的问题是同一个问题。</li>
</ol>
<h2 id="第二步：拆解问题"><a href="#第二步：拆解问题" class="headerlink" title="第二步：拆解问题"></a>第二步：拆解问题</h2><p>如果问题复杂，则需要将其拆分为若干个小问题，保证每一个小问题之间是独立的。独立就是无交集。</p>
<h2 id="第三步：为问题排序"><a href="#第三步：为问题排序" class="headerlink" title="第三步：为问题排序"></a>第三步：为问题排序</h2><p>将问题拆解以后需要对子问题排序，方法有：</p>
<ol>
<li>解决问题的困难程度；</li>
<li>问题被解决后的价值。<br>根据这里两个维度可将问题划分到四个项限：<br><img src="https://s2.loli.net/2024/05/28/MBYKixZyqoACFsz.webp" alt="四项限图"><br>只专注做右侧的事情。</li>
</ol>
<h2 id="第四步：逐个解决"><a href="#第四步：逐个解决" class="headerlink" title="第四步：逐个解决"></a>第四步：逐个解决</h2><p>第三步中已经评估了优先级，到第四步就按照顺序做就好了。</p>
<h2 id="苏格拉底的方法"><a href="#苏格拉底的方法" class="headerlink" title="苏格拉底的方法"></a>苏格拉底的方法</h2><p>在对话中质疑其中的前提、推理过程、结论。直到找到最重要的问题和解决路径。类似的有5WHT：为什么发生、为什么没有发现、为什么没有预防三个角度发问。</p>
<h2 id="第一性原理误区"><a href="#第一性原理误区" class="headerlink" title="第一性原理误区"></a>第一性原理误区</h2><ol>
<li>第一性原理思维&#x3D;透过现象看本质<br>看本质是指看到事物背后的原因，而第一性原理是透过本质看现象。</li>
<li>第一性原理是唯一的<br>其实不是。</li>
<li>第一性原理获得的结论是稳定的<br>其实不一定。</li>
</ol>
<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><ol>
<li>第一性原理适合所有场景吗？</li>
<li>第一性原理能帮我们增加知识吗？</li>
</ol>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>第一性原理知识认识论的皮毛，别生搬硬套，别乱用。</p>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>密码测试</title>
    <url>/encrypt_test.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错了，再输一次试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="43728c31108686b2367fa21384b5e6a2e796faf2e7eae1043e2bf10da6b80fc3">4630436162ade97ba2718b7d0c4b3b6334fd4ee00636305f1fafcc50b95360ece5859bc192747c6d6d835975fbe028d32029d3a5d7ca8d53202923fc67893f5dc94d72724d863584bc8f4338fe447c0bf6b32cc2035086ad0f8d118b3b37fb21b4dc9364142a5f338d290124b41197816ea10486102e12b457505747c746ff71392fc34a3d1da515cd2245d34d21f1c173be2faeb8e962c64b7e76870c0346b2aecab7d34de608460cfa56a105b15f4602af01b95b10394881d3ab1d9fb3cd8e19acfe36375c19507e2660c2380517ec81a155ac274ec80cd4639c64c896a3308d6984ac04fd7f5bea8bf87c231ebfdc6e809e11c7dcf815e363b61376e8627704dd6ec084ef059b351150ab01d9d31c8fb4a2bc27173af587002ea989ea55245084c31e2825c25720c568d23b26ffb81388b3b609602de3443f9ac945ccdb5e84a14b0dabf0acc4ab37c82af5a428c9190a7e4c73f5d00eba30e0c33f695ef59e1930bbe09cb13dbefc642fd2fe1c71c9f517fab851b39a5793262b90b68f9df52bbf614b93e88f5e37e57104aa4af4bea582fc2b0ed7ce5a5e9d888f5bfe75007b7483ec51a1e37751cc5b964b9f57d6d021b6621227652a3d1681eeb3dc9f3c8f354a36ab1eded8643df3894ccc153f0810e0b28fc8c6beeff956457363c96a3054a61c8246945aebce1efa611549e7d3792df3db34658e68a31044d60dc0a8be6890008e16503a7febc78f3683b4ed39358678098d62ad0f924c0e4a44430eb9f37c88e040105505af6d740fe480ff980b3120cfe51793458d891d0355c04b7f73b43b0e9fb63e96228fd6b659f590becef3fa6463d2a77e6704c11bb191e529c8efd8b5726a44bd09b6a5334f5770957ceb35bad08f8cb9b4fbecb4457b2bff68024f9c32514aa20e6597292ccd90edabe3c61e78cb57b56b67bb5c83bb7f7a5a83401205ba1d6874a677d466d186df20ecd748f8c25e3fc7158d1ac01f5dfd5dbb5241694138be02b144191c3cd7f57141f64b1e7d882f2b635fba1099c3ab7063d925dbfba32898ac0a2f3297acba28f1294de4290c9d96715d4798ea09a4e079997188e2c06005d09be60f32ddb87da98657833342e27f2724e04a57f5632d8770ae10ea81ea1ffdeee8421785e4f3f80d06957e1a11b329d6f8639441c00fefd4d47b58afdf62a84873efd48534bfb1ed52d3a69fc19ab32509be3bb725b7465204624b749bc1ed9c9ed9f29788d353896f0496ca01b310fd0547f6336f45a5be47f632975b204eb8dc542dbb06faed845d4ce4659f122bdd65a3400126790663ed6bc8547bb73139578cbd05b4c952b5018c808ec350fe6638aa7ebb3e9020bcb0855a4008c6ee31879e5ffcbedf69b483446c1f38c0b52abbd544cac9dbe9f580ea6f618bf43d1f2a0a45c0efc2335603095903cc79d892446c3884490db14b5edefb5ef27c8fe1d371b7822ee5137e5a82aaf68eb8b9ae238788123c1a20299cdbbc89ff242caa356d8c340b48c845456e50f3db1c18895b83c32dfe027ea6253ec47cad0179e6274627f5e39dcd76e5d0a7b7bce376fd88e92de94e2a1d8e6b45ed300e645013d60aaff1c7547f8f7e51731af4ff7f730bec858af82c9978610681e8024ca3333ae86ea7dd32077a6e336188a320246b0b60208cc10bda9a9d6ace7d924453cb1c2f57fffd76deed0d8a781419abbcb4039afa3753fc47d5f832a00e6f98c5095577592e7b3e92ed6ac48442502d998abb846844fa618cb9afa20bad2fa5a945518b62b175d3667378b2a20cdbee5f20128081d213304cefa02fc3ca1d0107921f6391d79959ba0e9d53db52ca718122ad8128d820423ec8871a751c31742e04f597a2ce2544d50d3f002dc98ef16c74d0874f3824cbba33d3a3f1cddc61d1e626ae88da69f7f46880844420d60ea6cd6d96cc26286961e8841077fb599641f75c3dbfc8b21a5f3186dc2187b30fbe1c7aded37df7a98e5e2c501520f43913d4187c72561aff4715e76f9419641417ba1a9120c06f81a19544310bf52f37331337bf4ad5ecaa5d42ee76a3980b4090eefba807ba69553877d0cc24ab1aae5ee6bfa2eef35608e5873b79a500838a00fa26893fd6fbe4c006cb25205e83d9e8f42f0ffee05d7433d8f439a2fc9ad2dd17be069b8bb0a825fe7d032280edd55e129f874509e7a575bb4ee968adfd71b7aff64d722d40aa546e62e5175f1964a29658297ac95860b420d7b2be34b792537c2067e20c0cbee5b0fe3b756cabbaf9f7c932d2f5e05a776b40cc7e1eaa7a843804758e237db9221ceb9ce7e4783efecdaa77b72eaca690dfa2ea7c0ab89b748ce2af816ae5dcef08ef4b4b025851435478f23b774f2ba0f2a78426ecab88913dd9e2cbe3bca3aa5f12c627aef4b77b6fe1bb20</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入秘密查看文章</span>
      </label>
    </div>
    <!-- 添加确认按钮 -->
    <button id="hbeConfirmBtn" class="hbe hbe-confirm-btn">Confirm</button>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>hexo如何给文章加框</title>
    <url>/how-to-add-frame.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>找到hexo&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;index.styl<br>将：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line">  .post-block, .pagination, .comments &#123;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line"> .post-block&#123;</span><br><span class="line">   visibility: hidden;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, 1);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, 1);</span><br><span class="line">   &#125;</span><br><span class="line"> .pagination, .comments &#123;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 如何给文章设密码</title>
    <url>/how-to-encrypt.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure>
<h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>在本目录配置文件_config.yml加入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure>
<h1 id="博客文章加密"><a href="#博客文章加密" class="headerlink" title="博客文章加密"></a>博客文章加密</h1><p>写新的文章时加入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password: xxxxx</span><br><span class="line">message: 输入密码的提示。</span><br></pre></td></tr></table></figure>
<p>高级设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password: xxxx</span><br><span class="line">abstract: here is something encrypted</span><br><span class="line">message: 请输入密码。</span><br><span class="line">wrong_pass_message: Oh, wrong password, please try again.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>如何学习</title>
    <url>/how-to-pretend-you-know.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="放过自己"><a href="#放过自己" class="headerlink" title="放过自己"></a>放过自己</h1><p>知识进入大脑分为以下几种：</p>
<ol>
<li>听过：有点印象</li>
<li>知道：对每一个环节比较熟悉，能回答相关问题</li>
<li>得到：你可以教别人</li>
<li>用到：抽象出规律，在生活中使用</li>
</ol>
<p>大多数情况、大多数东西都只在第一层，然而我们却想234。这是不现实的，强求也会痛苦。<br>其实没有必要。我们没有必要知道所有事情。没必要也指在阅读和学习时没有必要强迫自己读完学完。同时也意味着你没必要把朋友圈、订阅号等等的文章全部看完。少知道一些东西你并不会损失什么。把这些时间留给234。</p>
<h1 id="在二手知识上做探索"><a href="#在二手知识上做探索" class="headerlink" title="在二手知识上做探索"></a>在二手知识上做探索</h1><p>我们是站在巨人肩上生活的，或者至少也是站在强人身上。我们在“放过自己”以后就会去探索自己喜欢的事情了。那怎么办？去“请教”，去检索，例如google，wiki。通过一层层探索，我们就能把一个知识从“听过”变成知道。然后才有可能变成“得到”。然而还不够。</p>
<h1 id="梳理才能得到"><a href="#梳理才能得到" class="headerlink" title="梳理才能得到"></a>梳理才能得到</h1><p>只探索，不梳理并没有“得到”。需要思考、总结，总结出一些规律。整理是学习过程最重要的一环。整理因果，然后自己写出摘要，才是”得到“。</p>
<h1 id="说出来"><a href="#说出来" class="headerlink" title="说出来"></a>说出来</h1><p>一个知识点牵涉的点非常之多，我们难以全部掌握。如何知道自己的不足？两个方法：</p>
<ol>
<li>给别人讲一遍</li>
<li>写一篇公众号</li>
</ol>
<p>获得了一些知识再讲给别人会获得成就和虚荣，另一方面能快速找到自己的知识漏洞。在给别人讲述过程，如果对方好奇就一定会问一些细节。对于你不懂的一般会被问到，或者至少你在讲的时候会心虚。这是很好的去完善自己的机会。不懂的记下来，然后再去检索，梳理。写公众号也是如此。</p>
<h1 id="不做笔记可能因为焦虑"><a href="#不做笔记可能因为焦虑" class="headerlink" title="不做笔记可能因为焦虑"></a>不做笔记可能因为焦虑</h1><p>学习有时有点反人性，一般要克服懒惰。然而懒惰有时就是“放过自己”，特别是对于没有必要的事情。学习应该是一件好奇心驱使的事情，把精力放在自己好奇的事情上努力探索才能得到知识。</p>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo next 使用utterances评论</title>
    <url>/how-to-use-utterances.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>根据官网介绍步骤如下：</p>
<ol>
<li>在github中新建一个仓库，例如较utt_comment.</li>
<li>点击<a href="https://github.com/apps/utterances%E5%AE%89%E8%A3%85Github">https://github.com/apps/utterances安装Github</a> App 关联的仓库要选刚刚建立的那个，例如：utt_comment.</li>
<li>在主题配置文件_config.yml中设置：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Utterances</span><br><span class="line"># For more information: https://utteranc.es</span><br><span class="line">utterances:</span><br><span class="line">  enable: true</span><br><span class="line">  repo: your-name/your-repo # Github repository owner and name</span><br><span class="line">  # Available values: pathname | url | title | og:title</span><br><span class="line">  issue_term: pathname</span><br><span class="line">  # Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span><br><span class="line">  theme: github-light</span><br></pre></td></tr></table></figure></li>
</ol>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>todesk的安装</title>
    <url>/to-desk.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;先从todesk<a href="https://www.todesk.com/linux.html">主页</a>下载适合的Linux版本。然后用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> dnf rpm Uvh todesk-v4.7.2.0-x86_64.rpm</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;此外还得安装一个库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install libappindicator-gtk3</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后运行todesk，结果显示“error while loading shared libraries: libappindicator3.so.1: cannot open shared object file: No such file or directory“,明明已经安装了。很奇怪。<br>&emsp;&emsp;然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name libappindicator3.so.1</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;找到在&#x2F;usr&#x2F;lib下。<br>&emsp;&emsp;然后在.bashrc中加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH:$&#123;LD_LIBRARY_PATH&#125;:/usr/lib/</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后再运行todesk。结果显示安装的是libappindicator安装的是32位的，不匹配。<br>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf search libappindicator</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;找到libappindicator-gtk3.x86_64，然后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install libappindicator-gtk3.x86_64</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后就可以了。</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora下如何登陆X11桌面</title>
    <url>/how-to-set-X11-in-fedora.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;目前还不知道怎么办，todesk官网说要用x11桌面，现在的fedora已经默认用Wayland了。如何开启X11呢？编辑文件&#x2F;etc&#x2F;gdm&#x2F;custom.conf就好了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WaylandEnable=false</span><br><span class="line">DefaultSession=gnome-xorg.desktop</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后重新登陆就发现Settings-&gt;about显示Windowing System X11了。<br>&emsp;&emsp;不过靠不靠谱还不知道，还没有将remote station修改成X11。切换成X11以后bilibili视频似乎看不了了。连自己电脑中的mp4视频也播放不了。x11落后了？</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>AI工具网址</title>
    <url>/ai-tools.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="大语言"><a href="#大语言" class="headerlink" title="大语言"></a>大语言</h2><ol>
<li><a href="https://chat.openai.com/chat">Chatgpt</a></li>
<li><a href="https://kimi.moonshot.cn/">Kimi</a></li>
<li><a href="https://app.txyz.ai/">txyz</a></li>
<li><a href="https://www.chatpdf.com/">chatpdf</a></li>
<li><a href="https://typeset.io/">SCIspace</a></li>
<li><a href="https://www.humata.ai/">Humata</a></li>
<li><a href="https://www.pandagpt.io/">PandaGPT</a></li>
<li><a href="https://chat.googlegemini.co/">Googlegemini</a></li>
</ol>
<h2 id="翻译与润色"><a href="#翻译与润色" class="headerlink" title="翻译与润色"></a>翻译与润色</h2><ol>
<li><a href="https://www.deepl.com/translator/files">deepl</a></li>
<li><a href="https://app.grammarly.com/">grammarly</a></li>
</ol>
<h2 id="视频处理"><a href="#视频处理" class="headerlink" title="视频处理"></a>视频处理</h2><ol>
<li><a href="https://b.jimmylv.cn/">biliGTP</a></li>
</ol>
<h2 id="ppt"><a href="#ppt" class="headerlink" title="ppt"></a>ppt</h2><ol>
<li><a href="https://ppt.sankki.com/#/works">sankki</a></li>
<li><a href="https://beta.tome.app/">tomai</a></li>
<li><a href="https://chat-ppt.com/">chatppt</a></li>
</ol>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>冰川地震研究方向(一)</title>
    <url>/gls1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li>冰川内部水流与冰震活动的作用关系。冰下湖水位变化、接地线附近的冰下水流、冰流底部空枪的打开和闭合、冰川侵蚀作用、冰架底部裂缝扩张与冰震关系。</li>
<li>冰川物理、冰川动力学建模与冰川地震学的进一步交叉与融合、冰川结构变化机制及冰震和冰川物性参数关系，如冰川底部冰zi的剪切模量主要受到冰zi密度、含水量以及孔隙度的影响是研究冰川滑移定律及冰川动力学建模的重要参数。</li>
<li>冰川结构变化的前兆特征研究，例如冰川地震发生前的前段冰震密集活动。</li>
<li>外部环境与冰川的相互作用，例如海浪、潮汐、次重力波以及温度、风场变化对冰川活动的变化。</li>
</ol>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>glacial seismology</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora下没有音量控制了</title>
    <url>/no-audio-control.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>之前安装todesk没有搞定，总是连不上，于是又把它卸载了。卸载的时候把pulseaudio.x86_64也给卸载了。然后发现没有音量控制条了。然后又给安装回来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install pulseaudio</span><br></pre></td></tr></table></figure>
<p>结果mplayer也出问题了。播放视频的时候卡住，其中一个问题是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">do_connect: could not connect to socket</span><br></pre></td></tr></table></figure>
<p>于是在~&#x2F;.mplayer&#x2F;config中加入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lirc=no</span><br></pre></td></tr></table></figure>
<p>然后还是播放不了，出现问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MPlayer SVN-r38423-13 (C) 2000-2023 MPlayer Team</span><br><span class="line"></span><br><span class="line">Playing let_it_go_original.mp4.</span><br><span class="line">libavformat version 58.76.100 (external)</span><br><span class="line">libavformat file format detected.</span><br><span class="line">[mov,mp4,m4a,3gp,3g2,mj2 @ 0x7f6043a46660]Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol</span><br><span class="line">[lavf] stream 0: video (h264), -vid 0</span><br><span class="line">[lavf] stream 1: audio (aac), -aid 0, -alang und</span><br><span class="line">VIDEO:  [H264]  1280x720  24bpp  24.000 fps  1593.8 kbps (194.5 kbyte/s)</span><br><span class="line">X11 error: BadMatch (invalid parameter attributes)</span><br><span class="line">Failed to open VDPAU backend libvdpau_nvidia.so: cannot open shared object file: No such file or directory</span><br><span class="line">[vdpau] Error when calling vdp_device_create_x11: 1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>然后目前还没搞定。不知哪位大神能帮忙啊。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora下浏览器播放视频卡住没有声音</title>
    <url>/no-audio-in-playing-browser-video.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>之前整了nodesk之后就出现了视频播放的问题。用mplayer播放视频时，卡住。用浏览器播放视频的时候卡住，关掉音频之后视频正常播放了。但是没有声音。<br>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl --user stop wireplumber</span><br></pre></td></tr></table></figure>
<p>关掉了wireplumber以后mplayer和浏览器上都能正常播放了。但每次重启都得运行一次。多麻烦呀。<br>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install --allowerasing pipewire-pulseaudio</span><br></pre></td></tr></table></figure>
<p>就可以了。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>运行LaTeX 遇到 ! LaTeX Error: File `xxx` not found.</title>
    <url>/no-file-found-in-LaTeX.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这样就可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install &#x27;tex(xxx)&#x27;</span><br></pre></td></tr></table></figure>
<p>然后就会帮你安装缺失的文件。</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>laTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>纪念BLUE</title>
    <url>/memorise-blue.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;BLUE是在端午节过世的，或许更早，因为回到家只看到她的尸体。BLUE是我们在疫情解封后邂逅的，我们把她请回家，做了我们家一员。很抱歉没有给她配备好的住宿条件。让她在房间里可以自由的跑，只在进食的时候放在脸盆里。我不知道她挑不挑食。曾经在脸盆里投喂了白菜，她没吃。她很喜欢鱼饲料。每次投喂都大块朵颐。身材也是看得见的长大。一开始BLUE很害羞，只要我们一靠近她就立马缩回去，可能是还不熟络。她经常在屋子里摸索，大约所有地方她都造访过，很多时候还担当了扫帚的职责，常常跑出来以后裹了一身的棉絮。常常我们也不知道她在哪个角落，只听她哆哆哆的脚步声，便知道她还在探索。</p>
<p>&emsp;&emsp;天冷起来，她是要睡很长时间的。我买了个冬眠盒子。把她放在里面，她迫不及待地钻了进去。开始还有些动静，天冷一些就安静了。只能从盒子上的水汽知道她还在。她熬过了四个冬天，她总能在天暖和的时候醒来。加上把她带回家那一次，她一共搬了三次家。</p>
<p>&emsp;&emsp;有时我们在工作，她跑到客厅，瞅一瞅我们，大概在不懈的嘲笑，然后就继续她的探索；有时我们在床上休息，她在房间里哆哆哆，大概在取笑我们还在赖床。<br>后来我们碰到了更小只的purple男孩，把他带回来给BLUE做朋友。不知道他们相不相熟。有一次我们外出旅行了一周，他们两个一起躲到了厕所阴凉地方，靠在一块报团取暖。<br>到了冬天把他们一起放在了冬眠盒子。各自安好。谁知天热起来把他们放出来，BLUE的眼睛是浮肿的，也茶饭不思。我买了眼药给他治竟也无好转。随后又多次买药。</p>
<p>&emsp;&emsp;老婆说自己不太会养宠物，以前家里养过鸟，鱼，狗。他们去世时自己会十分悲痛，像失去了亲人一样不舍。我说对BLUE大可放心，因为到时候可能她会给我们送终。可是毕竟不能如愿。</p>
<p>&emsp;&emsp;我和娃把BLUE埋在了路口。那里我们还埋葬了一只小鸟和一只仓鼠。娃似乎比以前坚强，麻雀和仓鼠过世的时候他哭得很伤心，而这次他很淡然。他说这宇宙所有东西所有东西都会死掉，都会消失的。不知道他是明白还是不明白。</p>
<p>&emsp;&emsp;希望一切安好。我估计以后再也不养宠物。如果他成了你的宠物，你就是在掌控他的生死。</p>]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>某日记</tag>
      </tags>
  </entry>
  <entry>
    <title>图像识别深度学习资料</title>
    <url>/object-detection.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>R-CNN</li>
<li>Fast R-CNN</li>
<li>Faster R-CNN</li>
<li>Mask R-CNN</li>
<li>Light-Head R-CNN</li>
<li>Cascade R-CNN</li>
<li>SPP-Net</li>
<li>YOLO</li>
<li>YOLOv2</li>
<li>YOLOv3</li>
<li>YOLT</li>
<li>SSD</li>
<li>DSSD</li>
<li>FSSD</li>
<li>ESSD</li>
<li>MDSSD</li>
<li>Pelee</li>
<li>Fire SSD</li>
<li>R-FCN</li>
<li>FPN</li>
<li>DSOD</li>
<li>RetinaNet</li>
<li>MegDet</li>
<li>RefineNet</li>
<li>DetNet</li>
<li>SSOD</li>
<li>CornerNet</li>
<li>M2Det</li>
<li>3D Object Detection</li>
<li>ZSD（Zero-Shot Object Detection）</li>
<li>OSD（One-Shot object Detection）</li>
<li>Weakly Supervised Object Detection</li>
<li>Softer-NMS</li>
<li>2018</li>
<li>2019</li>
<li>Other</li>
</ul>
<p>Based on handong1587’s github: <a href="https://handong1587.github.io/deep_learning/2015/10/09/object-detection.html">https://handong1587.github.io/deep_learning/2015/10/09/object-detection.html</a></p>
<h1 id="Survey"><a href="#Survey" class="headerlink" title="Survey"></a>Survey</h1><p><strong>Imbalance Problems in Object Detection: A Review</strong></p>
<ul>
<li>intro: under review at TPAMI</li>
<li>arXiv: <a href="https://arxiv.org/abs/1909.00169">https://arxiv.org/abs/1909.00169</a></li>
</ul>
<p><strong>Recent Advances in Deep Learning for Object Detection</strong></p>
<ul>
<li>intro: From 2013 (OverFeat) to 2019 (DetNAS)</li>
<li>arXiv: <a href="https://arxiv.org/abs/1908.03673">https://arxiv.org/abs/1908.03673</a></li>
</ul>
<p><strong>A Survey of Deep Learning-based Object Detection</strong></p>
<ul>
<li><p>intro：From Fast R-CNN to NAS-FPN</p>
</li>
<li><p>arXiv：<a href="https://arxiv.org/abs/1907.09408">https://arxiv.org/abs/1907.09408</a></p>
</li>
</ul>
<p><strong>Object Detection in 20 Years: A Survey</strong></p>
<ul>
<li>intro：This work has been submitted to the IEEE TPAMI for possible publication</li>
<li>arXiv：<a href="https://arxiv.org/abs/1905.05055">https://arxiv.org/abs/1905.05055</a></li>
</ul>
<p><strong>《Recent Advances in Object Detection in the Age of Deep Convolutional Neural Networks》</strong></p>
<ul>
<li><p>intro: awesome</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1809.03193">https://arxiv.org/abs/1809.03193</a></p>
</li>
</ul>
<p><strong>《Deep Learning for Generic Object Detection: A Survey》</strong></p>
<ul>
<li>intro: Submitted to IJCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1809.02165">https://arxiv.org/abs/1809.02165</a></li>
</ul>
<h1 id="Papers-Codes"><a href="#Papers-Codes" class="headerlink" title="Papers&amp;Codes"></a>Papers&amp;Codes</h1><h2 id="R-CNN"><a href="#R-CNN" class="headerlink" title="R-CNN"></a>R-CNN</h2><p><strong>Rich feature hierarchies for accurate object detection and semantic segmentation</strong></p>
<ul>
<li>intro: R-CNN</li>
<li>arxiv: <a href="http://arxiv.org/abs/1311.2524">http://arxiv.org/abs/1311.2524</a></li>
<li>supp: <a href="http://people.eecs.berkeley.edu/~rbg/papers/r-cnn-cvpr-supp.pdf">http://people.eecs.berkeley.edu/~rbg/papers/r-cnn-cvpr-supp.pdf</a></li>
<li>slides: <a href="http://www.image-net.org/challenges/LSVRC/2013/slides/r-cnn-ilsvrc2013-workshop.pdf">http://www.image-net.org/challenges/LSVRC/2013/slides/r-cnn-ilsvrc2013-workshop.pdf</a></li>
<li>slides: <a href="http://www.cs.berkeley.edu/~rbg/slides/rcnn-cvpr14-slides.pdf">http://www.cs.berkeley.edu/~rbg/slides/rcnn-cvpr14-slides.pdf</a></li>
<li>github: <a href="https://github.com/rbgirshick/rcnn">https://github.com/rbgirshick/rcnn</a></li>
<li>notes: <a href="http://zhangliliang.com/2014/07/23/paper-note-rcnn/">http://zhangliliang.com/2014/07/23/paper-note-rcnn/</a></li>
<li>caffe-pr(“Make R-CNN the Caffe detection example”): <a href="https://github.com/BVLC/caffe/pull/482">https://github.com/BVLC/caffe/pull/482</a></li>
</ul>
<h2 id="Fast-R-CNN"><a href="#Fast-R-CNN" class="headerlink" title="Fast R-CNN"></a>Fast R-CNN</h2><p><strong>Fast R-CNN</strong></p>
<ul>
<li>arxiv: <a href="http://arxiv.org/abs/1504.08083">http://arxiv.org/abs/1504.08083</a></li>
<li>slides: <a href="http://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-detection.pdf">http://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-detection.pdf</a></li>
<li>github: <a href="https://github.com/rbgirshick/fast-rcnn">https://github.com/rbgirshick/fast-rcnn</a></li>
<li>github(COCO-branch): <a href="https://github.com/rbgirshick/fast-rcnn/tree/coco">https://github.com/rbgirshick/fast-rcnn/tree/coco</a></li>
<li>webcam demo: <a href="https://github.com/rbgirshick/fast-rcnn/pull/29">https://github.com/rbgirshick/fast-rcnn/pull/29</a></li>
<li>notes: <a href="http://zhangliliang.com/2015/05/17/paper-note-fast-rcnn/">http://zhangliliang.com/2015/05/17/paper-note-fast-rcnn/</a></li>
<li>notes: <a href="http://blog.csdn.net/linj_m/article/details/48930179">http://blog.csdn.net/linj_m/article/details/48930179</a></li>
<li>github(“Fast R-CNN in MXNet”): <a href="https://github.com/precedenceguo/mx-rcnn">https://github.com/precedenceguo/mx-rcnn</a></li>
<li>github: <a href="https://github.com/mahyarnajibi/fast-rcnn-torch">https://github.com/mahyarnajibi/fast-rcnn-torch</a></li>
<li>github: <a href="https://github.com/apple2373/chainer-simple-fast-rnn">https://github.com/apple2373/chainer-simple-fast-rnn</a></li>
<li>github: <a href="https://github.com/zplizzi/tensorflow-fast-rcnn">https://github.com/zplizzi/tensorflow-fast-rcnn</a></li>
</ul>
<p><strong>A-Fast-RCNN: Hard Positive Generation via Adversary for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2017</li>
<li>arxiv: <a href="https://arxiv.org/abs/1704.03414">https://arxiv.org/abs/1704.03414</a></li>
<li>paper: <a href="http://abhinavsh.info/papers/pdfs/adversarial_object_detection.pdf">http://abhinavsh.info/papers/pdfs/adversarial_object_detection.pdf</a></li>
<li>github(Caffe): <a href="https://github.com/xiaolonw/adversarial-frcnn">https://github.com/xiaolonw/adversarial-frcnn</a></li>
</ul>
<h2 id="Faster-R-CNN"><a href="#Faster-R-CNN" class="headerlink" title="Faster R-CNN"></a>Faster R-CNN</h2><p><strong>Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks</strong></p>
<ul>
<li>intro: NIPS 2015</li>
<li>arxiv: <a href="http://arxiv.org/abs/1506.01497">http://arxiv.org/abs/1506.01497</a></li>
<li>gitxiv: <a href="http://www.gitxiv.com/posts/8pfpcvefDYn2gSgXk/faster-r-cnn-towards-real-time-object-detection-with-region">http://www.gitxiv.com/posts/8pfpcvefDYn2gSgXk/faster-r-cnn-towards-real-time-object-detection-with-region</a></li>
<li>slides: <a href="http://web.cs.hacettepe.edu.tr/~aykut/classes/spring2016/bil722/slides/w05-FasterR-CNN.pdf">http://web.cs.hacettepe.edu.tr/~aykut/classes/spring2016/bil722/slides/w05-FasterR-CNN.pdf</a></li>
<li>github(official, Matlab): <a href="https://github.com/ShaoqingRen/faster_rcnn">https://github.com/ShaoqingRen/faster_rcnn</a></li>
<li>github(Caffe): <a href="https://github.com/rbgirshick/py-faster-rcnn">https://github.com/rbgirshick/py-faster-rcnn</a></li>
<li>github(MXNet): <a href="https://github.com/msracver/Deformable-ConvNets/tree/master/faster_rcnn">https://github.com/msracver/Deformable-ConvNets/tree/master/faster_rcnn</a></li>
<li>github(PyTorch–recommend): <a href="https://github.com//jwyang/faster-rcnn.pytorch">https://github.com//jwyang/faster-rcnn.pytorch</a></li>
<li>github: <a href="https://github.com/mitmul/chainer-faster-rcnn">https://github.com/mitmul/chainer-faster-rcnn</a></li>
<li>github(Torch):: <a href="https://github.com/andreaskoepf/faster-rcnn.torch">https://github.com/andreaskoepf/faster-rcnn.torch</a></li>
<li>github(Torch):: <a href="https://github.com/ruotianluo/Faster-RCNN-Densecap-torch">https://github.com/ruotianluo/Faster-RCNN-Densecap-torch</a></li>
<li>github(TensorFlow): <a href="https://github.com/smallcorgi/Faster-RCNN_TF">https://github.com/smallcorgi/Faster-RCNN_TF</a></li>
<li>github(TensorFlow): <a href="https://github.com/CharlesShang/TFFRCNN">https://github.com/CharlesShang/TFFRCNN</a></li>
<li>github(C++ demo): <a href="https://github.com/YihangLou/FasterRCNN-Encapsulation-Cplusplus">https://github.com/YihangLou/FasterRCNN-Encapsulation-Cplusplus</a></li>
<li>github(Keras): <a href="https://github.com/yhenon/keras-frcnn">https://github.com/yhenon/keras-frcnn</a></li>
<li>github: <a href="https://github.com/Eniac-Xie/faster-rcnn-resnet">https://github.com/Eniac-Xie/faster-rcnn-resnet</a></li>
<li>github(C++): <a href="https://github.com/D-X-Y/caffe-faster-rcnn/tree/dev">https://github.com/D-X-Y/caffe-faster-rcnn/tree/dev</a></li>
</ul>
<p><strong>R-CNN minus R</strong></p>
<ul>
<li>intro: BMVC 2015</li>
<li>arxiv: <a href="http://arxiv.org/abs/1506.06981">http://arxiv.org/abs/1506.06981</a></li>
</ul>
<p><strong>Faster R-CNN in MXNet with distributed implementation and data parallelization</strong></p>
<ul>
<li>github: <a href="https://github.com/dmlc/mxnet/tree/master/example/rcnn">https://github.com/dmlc/mxnet/tree/master/example/rcnn</a></li>
</ul>
<p><strong>Contextual Priming and Feedback for Faster R-CNN</strong></p>
<ul>
<li>intro: ECCV 2016. Carnegie Mellon University</li>
<li>paper: <a href="http://abhinavsh.info/context_priming_feedback.pdf">http://abhinavsh.info/context_priming_feedback.pdf</a></li>
<li>poster: <a href="http://www.eccv2016.org/files/posters/P-1A-20.pdf">http://www.eccv2016.org/files/posters/P-1A-20.pdf</a></li>
</ul>
<p><strong>An Implementation of Faster RCNN with Study for Region Sampling</strong></p>
<ul>
<li>intro: Technical Report, 3 pages. CMU</li>
<li>arxiv: <a href="https://arxiv.org/abs/1702.02138">https://arxiv.org/abs/1702.02138</a></li>
<li>github: <a href="https://github.com/endernewton/tf-faster-rcnn">https://github.com/endernewton/tf-faster-rcnn</a></li>
<li>github: <a href="https://github.com/ruotianluo/pytorch-faster-rcnn">https://github.com/ruotianluo/pytorch-faster-rcnn</a></li>
</ul>
<p><strong>Interpretable R-CNN</strong></p>
<ul>
<li>intro: North Carolina State University &amp; Alibaba</li>
<li>keywords: AND-OR Graph (AOG)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.05226">https://arxiv.org/abs/1711.05226</a></li>
</ul>
<p><strong>Domain Adaptive Faster R-CNN for Object Detection in the Wild</strong></p>
<ul>
<li>intro: CVPR 2018. ETH Zurich &amp; ESAT&#x2F;PSI</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.03243">https://arxiv.org/abs/1803.03243</a></li>
</ul>
<h2 id="Mask-R-CNN"><a href="#Mask-R-CNN" class="headerlink" title="Mask R-CNN"></a>Mask R-CNN</h2><ul>
<li>arxiv: <a href="http://arxiv.org/abs/1703.06870">http://arxiv.org/abs/1703.06870</a></li>
<li>github(Keras): <a href="https://github.com/matterport/Mask_RCNN">https://github.com/matterport/Mask_RCNN</a></li>
<li>github(Caffe2): <a href="https://github.com/facebookresearch/Detectron">https://github.com/facebookresearch/Detectron</a></li>
<li>github(Pytorch): <a href="https://github.com/wannabeOG/Mask-RCNN">https://github.com/wannabeOG/Mask-RCNN</a></li>
<li>github(MXNet): <a href="https://github.com/TuSimple/mx-maskrcnn">https://github.com/TuSimple/mx-maskrcnn</a></li>
<li>github(Chainer): <a href="https://github.com/DeNA/Chainer_Mask_R-CNN">https://github.com/DeNA/Chainer_Mask_R-CNN</a></li>
</ul>
<h2 id="Light-Head-R-CNN"><a href="#Light-Head-R-CNN" class="headerlink" title="Light-Head R-CNN"></a>Light-Head R-CNN</h2><p><strong>Light-Head R-CNN: In Defense of Two-Stage Object Detector</strong></p>
<ul>
<li>intro: Tsinghua University &amp; Megvii Inc</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.07264">https://arxiv.org/abs/1711.07264</a></li>
<li>github(offical): <a href="https://github.com/zengarden/light_head_rcnn">https://github.com/zengarden/light_head_rcnn</a></li>
<li>github: <a href="https://github.com/terrychenism/Deformable-ConvNets/blob/master/rfcn/symbols/resnet_v1_101_rfcn_light.py#L784">https://github.com/terrychenism/Deformable-ConvNets/blob/master/rfcn/symbols/resnet_v1_101_rfcn_light.py#L784</a></li>
</ul>
<h2 id="Cascade-R-CNN"><a href="#Cascade-R-CNN" class="headerlink" title="Cascade R-CNN"></a>Cascade R-CNN</h2><p><strong>Cascade R-CNN: Delving into High Quality Object Detection</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1712.00726">https://arxiv.org/abs/1712.00726</a></li>
<li>github: <a href="https://github.com/zhaoweicai/cascade-rcnn">https://github.com/zhaoweicai/cascade-rcnn</a></li>
</ul>
<h2 id="SPP-Net"><a href="#SPP-Net" class="headerlink" title="SPP-Net"></a>SPP-Net</h2><p><strong>Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition</strong></p>
<ul>
<li>intro: ECCV 2014 &#x2F; TPAMI 2015</li>
<li>arxiv: <a href="http://arxiv.org/abs/1406.4729">http://arxiv.org/abs/1406.4729</a></li>
<li>github: <a href="https://github.com/ShaoqingRen/SPP_net">https://github.com/ShaoqingRen/SPP_net</a></li>
<li>notes: <a href="http://zhangliliang.com/2014/09/13/paper-note-sppnet/">http://zhangliliang.com/2014/09/13/paper-note-sppnet/</a></li>
</ul>
<p><strong>DeepID-Net: Deformable Deep Convolutional Neural Networks for Object Detection</strong></p>
<ul>
<li>intro: PAMI 2016</li>
<li>intro: an extension of R-CNN. box pre-training, cascade on region proposals, deformation layers and context representations</li>
<li>project page: <a href="http://www.ee.cuhk.edu.hk/%CB%9Cwlouyang/projects/imagenetDeepId/index.html">http://www.ee.cuhk.edu.hk/%CB%9Cwlouyang/projects/imagenetDeepId/index.html</a></li>
<li>arxiv: <a href="http://arxiv.org/abs/1412.5661">http://arxiv.org/abs/1412.5661</a></li>
</ul>
<p><strong>Object Detectors Emerge in Deep Scene CNNs</strong></p>
<ul>
<li>intro: ICLR 2015</li>
<li>arxiv: <a href="http://arxiv.org/abs/1412.6856">http://arxiv.org/abs/1412.6856</a></li>
<li>paper: <a href="https://www.robots.ox.ac.uk/~vgg/rg/papers/zhou_iclr15.pdf">https://www.robots.ox.ac.uk/~vgg/rg/papers/zhou_iclr15.pdf</a></li>
<li>paper: <a href="https://people.csail.mit.edu/khosla/papers/iclr2015_zhou.pdf">https://people.csail.mit.edu/khosla/papers/iclr2015_zhou.pdf</a></li>
<li>slides: <a href="http://places.csail.mit.edu/slide_iclr2015.pdf">http://places.csail.mit.edu/slide_iclr2015.pdf</a></li>
</ul>
<p><strong>segDeepM: Exploiting Segmentation and Context in Deep Neural Networks for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2015</li>
<li>project(code+data): <a href="https://www.cs.toronto.edu/~yukun/segdeepm.html">https://www.cs.toronto.edu/~yukun/segdeepm.html</a></li>
<li>arxiv: <a href="https://arxiv.org/abs/1502.04275">https://arxiv.org/abs/1502.04275</a></li>
<li>github: <a href="https://github.com/YknZhu/segDeepM">https://github.com/YknZhu/segDeepM</a></li>
</ul>
<p><strong>Object Detection Networks on Convolutional Feature Maps</strong></p>
<ul>
<li>intro: TPAMI 2015</li>
<li>keywords: NoC</li>
<li>arxiv: <a href="http://arxiv.org/abs/1504.06066">http://arxiv.org/abs/1504.06066</a></li>
</ul>
<p><strong>Improving Object Detection with Deep Convolutional Networks via Bayesian Optimization and Structured Prediction</strong></p>
<ul>
<li>arxiv: <a href="http://arxiv.org/abs/1504.03293">http://arxiv.org/abs/1504.03293</a></li>
<li>slides: <a href="http://www.ytzhang.net/files/publications/2015-cvpr-det-slides.pdf">http://www.ytzhang.net/files/publications/2015-cvpr-det-slides.pdf</a></li>
<li>github: <a href="https://github.com/YutingZhang/fgs-obj">https://github.com/YutingZhang/fgs-obj</a></li>
</ul>
<p><strong>DeepBox: Learning Objectness with Convolutional Networks</strong></p>
<ul>
<li>keywords: DeepBox</li>
<li>arxiv: <a href="http://arxiv.org/abs/1505.02146">http://arxiv.org/abs/1505.02146</a></li>
<li>github: <a href="https://github.com/weichengkuo/DeepBox">https://github.com/weichengkuo/DeepBox</a></li>
</ul>
<h2 id="YOLO"><a href="#YOLO" class="headerlink" title="YOLO"></a>YOLO</h2><p><strong>You Only Look Once: Unified, Real-Time Object Detection</strong></p>
<p><a href="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67"><img src="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67" alt="img"></a></p>
<ul>
<li>arxiv: <a href="http://arxiv.org/abs/1506.02640">http://arxiv.org/abs/1506.02640</a></li>
<li>code: <a href="https://pjreddie.com/darknet/yolov1/">https://pjreddie.com/darknet/yolov1/</a></li>
<li>github: <a href="https://github.com/pjreddie/darknet">https://github.com/pjreddie/darknet</a></li>
<li>blog: <a href="https://pjreddie.com/darknet/yolov1/">https://pjreddie.com/darknet/yolov1/</a></li>
<li>slides: <a href="https://docs.google.com/presentation/d/1aeRvtKG21KHdD5lg6Hgyhx5rPq_ZOsGjG5rJ1HP7BbA/pub?start=false&amp;loop=false&amp;delayms=3000&amp;slide=id.p">https://docs.google.com/presentation/d/1aeRvtKG21KHdD5lg6Hgyhx5rPq_ZOsGjG5rJ1HP7BbA/pub?start=false&amp;loop=false&amp;delayms=3000&amp;slide=id.p</a></li>
<li>reddit: <a href="https://www.reddit.com/r/MachineLearning/comments/3a3m0o/realtime_object_detection_with_yolo/">https://www.reddit.com/r/MachineLearning/comments/3a3m0o/realtime_object_detection_with_yolo/</a></li>
<li>github: <a href="https://github.com/gliese581gg/YOLO_tensorflow">https://github.com/gliese581gg/YOLO_tensorflow</a></li>
<li>github: <a href="https://github.com/xingwangsfu/caffe-yolo">https://github.com/xingwangsfu/caffe-yolo</a></li>
<li>github: <a href="https://github.com/frankzhangrui/Darknet-Yolo">https://github.com/frankzhangrui/Darknet-Yolo</a></li>
<li>github: <a href="https://github.com/BriSkyHekun/py-darknet-yolo">https://github.com/BriSkyHekun/py-darknet-yolo</a></li>
<li>github: <a href="https://github.com/tommy-qichang/yolo.torch">https://github.com/tommy-qichang/yolo.torch</a></li>
<li>github: <a href="https://github.com/frischzenger/yolo-windows">https://github.com/frischzenger/yolo-windows</a></li>
<li>github: <a href="https://github.com/AlexeyAB/yolo-windows">https://github.com/AlexeyAB/yolo-windows</a></li>
<li>github: <a href="https://github.com/nilboy/tensorflow-yolo">https://github.com/nilboy/tensorflow-yolo</a></li>
</ul>
<p><strong>darkflow - translate darknet to tensorflow. Load trained weights, retrain&#x2F;fine-tune them using tensorflow, export constant graph def to C++</strong></p>
<ul>
<li>blog: <a href="https://thtrieu.github.io/notes/yolo-tensorflow-graph-buffer-cpp">https://thtrieu.github.io/notes/yolo-tensorflow-graph-buffer-cpp</a></li>
<li>github: <a href="https://github.com/thtrieu/darkflow">https://github.com/thtrieu/darkflow</a></li>
</ul>
<p><strong>Start Training YOLO with Our Own Data</strong></p>
<p><a href="https://camo.githubusercontent.com/2f99b692dd7ce47d7832385f3e8a6654e680d92a/687474703a2f2f6775616e6768616e2e696e666f2f626c6f672f656e2f77702d636f6e74656e742f75706c6f6164732f323031352f31322f696d616765732d34302e6a7067"><img src="https://camo.githubusercontent.com/2f99b692dd7ce47d7832385f3e8a6654e680d92a/687474703a2f2f6775616e6768616e2e696e666f2f626c6f672f656e2f77702d636f6e74656e742f75706c6f6164732f323031352f31322f696d616765732d34302e6a7067" alt="img"></a></p>
<ul>
<li>intro: train with customized data and class numbers&#x2F;labels. Linux &#x2F; Windows version for darknet.</li>
<li>blog: <a href="http://guanghan.info/blog/en/my-works/train-yolo/">http://guanghan.info/blog/en/my-works/train-yolo/</a></li>
<li>github: <a href="https://github.com/Guanghan/darknet">https://github.com/Guanghan/darknet</a></li>
</ul>
<p><strong>YOLO: Core ML versus MPSNNGraph</strong></p>
<ul>
<li>intro: Tiny YOLO for iOS implemented using CoreML but also using the new MPS graph API.</li>
<li>blog: <a href="http://machinethink.net/blog/yolo-coreml-versus-mps-graph/">http://machinethink.net/blog/yolo-coreml-versus-mps-graph/</a></li>
<li>github: <a href="https://github.com/hollance/YOLO-CoreML-MPSNNGraph">https://github.com/hollance/YOLO-CoreML-MPSNNGraph</a></li>
</ul>
<p><strong>TensorFlow YOLO object detection on Android</strong></p>
<ul>
<li>intro: Real-time object detection on Android using the YOLO network with TensorFlow</li>
<li>github: <a href="https://github.com/natanielruiz/android-yolo">https://github.com/natanielruiz/android-yolo</a></li>
</ul>
<p><strong>Computer Vision in iOS – Object Detection</strong></p>
<ul>
<li>blog: <a href="https://sriraghu.com/2017/07/12/computer-vision-in-ios-object-detection/">https://sriraghu.com/2017/07/12/computer-vision-in-ios-object-detection/</a></li>
<li>github:<a href="https://github.com/r4ghu/iOS-CoreML-Yolo">https://github.com/r4ghu/iOS-CoreML-Yolo</a></li>
</ul>
<h2 id="YOLOv2"><a href="#YOLOv2" class="headerlink" title="YOLOv2"></a>YOLOv2</h2><p><strong>YOLO9000: Better, Faster, Stronger</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1612.08242">https://arxiv.org/abs/1612.08242</a></li>
<li>code: <a href="http://pjreddie.com/yolo9000/">http://pjreddie.com/yolo9000/</a>    <a href="https://pjreddie.com/darknet/yolov2/">https://pjreddie.com/darknet/yolov2/</a></li>
<li>github(Chainer): <a href="https://github.com/leetenki/YOLOv2">https://github.com/leetenki/YOLOv2</a></li>
<li>github(Keras): <a href="https://github.com/allanzelener/YAD2K">https://github.com/allanzelener/YAD2K</a></li>
<li>github(PyTorch): <a href="https://github.com/longcw/yolo2-pytorch">https://github.com/longcw/yolo2-pytorch</a></li>
<li>github(Tensorflow): <a href="https://github.com/hizhangp/yolo_tensorflow">https://github.com/hizhangp/yolo_tensorflow</a></li>
<li>github(Windows): <a href="https://github.com/AlexeyAB/darknet">https://github.com/AlexeyAB/darknet</a></li>
<li>github: <a href="https://github.com/choasUp/caffe-yolo9000">https://github.com/choasUp/caffe-yolo9000</a></li>
<li>github: <a href="https://github.com/philipperemy/yolo-9000">https://github.com/philipperemy/yolo-9000</a></li>
<li>github(TensorFlow): <a href="https://github.com/KOD-Chen/YOLOv2-Tensorflow">https://github.com/KOD-Chen/YOLOv2-Tensorflow</a></li>
<li>github(Keras): <a href="https://github.com/yhcc/yolo2">https://github.com/yhcc/yolo2</a></li>
<li>github(Keras): <a href="https://github.com/experiencor/keras-yolo2">https://github.com/experiencor/keras-yolo2</a></li>
<li>github(TensorFlow): <a href="https://github.com/WojciechMormul/yolo2">https://github.com/WojciechMormul/yolo2</a></li>
</ul>
<p><strong>darknet_scripts</strong></p>
<ul>
<li>intro: Auxilary scripts to work with (YOLO) darknet deep learning famework. AKA -&gt; How to generate YOLO anchors?</li>
<li>github: <a href="https://github.com/Jumabek/darknet_scripts">https://github.com/Jumabek/darknet_scripts</a></li>
</ul>
<p><strong>Yolo_mark: GUI for marking bounded boxes of objects in images for training Yolo v2</strong></p>
<ul>
<li>github: <a href="https://github.com/AlexeyAB/Yolo_mark">https://github.com/AlexeyAB/Yolo_mark</a></li>
</ul>
<p><strong>LightNet: Bringing pjreddie’s DarkNet out of the shadows</strong></p>
<p><a href="https://github.com//explosion/lightnet">https://github.com//explosion/lightnet</a></p>
<p><strong>YOLO v2 Bounding Box Tool</strong></p>
<ul>
<li>intro: Bounding box labeler tool to generate the training data in the format YOLO v2 requires.</li>
<li>github: <a href="https://github.com/Cartucho/yolo-boundingbox-labeler-GUI">https://github.com/Cartucho/yolo-boundingbox-labeler-GUI</a></li>
</ul>
<p><strong>Loss Rank Mining: A General Hard Example Mining Method for Real-time Detectors</strong></p>
<ul>
<li>intro: <strong>LRM</strong> is the first hard example mining strategy which could fit YOLOv2 perfectly and make it better applied in series of real scenarios where both real-time rates and accurate detection are strongly demanded.</li>
<li>arxiv: <a href="https://arxiv.org/abs/1804.04606">https://arxiv.org/abs/1804.04606</a></li>
</ul>
<p><strong>Object detection at 200 Frames Per Second</strong></p>
<ul>
<li>intro: faster than Tiny-Yolo-v2</li>
<li>arxiv: <a href="https://arxiv.org/abs/1805.06361">https://arxiv.org/abs/1805.06361</a></li>
</ul>
<p><strong>Event-based Convolutional Networks for Object Detection in Neuromorphic Cameras</strong></p>
<ul>
<li>intro: YOLE–Object Detection in Neuromorphic Cameras</li>
<li>arxiv:<a href="https://arxiv.org/abs/1805.07931">https://arxiv.org/abs/1805.07931</a></li>
</ul>
<p><strong>OmniDetector: With Neural Networks to Bounding Boxes</strong></p>
<ul>
<li>intro: a person detector on n fish-eye images of indoor scenes（NIPS 2018）</li>
<li>arxiv:<a href="https://arxiv.org/abs/1805.08503">https://arxiv.org/abs/1805.08503</a></li>
<li>datasets:<a href="https://gitlab.com/omnidetector/omnidetector">https://gitlab.com/omnidetector/omnidetector</a></li>
</ul>
<h2 id="YOLOv3"><a href="#YOLOv3" class="headerlink" title="YOLOv3"></a>YOLOv3</h2><p><strong>YOLOv3: An Incremental Improvement</strong></p>
<ul>
<li>arxiv:<a href="https://arxiv.org/abs/1804.02767">https://arxiv.org/abs/1804.02767</a></li>
<li>paper:<a href="https://pjreddie.com/media/files/papers/YOLOv3.pdf">https://pjreddie.com/media/files/papers/YOLOv3.pdf</a></li>
<li>code: <a href="https://pjreddie.com/darknet/yolo/">https://pjreddie.com/darknet/yolo/</a></li>
<li>github(Official):<a href="https://github.com/pjreddie/darknet">https://github.com/pjreddie/darknet</a></li>
<li>github:<a href="https://github.com/mystic123/tensorflow-yolo-v3">https://github.com/mystic123/tensorflow-yolo-v3</a></li>
<li>github:<a href="https://github.com/experiencor/keras-yolo3">https://github.com/experiencor/keras-yolo3</a></li>
<li>github:<a href="https://github.com/qqwweee/keras-yolo3">https://github.com/qqwweee/keras-yolo3</a></li>
<li>github:<a href="https://github.com/marvis/pytorch-yolo3">https://github.com/marvis/pytorch-yolo3</a></li>
<li>github:<a href="https://github.com/ayooshkathuria/pytorch-yolo-v3">https://github.com/ayooshkathuria/pytorch-yolo-v3</a></li>
<li>github:<a href="https://github.com/ayooshkathuria/YOLO_v3_tutorial_from_scratch">https://github.com/ayooshkathuria/YOLO_v3_tutorial_from_scratch</a></li>
<li>github:<a href="https://github.com/eriklindernoren/PyTorch-YOLOv3">https://github.com/eriklindernoren/PyTorch-YOLOv3</a></li>
<li>github:<a href="https://github.com/ultralytics/yolov3">https://github.com/ultralytics/yolov3</a></li>
<li>github:<a href="https://github.com/BobLiu20/YOLOv3_PyTorch">https://github.com/BobLiu20/YOLOv3_PyTorch</a></li>
<li>github:<a href="https://github.com/andy-yun/pytorch-0.4-yolov3">https://github.com/andy-yun/pytorch-0.4-yolov3</a></li>
<li>github:<a href="https://github.com/DeNA/PyTorch_YOLOv3">https://github.com/DeNA/PyTorch_YOLOv3</a></li>
</ul>
<h2 id="YOLT"><a href="#YOLT" class="headerlink" title="YOLT"></a>YOLT</h2><p><strong>You Only Look Twice: Rapid Multi-Scale Object Detection In Satellite Imagery</strong></p>
<ul>
<li><p>intro: Small Object Detection</p>
</li>
<li><p>arxiv:<a href="https://arxiv.org/abs/1805.09512">https://arxiv.org/abs/1805.09512</a></p>
</li>
<li><p>github:<a href="https://github.com/avanetten/yolt">https://github.com/avanetten/yolt</a></p>
</li>
</ul>
<h2 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h2><p><strong>SSD: Single Shot MultiBox Detector</strong></p>
<p><a href="https://camo.githubusercontent.com/ad9b147ed3a5f48ffb7c3540711c15aa04ce49c6/687474703a2f2f7777772e63732e756e632e6564752f7e776c69752f7061706572732f7373642e706e67"><img src="https://camo.githubusercontent.com/ad9b147ed3a5f48ffb7c3540711c15aa04ce49c6/687474703a2f2f7777772e63732e756e632e6564752f7e776c69752f7061706572732f7373642e706e67" alt="img"></a></p>
<ul>
<li>intro: ECCV 2016 Oral</li>
<li>arxiv: <a href="http://arxiv.org/abs/1512.02325">http://arxiv.org/abs/1512.02325</a></li>
<li>paper: <a href="http://www.cs.unc.edu/~wliu/papers/ssd.pdf">http://www.cs.unc.edu/~wliu/papers/ssd.pdf</a></li>
<li>slides: <a href="http://www.cs.unc.edu/~wliu/papers/ssd_eccv2016_slide.pdf">http://www.cs.unc.edu/%7Ewliu/papers/ssd_eccv2016_slide.pdf</a></li>
<li>github(Official): <a href="https://github.com/weiliu89/caffe/tree/ssd">https://github.com/weiliu89/caffe/tree/ssd</a></li>
<li>video: <a href="http://weibo.com/p/2304447a2326da963254c963c97fb05dd3a973">http://weibo.com/p/2304447a2326da963254c963c97fb05dd3a973</a></li>
<li>github: <a href="https://github.com/zhreshold/mxnet-ssd">https://github.com/zhreshold/mxnet-ssd</a></li>
<li>github: <a href="https://github.com/zhreshold/mxnet-ssd.cpp">https://github.com/zhreshold/mxnet-ssd.cpp</a></li>
<li>github: <a href="https://github.com/rykov8/ssd_keras">https://github.com/rykov8/ssd_keras</a></li>
<li>github: <a href="https://github.com/balancap/SSD-Tensorflow">https://github.com/balancap/SSD-Tensorflow</a></li>
<li>github: <a href="https://github.com/amdegroot/ssd.pytorch">https://github.com/amdegroot/ssd.pytorch</a></li>
<li>github(Caffe): <a href="https://github.com/chuanqi305/MobileNet-SSD">https://github.com/chuanqi305/MobileNet-SSD</a></li>
</ul>
<p><strong>What’s the diffience in performance between this new code you pushed and the previous code? #327</strong></p>
<p><a href="https://github.com/weiliu89/caffe/issues/327">https://github.com/weiliu89/caffe/issues/327</a></p>
<h2 id="DSSD"><a href="#DSSD" class="headerlink" title="DSSD"></a>DSSD</h2><p><strong>DSSD : Deconvolutional Single Shot Detector</strong></p>
<ul>
<li>intro: UNC Chapel Hill &amp; Amazon Inc</li>
<li>arxiv: <a href="https://arxiv.org/abs/1701.06659">https://arxiv.org/abs/1701.06659</a></li>
<li>github: <a href="https://github.com/chengyangfu/caffe/tree/dssd">https://github.com/chengyangfu/caffe/tree/dssd</a></li>
<li>github: <a href="https://github.com/MTCloudVision/mxnet-dssd">https://github.com/MTCloudVision/mxnet-dssd</a></li>
<li>demo: <a href="http://120.52.72.53/www.cs.unc.edu/c3pr90ntc0td/~cyfu/dssd_lalaland.mp4">http://120.52.72.53/www.cs.unc.edu/c3pr90ntc0td/~cyfu/dssd_lalaland.mp4</a></li>
</ul>
<p><strong>Enhancement of SSD by concatenating feature maps for object detection</strong></p>
<ul>
<li>intro: rainbow SSD (R-SSD)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1705.09587">https://arxiv.org/abs/1705.09587</a></li>
</ul>
<p><strong>Context-aware Single-Shot Detector</strong></p>
<ul>
<li>keywords: CSSD, DiCSSD, DeCSSD, effective receptive fields (ERFs), theoretical receptive fields (TRFs)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1707.08682">https://arxiv.org/abs/1707.08682</a></li>
</ul>
<p><strong>Feature-Fused SSD: Fast Detection for Small Objects</strong></p>
<p><a href="https://arxiv.org/abs/1709.05054">https://arxiv.org/abs/1709.05054</a></p>
<h2 id="FSSD"><a href="#FSSD" class="headerlink" title="FSSD"></a>FSSD</h2><p><strong>FSSD: Feature Fusion Single Shot Multibox Detector</strong></p>
<p><a href="https://arxiv.org/abs/1712.00960">https://arxiv.org/abs/1712.00960</a></p>
<p><strong>Weaving Multi-scale Context for Single Shot Detector</strong></p>
<ul>
<li>intro: WeaveNet</li>
<li>keywords: fuse multi-scale information</li>
<li>arxiv: <a href="https://arxiv.org/abs/1712.03149">https://arxiv.org/abs/1712.03149</a></li>
</ul>
<h2 id="ESSD"><a href="#ESSD" class="headerlink" title="ESSD"></a>ESSD</h2><p><strong>Extend the shallow part of Single Shot MultiBox Detector via Convolutional Neural Network</strong></p>
<p><a href="https://arxiv.org/abs/1801.05918">https://arxiv.org/abs/1801.05918</a></p>
<p><strong>Tiny SSD: A Tiny Single-shot Detection Deep Convolutional Neural Network for Real-time Embedded Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1802.06488">https://arxiv.org/abs/1802.06488</a></p>
<h2 id="MDSSD"><a href="#MDSSD" class="headerlink" title="MDSSD"></a>MDSSD</h2><p><strong>MDSSD: Multi-scale Deconvolutional Single Shot Detector for small objects</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1805.07009">https://arxiv.org/abs/1805.07009</a></li>
</ul>
<h2 id="Pelee"><a href="#Pelee" class="headerlink" title="Pelee"></a>Pelee</h2><p><strong>Pelee: A Real-Time Object Detection System on Mobile Devices</strong></p>
<p><a href="https://github.com/Robert-JunWang/Pelee">https://github.com/Robert-JunWang/Pelee</a></p>
<ul>
<li><p>intro: (ICLR 2018 workshop track)</p>
</li>
<li><p>arxiv: <a href="https://arxiv.org/abs/1804.06882">https://arxiv.org/abs/1804.06882</a></p>
</li>
<li><p>github: <a href="https://github.com/Robert-JunWang/Pelee">https://github.com/Robert-JunWang/Pelee</a></p>
</li>
</ul>
<h2 id="Fire-SSD"><a href="#Fire-SSD" class="headerlink" title="Fire SSD"></a>Fire SSD</h2><p><strong>Fire SSD: Wide Fire Modules based Single Shot Detector on Edge Device</strong></p>
<ul>
<li><p>intro:low cost, fast speed and high mAP on  factor edge computing devices</p>
</li>
<li><p>arxiv:<a href="https://arxiv.org/abs/1806.05363">https://arxiv.org/abs/1806.05363</a></p>
</li>
</ul>
<h2 id="R-FCN"><a href="#R-FCN" class="headerlink" title="R-FCN"></a>R-FCN</h2><p><strong>R-FCN: Object Detection via Region-based Fully Convolutional Networks</strong></p>
<ul>
<li>arxiv: <a href="http://arxiv.org/abs/1605.06409">http://arxiv.org/abs/1605.06409</a></li>
<li>github: <a href="https://github.com/daijifeng001/R-FCN">https://github.com/daijifeng001/R-FCN</a></li>
<li>github(MXNet): <a href="https://github.com/msracver/Deformable-ConvNets/tree/master/rfcn">https://github.com/msracver/Deformable-ConvNets/tree/master/rfcn</a></li>
<li>github: <a href="https://github.com/Orpine/py-R-FCN">https://github.com/Orpine/py-R-FCN</a></li>
<li>github: <a href="https://github.com/PureDiors/pytorch_RFCN">https://github.com/PureDiors/pytorch_RFCN</a></li>
<li>github: <a href="https://github.com/bharatsingh430/py-R-FCN-multiGPU">https://github.com/bharatsingh430/py-R-FCN-multiGPU</a></li>
<li>github: <a href="https://github.com/xdever/RFCN-tensorflow">https://github.com/xdever/RFCN-tensorflow</a></li>
</ul>
<p><strong>R-FCN-3000 at 30fps: Decoupling Detection and Classification</strong></p>
<p><a href="https://arxiv.org/abs/1712.01802">https://arxiv.org/abs/1712.01802</a></p>
<p><strong>Recycle deep features for better object detection</strong></p>
<ul>
<li>arxiv: <a href="http://arxiv.org/abs/1607.05066">http://arxiv.org/abs/1607.05066</a></li>
</ul>
<h2 id="FPN"><a href="#FPN" class="headerlink" title="FPN"></a>FPN</h2><p><strong>Feature Pyramid Networks for Object Detection</strong></p>
<ul>
<li>intro: Facebook AI Research</li>
<li>arxiv: <a href="https://arxiv.org/abs/1612.03144">https://arxiv.org/abs/1612.03144</a></li>
</ul>
<p><strong>Action-Driven Object Detection with Top-Down Visual Attentions</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1612.06704">https://arxiv.org/abs/1612.06704</a></li>
</ul>
<p><strong>Beyond Skip Connections: Top-Down Modulation for Object Detection</strong></p>
<ul>
<li>intro: CMU &amp; UC Berkeley &amp; Google Research</li>
<li>arxiv: <a href="https://arxiv.org/abs/1612.06851">https://arxiv.org/abs/1612.06851</a></li>
</ul>
<p><strong>Wide-Residual-Inception Networks for Real-time Object Detection</strong></p>
<ul>
<li>intro: Inha University</li>
<li>arxiv: <a href="https://arxiv.org/abs/1702.01243">https://arxiv.org/abs/1702.01243</a></li>
</ul>
<p><strong>Attentional Network for Visual Object Detection</strong></p>
<ul>
<li>intro: University of Maryland &amp; Mitsubishi Electric Research Laboratories</li>
<li>arxiv: <a href="https://arxiv.org/abs/1702.01478">https://arxiv.org/abs/1702.01478</a></li>
</ul>
<p><strong>Learning Chained Deep Features and Classifiers for Cascade in Object Detection</strong></p>
<ul>
<li>keykwords: CC-Net</li>
<li>intro: chained cascade network (CC-Net). 81.1% mAP on PASCAL VOC 2007</li>
<li>arxiv: <a href="https://arxiv.org/abs/1702.07054">https://arxiv.org/abs/1702.07054</a></li>
</ul>
<p><strong>DeNet: Scalable Real-time Object Detection with Directed Sparse Sampling</strong></p>
<ul>
<li>intro: ICCV 2017 (poster)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1703.10295">https://arxiv.org/abs/1703.10295</a></li>
</ul>
<p><strong>Discriminative Bimodal Networks for Visual Localization and Detection with Natural Language Queries</strong></p>
<ul>
<li>intro: CVPR 2017</li>
<li>arxiv: <a href="https://arxiv.org/abs/1704.03944">https://arxiv.org/abs/1704.03944</a></li>
</ul>
<p><strong>Spatial Memory for Context Reasoning in Object Detection</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1704.04224">https://arxiv.org/abs/1704.04224</a></li>
</ul>
<p><strong>Accurate Single Stage Detector Using Recurrent Rolling Convolution</strong></p>
<ul>
<li>intro: CVPR 2017. SenseTime</li>
<li>keywords: Recurrent Rolling Convolution (RRC)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1704.05776">https://arxiv.org/abs/1704.05776</a></li>
<li>github: <a href="https://github.com/xiaohaoChen/rrc_detection">https://github.com/xiaohaoChen/rrc_detection</a></li>
</ul>
<p><strong>Deep Occlusion Reasoning for Multi-Camera Multi-Target Detection</strong></p>
<p><a href="https://arxiv.org/abs/1704.05775">https://arxiv.org/abs/1704.05775</a></p>
<p><strong>LCDet: Low-Complexity Fully-Convolutional Neural Networks for Object Detection in Embedded Systems</strong></p>
<ul>
<li>intro: Embedded Vision Workshop in CVPR. UC San Diego &amp; Qualcomm Inc</li>
<li>arxiv: <a href="https://arxiv.org/abs/1705.05922">https://arxiv.org/abs/1705.05922</a></li>
</ul>
<p><strong>Point Linking Network for Object Detection</strong></p>
<ul>
<li>intro: Point Linking Network (PLN)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1706.03646">https://arxiv.org/abs/1706.03646</a></li>
</ul>
<p><strong>Perceptual Generative Adversarial Networks for Small Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1706.05274">https://arxiv.org/abs/1706.05274</a></p>
<p><strong>Few-shot Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1706.08249">https://arxiv.org/abs/1706.08249</a></p>
<p><strong>Yes-Net: An effective Detector Based on Global Information</strong></p>
<p><a href="https://arxiv.org/abs/1706.09180">https://arxiv.org/abs/1706.09180</a></p>
<p><strong>SMC Faster R-CNN: Toward a scene-specialized multi-object detector</strong></p>
<p><a href="https://arxiv.org/abs/1706.10217">https://arxiv.org/abs/1706.10217</a></p>
<p><strong>Towards lightweight convolutional neural networks for object detection</strong></p>
<p><a href="https://arxiv.org/abs/1707.01395">https://arxiv.org/abs/1707.01395</a></p>
<p><strong>RON: Reverse Connection with Objectness Prior Networks for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2017</li>
<li>arxiv: <a href="https://arxiv.org/abs/1707.01691">https://arxiv.org/abs/1707.01691</a></li>
<li>github: <a href="https://github.com/taokong/RON">https://github.com/taokong/RON</a></li>
</ul>
<p><strong>Mimicking Very Efficient Network for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2017. SenseTime &amp; Beihang University</li>
<li>paper: <a href="http://openaccess.thecvf.com/content_cvpr_2017/papers/Li_Mimicking_Very_Efficient_CVPR_2017_paper.pdf">http://openaccess.thecvf.com/content_cvpr_2017/papers/Li_Mimicking_Very_Efficient_CVPR_2017_paper.pdf</a></li>
</ul>
<p><strong>Residual Features and Unified Prediction Network for Single Stage Detection</strong></p>
<p><a href="https://arxiv.org/abs/1707.05031">https://arxiv.org/abs/1707.05031</a></p>
<p><strong>Deformable Part-based Fully Convolutional Network for Object Detection</strong></p>
<ul>
<li>intro: BMVC 2017 (oral). Sorbonne Universités &amp; CEDRIC</li>
<li>arxiv: <a href="https://arxiv.org/abs/1707.06175">https://arxiv.org/abs/1707.06175</a></li>
</ul>
<p><strong>Adaptive Feeding: Achieving Fast and Accurate Detections by Adaptively Combining Object Detectors</strong></p>
<ul>
<li>intro: ICCV 2017</li>
<li>arxiv: <a href="https://arxiv.org/abs/1707.06399">https://arxiv.org/abs/1707.06399</a></li>
</ul>
<p><strong>Recurrent Scale Approximation for Object Detection in CNN</strong></p>
<ul>
<li>intro: ICCV 2017</li>
<li>keywords: Recurrent Scale Approximation (RSA)</li>
<li>arxiv: <a href="https://arxiv.org/abs/1707.09531">https://arxiv.org/abs/1707.09531</a></li>
<li>github: <a href="https://github.com/sciencefans/RSA-for-object-detection">https://github.com/sciencefans/RSA-for-object-detection</a></li>
</ul>
<h2 id="DSOD"><a href="#DSOD" class="headerlink" title="DSOD"></a>DSOD</h2><p><strong>DSOD: Learning Deeply Supervised Object Detectors from Scratch</strong></p>
<p><img src="https://user-images.githubusercontent.com/3794909/28934967-718c9302-78b5-11e7-89ee-8b514e53e23c.png" alt="img"></p>
<ul>
<li>intro: ICCV 2017. Fudan University &amp; Tsinghua University &amp; Intel Labs China</li>
<li>arxiv: <a href="https://arxiv.org/abs/1708.01241">https://arxiv.org/abs/1708.01241</a></li>
<li>github: <a href="https://github.com/szq0214/DSOD">https://github.com/szq0214/DSOD</a></li>
<li>github:<a href="https://github.com/Windaway/DSOD-Tensorflow">https://github.com/Windaway/DSOD-Tensorflow</a></li>
<li>github:<a href="https://github.com/chenyuntc/dsod.pytorch">https://github.com/chenyuntc/dsod.pytorch</a></li>
</ul>
<p><strong>Learning Object Detectors from Scratch with Gated Recurrent Feature Pyramids</strong></p>
<ul>
<li>arxiv:<a href="https://arxiv.org/abs/1712.00886">https://arxiv.org/abs/1712.00886</a></li>
<li>github:<a href="https://github.com/szq0214/GRP-DSOD">https://github.com/szq0214/GRP-DSOD</a></li>
</ul>
<p><strong>Tiny-DSOD: Lightweight Object Detection for Resource-Restricted Usages</strong></p>
<ul>
<li>intro: BMVC 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1807.11013">https://arxiv.org/abs/1807.11013</a></li>
</ul>
<p><strong>Object Detection from Scratch with Deep Supervision</strong></p>
<ul>
<li>intro: This is an extended version of DSOD</li>
<li>arXiv: <a href="https://arxiv.org/abs/1809.09294">https://arxiv.org/abs/1809.09294</a></li>
</ul>
<h2 id="RetinaNet"><a href="#RetinaNet" class="headerlink" title="RetinaNet"></a>RetinaNet</h2><p><strong>Focal Loss for Dense Object Detection</strong></p>
<ul>
<li>intro: ICCV 2017 Best student paper award. Facebook AI Research</li>
<li>keywords: RetinaNet</li>
<li>arxiv: <a href="https://arxiv.org/abs/1708.02002">https://arxiv.org/abs/1708.02002</a></li>
</ul>
<p><strong>CoupleNet: Coupling Global Structure with Local Parts for Object Detection</strong></p>
<ul>
<li>intro: ICCV 2017</li>
<li>arxiv: <a href="https://arxiv.org/abs/1708.02863">https://arxiv.org/abs/1708.02863</a></li>
</ul>
<p><strong>Incremental Learning of Object Detectors without Catastrophic Forgetting</strong></p>
<ul>
<li>intro: ICCV 2017. Inria</li>
<li>arxiv: <a href="https://arxiv.org/abs/1708.06977">https://arxiv.org/abs/1708.06977</a></li>
</ul>
<p><strong>Zoom Out-and-In Network with Map Attention Decision for Region Proposal and Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1709.04347">https://arxiv.org/abs/1709.04347</a></p>
<p><strong>StairNet: Top-Down Semantic Aggregation for Accurate One Shot Detection</strong></p>
<p><a href="https://arxiv.org/abs/1709.05788">https://arxiv.org/abs/1709.05788</a></p>
<p><strong>Dynamic Zoom-in Network for Fast Object Detection in Large Images</strong></p>
<p><a href="https://arxiv.org/abs/1711.05187">https://arxiv.org/abs/1711.05187</a></p>
<p><strong>Zero-Annotation Object Detection with Web Knowledge Transfer</strong></p>
<ul>
<li>intro: NTU, Singapore &amp; Amazon</li>
<li>keywords: multi-instance multi-label domain adaption learning framework</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.05954">https://arxiv.org/abs/1711.05954</a></li>
</ul>
<h2 id="MegDet"><a href="#MegDet" class="headerlink" title="MegDet"></a>MegDet</h2><p><strong>MegDet: A Large Mini-Batch Object Detector</strong></p>
<ul>
<li>intro: Peking University &amp; Tsinghua University &amp; Megvii Inc</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.07240">https://arxiv.org/abs/1711.07240</a></li>
</ul>
<p><strong>Receptive Field Block Net for Accurate and Fast Object Detection</strong></p>
<ul>
<li>intro: RFBNet</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.07767">https://arxiv.org/abs/1711.07767</a></li>
<li>github: <a href="https://github.com//ruinmessi/RFBNet">https://github.com//ruinmessi/RFBNet</a></li>
</ul>
<p><strong>An Analysis of Scale Invariance in Object Detection - SNIP</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1711.08189">https://arxiv.org/abs/1711.08189</a></li>
<li>github: <a href="https://github.com/bharatsingh430/snip">https://github.com/bharatsingh430/snip</a></li>
</ul>
<p><strong>Feature Selective Networks for Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1711.08879">https://arxiv.org/abs/1711.08879</a></p>
<p><strong>Learning a Rotation Invariant Detector with Rotatable Bounding Box</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1711.09405">https://arxiv.org/abs/1711.09405</a></li>
<li>github: <a href="https://github.com/liulei01/DRBox">https://github.com/liulei01/DRBox</a></li>
</ul>
<p><strong>Scalable Object Detection for Stylized Objects</strong></p>
<ul>
<li>intro: Microsoft AI &amp; Research Munich</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.09822">https://arxiv.org/abs/1711.09822</a></li>
</ul>
<p><strong>Learning Object Detectors from Scratch with Gated Recurrent Feature Pyramids</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1712.00886">https://arxiv.org/abs/1712.00886</a></li>
<li>github: <a href="https://github.com/szq0214/GRP-DSOD">https://github.com/szq0214/GRP-DSOD</a></li>
</ul>
<p><strong>Deep Regionlets for Object Detection</strong></p>
<ul>
<li>keywords: region selection network, gating network</li>
<li>arxiv: <a href="https://arxiv.org/abs/1712.02408">https://arxiv.org/abs/1712.02408</a></li>
</ul>
<p><strong>Training and Testing Object Detectors with Virtual Images</strong></p>
<ul>
<li>intro: IEEE&#x2F;CAA Journal of Automatica Sinica</li>
<li>arxiv: <a href="https://arxiv.org/abs/1712.08470">https://arxiv.org/abs/1712.08470</a></li>
</ul>
<p><strong>Large-Scale Object Discovery and Detector Adaptation from Unlabeled Video</strong></p>
<ul>
<li>keywords: object mining, object tracking, unsupervised object discovery by appearance-based clustering, self-supervised detector adaptation</li>
<li>arxiv: <a href="https://arxiv.org/abs/1712.08832">https://arxiv.org/abs/1712.08832</a></li>
</ul>
<p><strong>Spot the Difference by Object Detection</strong></p>
<ul>
<li>intro: Tsinghua University &amp; JD Group</li>
<li>arxiv: <a href="https://arxiv.org/abs/1801.01051">https://arxiv.org/abs/1801.01051</a></li>
</ul>
<p><strong>Localization-Aware Active Learning for Object Detection</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1801.05124">https://arxiv.org/abs/1801.05124</a></li>
</ul>
<p><strong>Object Detection with Mask-based Feature Encoding</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1802.03934">https://arxiv.org/abs/1802.03934</a></li>
</ul>
<p><strong>LSTD: A Low-Shot Transfer Detector for Object Detection</strong></p>
<ul>
<li>intro: AAAI 2018</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.01529">https://arxiv.org/abs/1803.01529</a></li>
</ul>
<p><strong>Pseudo Mask Augmented Object Detection</strong></p>
<p><a href="https://arxiv.org/abs/1803.05858">https://arxiv.org/abs/1803.05858</a></p>
<p><strong>Revisiting RCNN: On Awakening the Classification Power of Faster RCNN</strong></p>
<p><a href="https://arxiv.org/abs/1803.06799">https://arxiv.org/abs/1803.06799</a></p>
<p><strong>Learning Region Features for Object Detection</strong></p>
<ul>
<li>intro: Peking University &amp; MSRA</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.07066">https://arxiv.org/abs/1803.07066</a></li>
</ul>
<p><strong>Single-Shot Bidirectional Pyramid Networks for High-Quality Object Detection</strong></p>
<ul>
<li>intro: Singapore Management University &amp; Zhejiang University</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.08208">https://arxiv.org/abs/1803.08208</a></li>
</ul>
<p><strong>Object Detection for Comics using Manga109 Annotations</strong></p>
<ul>
<li>intro: University of Tokyo &amp; National Institute of Informatics, Japan</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.08670">https://arxiv.org/abs/1803.08670</a></li>
</ul>
<p><strong>Task-Driven Super Resolution: Object Detection in Low-resolution Images</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1803.11316">https://arxiv.org/abs/1803.11316</a></li>
</ul>
<p><strong>Transferring Common-Sense Knowledge for Object Detection</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1804.01077">https://arxiv.org/abs/1804.01077</a></li>
</ul>
<p><strong>Multi-scale Location-aware Kernel Representation for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2018</li>
<li>arxiv: <a href="https://arxiv.org/abs/1804.00428">https://arxiv.org/abs/1804.00428</a></li>
<li>github: <a href="https://github.com/Hwang64/MLKP">https://github.com/Hwang64/MLKP</a></li>
</ul>
<p><strong>Loss Rank Mining: A General Hard Example Mining Method for Real-time Detectors</strong></p>
<ul>
<li>intro: National University of Defense Technology</li>
<li>arxiv: <a href="https://arxiv.org/abs/1804.04606">https://arxiv.org/abs/1804.04606</a></li>
</ul>
<p><strong>Robust Physical Adversarial Attack on Faster R-CNN Object Detector</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1804.05810">https://arxiv.org/abs/1804.05810</a></li>
</ul>
<h2 id="RefineNet"><a href="#RefineNet" class="headerlink" title="RefineNet"></a>RefineNet</h2><p><strong>Single-Shot Refinement Neural Network for Object Detection</strong></p>
<ul>
<li><p>intro: CVPR 2018</p>
</li>
<li><p>arxiv: <a href="https://arxiv.org/abs/1711.06897">https://arxiv.org/abs/1711.06897</a></p>
</li>
<li><p>github: <a href="https://github.com/sfzhang15/RefineDet">https://github.com/sfzhang15/RefineDet</a></p>
</li>
<li><p>github: <a href="https://github.com/lzx1413/PytorchSSD">https://github.com/lzx1413/PytorchSSD</a></p>
</li>
<li><p>github: <a href="https://github.com/ddlee96/RefineDet_mxnet">https://github.com/ddlee96/RefineDet_mxnet</a></p>
</li>
<li><p>github: <a href="https://github.com/MTCloudVision/RefineDet-Mxnet">https://github.com/MTCloudVision/RefineDet-Mxnet</a></p>
</li>
</ul>
<h2 id="DetNet"><a href="#DetNet" class="headerlink" title="DetNet"></a>DetNet</h2><p><strong>DetNet: A Backbone network for Object Detection</strong></p>
<ul>
<li>intro: Tsinghua University &amp; Face++</li>
<li>arxiv: <a href="https://arxiv.org/abs/1804.06215">https://arxiv.org/abs/1804.06215</a></li>
</ul>
<h2 id="SSOD"><a href="#SSOD" class="headerlink" title="SSOD"></a>SSOD</h2><p><strong>Self-supervisory Signals for Object Discovery and Detection</strong></p>
<ul>
<li>Google Brain</li>
<li>arxiv:<a href="https://arxiv.org/abs/1806.03370">https://arxiv.org/abs/1806.03370</a></li>
</ul>
<h2 id="CornerNet"><a href="#CornerNet" class="headerlink" title="CornerNet"></a>CornerNet</h2><p><strong>CornerNet: Detecting Objects as Paired Keypoints</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1808.01244">https://arxiv.org/abs/1808.01244</a></li>
<li>github: <a href="https://github.com/umich-vl/CornerNet">https://github.com/umich-vl/CornerNet</a></li>
</ul>
<h2 id="M2Det"><a href="#M2Det" class="headerlink" title="M2Det"></a>M2Det</h2><p><strong>M2Det: A Single-Shot Object Detector based on Multi-Level Feature Pyramid Network</strong></p>
<ul>
<li>intro: AAAI 2019</li>
<li>arXiv: <a href="https://arxiv.org/abs/1811.04533">https://arxiv.org/abs/1811.04533</a></li>
<li>github: <a href="https://github.com/qijiezhao/M2Det">https://github.com/qijiezhao/M2Det</a></li>
</ul>
<h2 id="3D-Object-Detection"><a href="#3D-Object-Detection" class="headerlink" title="3D Object Detection"></a>3D Object Detection</h2><p><strong>3D Backbone Network for 3D Object Detection</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1901.08373">https://arxiv.org/abs/1901.08373</a></li>
</ul>
<p><strong>LMNet: Real-time Multiclass Object Detection on CPU using 3D LiDARs</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1805.04902">https://arxiv.org/abs/1805.04902</a></li>
<li>github: <a href="https://github.com/CPFL/Autoware/tree/feature/cnn_lidar_detection">https://github.com/CPFL/Autoware/tree/feature/cnn_lidar_detection</a></li>
</ul>
<h2 id="ZSD（Zero-Shot-Object-Detection）"><a href="#ZSD（Zero-Shot-Object-Detection）" class="headerlink" title="ZSD（Zero-Shot Object Detection）"></a>ZSD（Zero-Shot Object Detection）</h2><p><strong>Zero-Shot Detection</strong></p>
<ul>
<li>intro: Australian National University</li>
<li>keywords: YOLO</li>
<li>arxiv: <a href="https://arxiv.org/abs/1803.07113">https://arxiv.org/abs/1803.07113</a></li>
</ul>
<p><strong>Zero-Shot Object Detection</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1804.04340">https://arxiv.org/abs/1804.04340</a></li>
</ul>
<p><strong>Zero-Shot Object Detection: Learning to Simultaneously Recognize and Localize Novel Concepts</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1803.06049">https://arxiv.org/abs/1803.06049</a></li>
</ul>
<p><strong>Zero-Shot Object Detection by Hybrid Region Embedding</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1805.06157">https://arxiv.org/abs/1805.06157</a></li>
</ul>
<h2 id="OSD（One-Shot-Object-Detection）"><a href="#OSD（One-Shot-Object-Detection）" class="headerlink" title="OSD（One-Shot Object Detection）"></a>OSD（One-Shot Object Detection）</h2><p><strong>Comparison Network for One-Shot Conditional Object Detection</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1904.02317">https://arxiv.org/abs/1904.02317</a></li>
</ul>
<p><strong>One-Shot Object Detection</strong></p>
<p>RepMet: Representative-based metric learning for classification and one-shot object detection</p>
<ul>
<li>intro: IBM Research AI</li>
<li>arxiv:<a href="https://arxiv.org/abs/1806.04728">https://arxiv.org/abs/1806.04728</a></li>
<li>github: TODO</li>
</ul>
<h2 id="Weakly-Supervised-Object-Detection"><a href="#Weakly-Supervised-Object-Detection" class="headerlink" title="Weakly Supervised Object Detection"></a>Weakly Supervised Object Detection</h2><p><strong>Weakly Supervised Object Detection in Artworks</strong></p>
<ul>
<li>intro: ECCV 2018 Workshop Computer Vision for Art Analysis</li>
<li>arXiv: <a href="https://arxiv.org/abs/1810.02569">https://arxiv.org/abs/1810.02569</a></li>
<li>Datasets: <a href="https://wsoda.telecom-paristech.fr/downloads/dataset/IconArt_v1.zip">https://wsoda.telecom-paristech.fr/downloads/dataset/IconArt_v1.zip</a></li>
</ul>
<p><strong>Cross-Domain Weakly-Supervised Object Detection through Progressive Domain Adaptation</strong></p>
<ul>
<li>intro: CVPR 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1803.11365">https://arxiv.org/abs/1803.11365</a></li>
<li>homepage: <a href="https://naoto0804.github.io/cross_domain_detection/">https://naoto0804.github.io/cross_domain_detection/</a></li>
<li>paper: <a href="http://openaccess.thecvf.com/content_cvpr_2018/html/Inoue_Cross-Domain_Weakly-Supervised_Object_CVPR_2018_paper.html">http://openaccess.thecvf.com/content_cvpr_2018/html/Inoue_Cross-Domain_Weakly-Supervised_Object_CVPR_2018_paper.html</a></li>
<li>github: <a href="https://github.com/naoto0804/cross-domain-detection">https://github.com/naoto0804/cross-domain-detection</a></li>
</ul>
<h2 id="Softer-NMS"><a href="#Softer-NMS" class="headerlink" title="Softer-NMS"></a>Softer-NMS</h2><p><strong>《Softer-NMS: Rethinking Bounding Box Regression for Accurate Object Detection》</strong></p>
<ul>
<li>intro: CMU &amp; Face++</li>
<li>arXiv: <a href="https://arxiv.org/abs/1809.08545">https://arxiv.org/abs/1809.08545</a></li>
<li>github: <a href="https://github.com/yihui-he/softer-NMS">https://github.com/yihui-he/softer-NMS</a></li>
</ul>
<h2 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h2><p><strong>Feature Selective Anchor-Free Module for Single-Shot Object Detection</strong></p>
<ul>
<li><p>intro: CVPR 2019</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1903.00621">https://arxiv.org/abs/1903.00621</a></p>
</li>
</ul>
<p><strong>Object Detection based on Region Decomposition and Assembly</strong></p>
<ul>
<li><p>intro: AAAI 2019</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1901.08225">https://arxiv.org/abs/1901.08225</a></p>
</li>
</ul>
<p><strong>Bottom-up Object Detection by Grouping Extreme and Center Points</strong></p>
<ul>
<li>intro: one stage 43.2% on COCO test-dev</li>
<li>arXiv: <a href="https://arxiv.org/abs/1901.08043">https://arxiv.org/abs/1901.08043</a></li>
<li>github: <a href="https://github.com/xingyizhou/ExtremeNet">https://github.com/xingyizhou/ExtremeNet</a></li>
</ul>
<p><strong>ORSIm Detector: A Novel Object Detection Framework in Optical Remote Sensing Imagery Using Spatial-Frequency Channel Features</strong></p>
<ul>
<li><p>intro: IEEE TRANSACTIONS ON GEOSCIENCE AND REMOTE SENSING</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1901.07925">https://arxiv.org/abs/1901.07925</a></p>
</li>
</ul>
<p><strong>Consistent Optimization for Single-Shot Object Detection</strong></p>
<ul>
<li><p>intro: improves RetinaNet from 39.1 AP to 40.1 AP on COCO datase</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1901.06563">https://arxiv.org/abs/1901.06563</a></p>
</li>
</ul>
<p><strong>Learning Pairwise Relationship for Multi-object Detection in Crowded Scenes</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1901.03796">https://arxiv.org/abs/1901.03796</a></li>
</ul>
<p><strong>RetinaMask: Learning to predict masks improves state-of-the-art single-shot detection for free</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1901.03353">https://arxiv.org/abs/1901.03353</a></li>
<li>github: <a href="https://github.com/chengyangfu/retinamask">https://github.com/chengyangfu/retinamask</a></li>
</ul>
<p><strong>Region Proposal by Guided Anchoring</strong></p>
<ul>
<li>intro: CUHK - SenseTime Joint Lab</li>
<li>arXiv: <a href="https://arxiv.org/abs/1901.03278">https://arxiv.org/abs/1901.03278</a></li>
</ul>
<p><strong>Scale-Aware Trident Networks for Object Detection</strong></p>
<ul>
<li>intro: mAP of <strong>48.4</strong> on the COCO dataset</li>
<li>arXiv: <a href="https://arxiv.org/abs/1901.01892">https://arxiv.org/abs/1901.01892</a></li>
</ul>
<h2 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h2><p><strong>Large-Scale Object Detection of Images from Network Cameras in Variable Ambient Lighting Conditions</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1812.11901">https://arxiv.org/abs/1812.11901</a></li>
</ul>
<p><strong>Strong-Weak Distribution Alignment for Adaptive Object Detection</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1812.04798">https://arxiv.org/abs/1812.04798</a></li>
</ul>
<p><strong>AutoFocus: Efficient Multi-Scale Inference</strong></p>
<ul>
<li>intro: AutoFocus obtains an <strong>mAP of 47.9%</strong> (68.3% at 50% overlap) on the <strong>COCO test-dev</strong> set while processing <strong>6.4 images per second on a Titan X (Pascal) GPU</strong> </li>
<li>arXiv: <a href="https://arxiv.org/abs/1812.01600">https://arxiv.org/abs/1812.01600</a></li>
</ul>
<p><strong>NOTE-RCNN: NOise Tolerant Ensemble RCNN for Semi-Supervised Object Detection</strong></p>
<ul>
<li>intro: Google Could</li>
<li>arXiv: <a href="https://arxiv.org/abs/1812.00124">https://arxiv.org/abs/1812.00124</a></li>
</ul>
<p><strong>SPLAT: Semantic Pixel-Level Adaptation Transforms for Detection</strong></p>
<ul>
<li>intro: UC Berkeley</li>
<li>arXiv: <a href="https://arxiv.org/abs/1812.00929">https://arxiv.org/abs/1812.00929</a></li>
</ul>
<p><strong>Grid R-CNN</strong></p>
<ul>
<li>intro: SenseTime</li>
<li>arXiv: <a href="https://arxiv.org/abs/1811.12030">https://arxiv.org/abs/1811.12030</a></li>
</ul>
<p><strong>Deformable ConvNets v2: More Deformable, Better Results</strong></p>
<ul>
<li><p>intro: Microsoft Research Asia</p>
</li>
<li><p>arXiv: <a href="https://arxiv.org/abs/1811.11168">https://arxiv.org/abs/1811.11168</a></p>
</li>
</ul>
<p><strong>Anchor Box Optimization for Object Detection</strong></p>
<ul>
<li>intro: Microsoft Research</li>
<li>arXiv: <a href="https://arxiv.org/abs/1812.00469">https://arxiv.org/abs/1812.00469</a></li>
</ul>
<p><strong>Efficient Coarse-to-Fine Non-Local Module for the Detection of Small Objects</strong></p>
<ul>
<li>intro: <a href="https://arxiv.org/abs/1811.12152">https://arxiv.org/abs/1811.12152</a></li>
</ul>
<p><strong>NOTE-RCNN: NOise Tolerant Ensemble RCNN for Semi-Supervised Object Detection</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1812.00124">https://arxiv.org/abs/1812.00124</a></li>
</ul>
<p><strong>Learning RoI Transformer for Detecting Oriented Objects in Aerial Images</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1812.00155">https://arxiv.org/abs/1812.00155</a></li>
</ul>
<p><strong>Integrated Object Detection and Tracking with Tracklet-Conditioned Detection</strong></p>
<ul>
<li>intro: Microsoft Research Asia</li>
<li>arXiv: <a href="https://arxiv.org/abs/1811.11167">https://arxiv.org/abs/1811.11167</a></li>
</ul>
<p><strong>Deep Regionlets: Blended Representation and Deep Learning for Generic Object Detection</strong></p>
<ul>
<li>arXiv: <a href="https://arxiv.org/abs/1811.11318">https://arxiv.org/abs/1811.11318</a></li>
</ul>
<p> <strong>Gradient Harmonized Single-stage Detector</strong></p>
<ul>
<li>intro: AAAI 2019</li>
<li>arXiv: <a href="https://arxiv.org/abs/1811.05181">https://arxiv.org/abs/1811.05181</a></li>
</ul>
<p><strong>CFENet: Object Detection with Comprehensive Feature Enhancement Module</strong></p>
<ul>
<li>intro: ACCV 2018</li>
<li>github: <a href="https://github.com/qijiezhao/CFENet">https://github.com/qijiezhao/CFENet</a></li>
</ul>
<p><strong>DeRPN: Taking a further step toward more general object detection</strong></p>
<ul>
<li>intro: AAAI 2019</li>
<li>arXiv: <a href="https://arxiv.org/abs/1811.06700">https://arxiv.org/abs/1811.06700</a></li>
<li>github: <a href="https://github.com/HCIILAB/DeRPN">https://github.com/HCIILAB/DeRPN</a></li>
</ul>
<p><strong>Hybrid Knowledge Routed Modules for Large-scale Object Detection</strong></p>
<ul>
<li>intro: Sun Yat-Sen University &amp; Huawei Noah’s Ark Lab</li>
<li>arXiv: <a href="https://arxiv.org/abs/1810.12681">https://arxiv.org/abs/1810.12681</a></li>
<li>github: <a href="https://github.com/chanyn/HKRM">https://github.com/chanyn/HKRM</a></li>
</ul>
<p><strong>《Receptive Field Block Net for Accurate and Fast Object Detection》</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1711.07767">https://arxiv.org/abs/1711.07767</a></li>
<li>github: <a href="https://github.com/ruinmessi/RFBNet">https://github.com/ruinmessi/RFBNet</a></li>
</ul>
<p><strong>Deep Feature Pyramid Reconfiguration for Object Detection</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1808.07993">https://arxiv.org/abs/1808.07993</a></li>
</ul>
<p><strong>Unsupervised Hard Example Mining from Videos for Improved Object Detection</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1808.04285">https://arxiv.org/abs/1808.04285</a></li>
</ul>
<p><strong>Acquisition of Localization Confidence for Accurate Object Detection</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1807.11590">https://arxiv.org/abs/1807.11590</a></li>
<li>github: <a href="https://github.com/vacancy/PreciseRoIPooling">https://github.com/vacancy/PreciseRoIPooling</a></li>
</ul>
<p><strong>Toward Scale-Invariance and Position-Sensitive Region Proposal Networks</strong></p>
<ul>
<li>intro: ECCV 2018</li>
<li>arXiv: <a href="https://arxiv.org/abs/1807.09528">https://arxiv.org/abs/1807.09528</a></li>
</ul>
<p><strong>MetaAnchor: Learning to Detect Objects with Customized Anchors</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1807.00980">https://arxiv.org/abs/1807.00980</a></li>
</ul>
<p><strong>Relation Network for Object Detection</strong></p>
<ul>
<li>intro: CVPR 2018</li>
<li>arxiv: <a href="https://arxiv.org/abs/1711.11575">https://arxiv.org/abs/1711.11575</a></li>
<li>github:<a href="https://github.com/msracver/Relation-Networks-for-Object-Detection">https://github.com/msracver/Relation-Networks-for-Object-Detection</a></li>
</ul>
<p><strong>Quantization Mimic: Towards Very Tiny CNN for Object Detection</strong></p>
<ul>
<li>Tsinghua University1 &amp; The Chinese University of Hong Kong2 &amp;SenseTime3</li>
<li>arxiv: <a href="https://arxiv.org/abs/1805.02152">https://arxiv.org/abs/1805.02152</a></li>
</ul>
<p><strong>Learning Rich Features for Image Manipulation Detection</strong></p>
<ul>
<li>intro: CVPR 2018 Camera Ready</li>
<li>arxiv: <a href="https://arxiv.org/abs/1805.04953">https://arxiv.org/abs/1805.04953</a></li>
</ul>
<p><strong>SNIPER: Efficient Multi-Scale Training</strong></p>
<ul>
<li>arxiv:<a href="https://arxiv.org/abs/1805.09300">https://arxiv.org/abs/1805.09300</a></li>
<li>github:<a href="https://github.com/mahyarnajibi/SNIPER">https://github.com/mahyarnajibi/SNIPER</a></li>
</ul>
<p><strong>Soft Sampling for Robust Object Detection</strong></p>
<ul>
<li>intro: the robustness of object detection under the presence of missing annotations</li>
<li>arxiv:<a href="https://arxiv.org/abs/1806.06986">https://arxiv.org/abs/1806.06986</a></li>
</ul>
<p><strong>Cost-effective Object Detection: Active Sample Mining with Switchable Selection Criteria</strong></p>
<ul>
<li>intro: TNNLS 2018</li>
<li>arxiv:<a href="https://arxiv.org/abs/1807.00147">https://arxiv.org/abs/1807.00147</a></li>
<li>code: <a href="http://kezewang.com/codes/ASM_ver1.zip">http://kezewang.com/codes/ASM_ver1.zip</a></li>
</ul>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><p><strong>R3-Net: A Deep Network for Multi-oriented Vehicle Detection in Aerial Images and Videos</strong></p>
<ul>
<li>arxiv: <a href="https://arxiv.org/abs/1808.05560">https://arxiv.org/abs/1808.05560</a></li>
<li>youtube: <a href="https://youtu.be/xCYD-tYudN0">https://youtu.be/xCYD-tYudN0</a></li>
</ul>
<h1 id="Detection-Toolbox"><a href="#Detection-Toolbox" class="headerlink" title="Detection Toolbox"></a>Detection Toolbox</h1><ul>
<li><a href="https://github.com/facebookresearch/Detectron">Detectron(FAIR)</a>: Detectron is Facebook AI Research’s software system that implements state-of-the-art object detection algorithms, including <a href="https://arxiv.org/abs/1703.06870">Mask R-CNN</a>. It is written in Python and powered by the <a href="https://github.com/caffe2/caffe2">Caffe2</a> deep learning framework.</li>
<li><a href="https://github.com/facebookresearch/detectron2">Detectron2</a>: Detectron2 is FAIR’s next-generation research platform for object detection and segmentation.</li>
<li><a href="https://github.com/facebookresearch/maskrcnn-benchmark">maskrcnn-benchmark(FAIR)</a>: Fast, modular reference implementation of Instance Segmentation and Object Detection algorithms in PyTorch.</li>
<li><a href="https://github.com/open-mmlab/mmdetection">mmdetection(SenseTime&amp;CUHK)</a>: mmdetection is an open source object detection toolbox based on PyTorch. It is a part of the open-mmlab project developed by <a href="http://mmlab.ie.cuhk.edu.hk/">Multimedia Laboratory, CUHK</a>.</li>
</ul>]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让大脑保持敏锐？</title>
    <url>/how-to-make-the-brain-sharp.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;答案是学习新技能和改变生活方式。研究人员对约650万65岁及以上的患有阿尔茨海默病的美国人进行研究发现，学习演奏乐器或从事园艺可能会有帮助。耶鲁大学医学院的神经学家卡罗琳·弗雷德里克斯说：“超过30%的痴呆风险是可以逆转的。” 患有高血压、抑郁症、糖尿病或有吸烟和久坐生活方式的人，大脑认知能力下降的风会险增大。研究表明，尽管存在这些不利的遗传因素或生活习惯，对大脑的刺激和挑战可以延缓认知能力下降并降低痴呆的风险。</p>
<p>&emsp;&emsp;阿尔茨海默病如何导致死亡？做填字游戏或玩国际象棋和桥牌等战略游戏无疑对大脑有好处。此外学习任何新的有趣的技能同样有益——无论是学习新语言、爱好还是运动。因此，选择一些吸引你的、能刺激大脑的活动，这些终身学习过程都能保持你的大脑突触的活跃。以下是她分享的一些入门想法：</p>
<ol>
<li><p>社交。人类是社交动物，我们需要社交互动以获得最佳健康状态。在新冠大流行期间，弗雷德里克斯说，一些无法适应虚拟会议的老年患者感到非常孤独。多项研究发现，孤立可能影响认知以及情绪。她建议人们参与能让他们与其他人互动的活动。如果这些活动能刺激你的大脑或让你的身体动起来，那就更好了。例如，与伴侣跳舞。阅读也很好，如果能成为一个读书俱乐部的一员，与其他会员交流并讨论书籍内容会更好。</p>
</li>
<li><p>出汗。这对心脏和大脑都有好处。阿尔茨海默病协会研究称，当人们有损害心脏和血管的活动习惯时，发展成阿尔茨海默病或血管性痴呆、心脏病、高血压、中风、糖尿病的风险都会增高。为了心脏和大脑健康，协会的指南建议人每周至少进行5次、每次30分钟的“中等强度”运动，或者每周3次、每次1小时的“高等强度”运动。“如果你和我正在徒步旅行，我们正爬山，我们喘不过气来，但还没有到不能互相交谈的程度，”她说，“这就是推荐的中等强度。”</p>
</li>
<li><p>戒烟。研究人员发现，那些每天吸一包烟超过10年的人在40多岁时就会出现认知障碍。另一方面，那些戒烟或被定义为轻度吸烟者的人并没有同样的认知能力下降。研究表明，烟民在戒烟后也会对身体造成伤害，但越早戒烟越好。</p>
</li>
<li><p>吃大脑“喜欢”的食物。关于饮食和认知功能的关系，最近发表在《营养学进展》上的一项研究认为三种饮食——地中海饮食、DASH（阻止高血压的饮食方法）和MIND（地中海-DASH神经退行性延迟干预）可能会降低你认知能力下降的风险。“如果你在意大利海岸度假时会吃什么，”弗雷德里克斯说。“鱼类、精益蛋白、豆类、其他蔬菜来源的蛋白，以及一系列水果和蔬菜——特别是深色、绿叶蔬菜，这些似乎对保持认知功能有特定的好处。”此外，选择橄榄油而不是黄油，并选择全谷物，她继续说：“这真的不是一种限制性饮食，而是一种似乎对大脑非常有益的饮食习惯。”</p>
</li>
<li><p>限制饮酒。为了降低痴呆风险，遵循CDC的指南，女性饮酒每天不应超过一杯，男性每天不超过两杯。当然，一周内戒酒并不意味着你可以在周末安全地多喝。已经有认知能力下降症状的人应该避免所有酒精摄入——因为任何剂量的酒精都会对认知能力有影响，对大脑是毒物。</p>
</li>
<li><p>应对压力。尽管无法避免所有压力，但你可以采取措施减少其伤害。RAND公司高级行为和社会科学家、睡眠基金会科学顾问温迪·特罗克斯建议每天做这些压力管理技巧：太极、瑜伽、冥想、正念练习、运动。</p>
</li>
<li><p>充足的睡眠。我们的大脑每晚至少需要七小时的休息睡眠来休息和充电。为睡眠做准备（比如：至少在睡前30分钟远离屏幕）还有额外的好处，可以保持我们的思维敏锐。如果你感到压力，特罗克斯说，“重要的是在晚上放松，并在睡前尽量降低压力水平。”为了促进心态平稳以及幸福感的获得以提高睡眠质量，她提出了这些建议：洗个热水澡、和伴侣拥抱、在日记中写下至少三件你感激的事情。</p>
</li>
<li><p>保护你的大脑。失去意识的脑损伤，可能会增加你认知能力下降和痴呆的风险。因此，坐车要系安全带，骑自行车或机动车辆、滑雪、滑冰、滑板或玩美式足球等接触性运动时要佩戴头盔。你还可以采取措施预防跌倒。</p>
</li>
<li><p>注意心理健康问题。一些研究将抑郁史与认知能力下降的风险联系起来，包括2013年发表在《心理医学》上的一篇文章。另一项最近发表在《神经精神药物治疗》上的研究，发现一种名为沃替西汀的抗抑郁药物有助于治疗认知功能和抑郁症。在我们国家遇到抑郁症还是去看医生吧，别乱吃药。</p>
</li>
<li><p>花时间与年轻人相处。另一种社交和学习新技能的方式是与不同代际的人互动。2019年发表在《衰老研究评论》上的一篇综述中，研究人员发现，与年轻人有交流的老年人比那些只与同龄人交往的人表现出更缓慢的认知能力下降趋势。研究人员发现这种交往会缓解焦虑，孤独和抑郁，这些都是促进大脑健康的因素。也就是说与孙子们共度时光对你有好处！</p>
</li>
</ol>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>大脑</tag>
      </tags>
  </entry>
  <entry>
    <title>写作能力提升技巧</title>
    <url>/how-to-write-blog.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;要想成为一个成功的博主，你必须要擅长写作。写好文章并不意味着你需要拥有文学博士学位，或者出版过一堆作品。当你读了很多他人文章并刻意练习，写了更多文章之后，你的写作能力自然能得到提升。有很多技巧也可以快速帮你提高写作能力，这些技巧适用于各种文本写作:</p>
<h3 id="在开始写作前做好计划"><a href="#在开始写作前做好计划" class="headerlink" title="在开始写作前做好计划"></a>在开始写作前做好计划</h3><p>&emsp;&emsp;提前计划对你的写作质量有很大的影响。它为你带来了更好的写作体验，也为你的读者带来了更好的阅读体验。</p>
<p>&emsp;&emsp;提前花五分钟进行计划意味着：</p>
<ol>
<li>你能提前发现很多大的问题（例如，你的主题是不是调子定得太高了）。</li>
<li>你能构想文章的结构，并进行必要的修改。</li>
<li>当你开始写的时候，你会有一个路线图来指导写作方向。创建思维导图就是一个不错的方式。</li>
</ol>
<h3 id="想象你是写给某一个特定的人"><a href="#想象你是写给某一个特定的人" class="headerlink" title="想象你是写给某一个特定的人"></a>想象你是写给某一个特定的人</h3><p>&emsp;&emsp;你是否因为不知道如何表达而苦恼？克服这一点的最简单方法是想象你只是在给一个特定的人写作。</p>
<p>&emsp;&emsp;你可以将他想象成那个给你点赞的人，那个留下评论的人。</p>
<h3 id="写短的句子和段落"><a href="#写短的句子和段落" class="headerlink" title="写短的句子和段落"></a>写短的句子和段落</h3><p>&emsp;&emsp;这通常是加强你写作的一个好方法。短小精悍的句子和段落，不仅能够吸引读者的注意力，也让你的生活变得更容易。通常，拥有两个短句子比一个单一的长而复杂的句子要简单得多。</p>
<h3 id="使用“你”和“你的”与读者对话"><a href="#使用“你”和“你的”与读者对话" class="headerlink" title="使用“你”和“你的”与读者对话"></a>使用“你”和“你的”与读者对话</h3><p>&emsp;&emsp;要直接与你的读者对话。这有助于使你的帖子、电子书或电子邮件感觉像是对话的一部分。</p>
<p>&emsp;&emsp;通常，最好写得就像你在与一个读者交谈（见技巧 #2）。所以，不要写“你们中的一些人可能知道……”，而是写“你可能知道……”</p>
<h3 id="删减10-的词汇"><a href="#删减10-的词汇" class="headerlink" title="删减10%的词汇"></a>删减10%的词汇</h3><p>&emsp;&emsp;大多数人写东西会冗长繁复。在编辑你的作品时，看看你能否删减掉10%的内容。400个字的摘要得变成360个，当然还是写到390个字为妙。</p>
<p>&emsp;&emsp;你可能会惊讶，在不改变原意的情况下很多文字都可以被删减。不必要的词会浪费读者的时间，也会分散他们的注意力。</p>
<h3 id="大声朗读你的文章，或者把它打印出来"><a href="#大声朗读你的文章，或者把它打印出来" class="headerlink" title="大声朗读你的文章，或者把它打印出来"></a>大声朗读你的文章，或者把它打印出来</h3><p>&emsp;&emsp;发现自己的别字和错误表达很难，因为你脑子知道你要写啥且你认为你写出来的就是你脑子里的东西。大声朗读可以强迫你慢下来，并能使这些错误显现出来。</p>
<p>&emsp;&emsp;你也可以把你的文章打印出来看。这有助于获得看自己文章的割离感，并让你更容易专注，从而找到问题。</p>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（一）</title>
    <url>/paper-reading-1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>数值模拟冰盖运动及其对全球海平面上升的预测需要了解不断演变的冰下环境信息，但遗憾的是，由于难以接近，这些信息在很大程度上仍然未知。本文通过多年的地震震颤数据来推进这类冰下观测，这些震颤很可能与Helheim冰川的冰川滑动有关。这种关联通过震颤功率与不同时间尺度上的多种环境驱动因素之间的相关性分析得到了证实。观测到的震颤功率的变化表明，不同的因素在不同的时间尺度上影响冰川滑动。有效压力可能在长期（季节性&#x2F;年度）时间尺度上控制冰川滑动，而潮汐力在短（小时&#x2F;日）时间尺度上调节滑动速率和震颤功率。极化结果表明，震颤源可能来自上游的冰下山脊。这一观测为如何在冰盖建模中包含不同因素以及它们变化的时间尺度如何发挥重要作用提供了见解。</p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>这篇文章研究了格陵兰冰盖的冰流变化，这对于理解全球海平面上升的预测至关重要。冰盖的动态变化对全球气候系统有着深远的影响，特别是对海洋的热盐循环和全球气候模式。</p>
<h3 id="总结的前人研究"><a href="#总结的前人研究" class="headerlink" title="总结的前人研究"></a>总结的前人研究</h3><ul>
<li>引用了Choi et al., 2021; Howat et al., 2007; Mankoff, Solgaard, et al., 2020; Van den Broeke et al., 2016等研究，这些研究涉及了格陵兰冰盖物质流失的量度和影响。</li>
<li>提到了Weertman (1957)关于冰川滑动的早期理论，以及Lliboutry (1968)和Schoof (2005)关于空化过程的研究。</li>
<li>引用了Alley et al., 2023; Clarke, 2005; Tsai et al., 2015, 2022; Zoet &amp; Iverson, 2020等研究，这些研究涉及了冰川滑动的软床变形和空间异质滑动场景。</li>
</ul>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><ul>
<li>由于难以接近，特别是快速流动的峡湾冰川，对冰下环境的了解仍然非常有限。</li>
<li>冰下环境的演变对冰盖模型的准确性至关重要，但目前对其了解不足。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>多年份的地震观测数据，这些数据可能与Helheim冰川的冰川滑动有关。</li>
<li>通过地震记录计算的功率谱密度（PSD）。</li>
<li>利用地面雷达干涉仪（TRI）和自动天气站（AWS）收集的数据。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>应用了频率依赖的极化分析（FDPA）来确定地震信号的来源方向。</li>
<li>利用了B样条插值方法来估算长期（季节性和年际）的冰面速度。</li>
<li>进行了交叉相关性分析，以研究地震功率与多种环境因素之间的关系。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>观察到的地震震颤功率与潮汐力在短时尺度（小时&#x2F;日）上有强相关性，而在长时尺度（季节性&#x2F;年）上则由有效压力控制。</li>
<li>通过极化分析指出，震颤源可能来自上游的冰下山脊。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>首次报道了与Helheim冰川冰下滑动可能相关的多年连续观测的震颤信号。</li>
<li>揭示了不同因素在不同时间尺度上对冰川滑动的影响，这对冰盖模型的构建具有重要意义。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>为理解冰盖物质流失的动态提供了新的见解，有助于改进全球海平面上升的预测模型。</li>
<li>通过被动地震学方法，以成本效益高的方式远程感知冰下过程。</li>
</ul>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><ul>
<li>文章没有详细讨论冰下环境变化的具体机制，以及这些变化如何影响长期冰流速度。</li>
<li>对于地震震颤源的确切位置和机制还需要进一步的研究和验证。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（二）</title>
    <url>/paper-reading-2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>南极冰架上的表面融化和湖泊是常见的现象，它们的存在和排水被认为是冰架崩塌的前兆。在这里，我们展示了2014年至2020年间，东南极Amery冰架接地区一个表冰湖反复快速排水的卫星观测结果。2018年排水后的图像显示了湖底特征，这些特征是快速垂直湖排水的特征。观测到的湖体积表明，排水与一个阈值的融水体积无关。相反，排水通常与日潮汐幅度高的时期一致，这表明水力断裂是由冰架接地区固有的潮汐力引起的冰的弯曲所协助的。结合在Amery冰架接地区广泛观测到的湖泊排水，这些发现表明，尽管这些地区普遍存在增强的融化，但接地区的排水事件可能抑制了冰架融水的积累，从而代表了一种潜在的稳定机制。</p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>这篇文章研究了南极冰盖表面湖泊的演变及其对冰盖稳定性的影响，这对于理解全球海平面上升的潜在贡献至关重要。特别是，研究集中在Amery冰架接地区的表面湖泊，这些湖泊的排水可能通过潮汐力引起的冰架弯曲来促进，这为冰盖稳定性提供了一个可能的稳定机制。</p>
<h3 id="总结的前人研究"><a href="#总结的前人研究" class="headerlink" title="总结的前人研究"></a>总结的前人研究</h3><ul>
<li>文章引用了关于南极冰盖质量损失加速的研究，如Smith等人(2020)、Bell等人(2018)和Turner等人(2005)。</li>
<li>引用了关于冰架表面湖泊和融水生产的研究，例如Arthur等人(2020)、Dell等人(2020)和Dirscherl等人(2020)。</li>
<li>提到了Larsen B冰架在2002年的崩塌，这是由表面融水增加和表面湖泊网络的快速排水触发的，可能通过融水驱动的水力断裂(Scambos等人，2000)。</li>
</ul>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><ul>
<li>尽管对湖泊排水过程的观测已有一些报道，但缺乏高空间和时间分辨率的冰架湖泊排水过程的报告。</li>
<li>大多数预测未来南极海平面贡献的冰盖模型仅初步参数化了湖泊和水力断裂的影响，尽管它们有可能引发大规模的冰盖不稳定性。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>利用了多种卫星平台的观测数据，包括Landsat 8和Sentinel-1合成孔径雷达(SAR)图像。</li>
<li>使用了区域气候模型RACMO2.3p2和ERA-5再分析数据来评估融水生产。</li>
<li>利用了CATS2008(Circum-Antarctic Tidal Simulation)模型来计算每日潮汐幅度。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>通过分析Landsat 8数据，使用归一化水体指数(NDWI)来分类包含湖水的像素。</li>
<li>采用了基于物理的方法来计算湖水体积，基于水中光的衰减率、湖底反照率和光学深水的反射率。</li>
<li>使用了数字高程模型(DEM)来提取湖岸线，并计算湖体积。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>观察到一个位于Amery冰架接地区的表面湖泊在2014年至2020年间多次迅速排水。</li>
<li>湖泊排水与高潮汐幅度周期相关，表明水力断裂可能由潮汐力引起的冰架弯曲协助。</li>
<li>湖泊排水事件通常不与融水体积的阈值相关，而是与日潮汐幅度高的时期一致。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>这项研究首次利用SAR影像捕捉了南极未覆盖表面湖泊的快速排水，强调了结合雷达和光学观测湖泊动态的效用。</li>
<li>提出了潮汐力引起的冰架弯曲可能是湖泊排水的触发因素，这为理解冰架稳定性提供了新的视角。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>增进了我们对南极冰盖表面湖泊动态及其对冰盖稳定性影响的理解。</li>
<li>为预测未来南极冰质量损失和海平面贡献提供了重要的观测数据和理论基础。</li>
</ul>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><ul>
<li>文章并未详细讨论其他可能影响湖泊排水的因素，例如冰下条件和冰架底部的水力条件。</li>
<li>对于湖泊排水对冰盖底部压力和冰-海洋相互作用的长期影响，还需要进一步的研究。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（三）</title>
    <url>/paper-reading-3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>北极浅层滑坡的增加是气候变暖的一个潜在后果。更温暖的夏季气温和更大的降雨事件将热量输送到活动层，融化冰层并降低土壤的剪切应力。地形通过控制地下冰的分布和地表下水的运动，有可能加剧滑坡。我们展示了北极浅层滑坡是在零级排水盆地中启动的，这与非冻土环境中浅层滑坡的模型一致。然而，北极山坡的平均坡度低和凹度低，无法产生足够的孔隙水压力来引发滑坡。相反，二维坡面稳定性模型表明，地下冰的垂直分布控制了滑坡的易发性。靠近潜在破坏面的高地下冰浓度比高平均冰体积或快速融化有更强的控制作用。我们的结果表明，滑坡易发性强烈受到地形对地下冰和水文的控制影响。</p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>这篇文章研究了北极地区由于气候变暖导致的冰土融化和浅层滑坡的潜在后果。随着极端天气事件的增加，北极的永久冻土正在迅速融化，这可能导致土壤稳定性下降，引发滑坡等地质灾害。这些滑坡不仅对基础设施和公共安全构成威胁，还可能加剧温室气体排放，因为冻土中储存的碳被释放到大气中。</p>
<h3 id="总结的前人研究"><a href="#总结的前人研究" class="headerlink" title="总结的前人研究"></a>总结的前人研究</h3><ul>
<li>文章引用了Dobricic等人(2020)、Lewkowicz和Way(2019)等研究，这些研究讨论了北极极端天气事件的增加以及冻土的迅速融化。</li>
<li>引用了Balser等人(2014)、Harris等人(2011)等研究，这些研究探讨了冰土融化如何导致土壤不稳定和滑坡。</li>
<li>引用了Lamoureux和Lafrenière(2009)的研究，该研究讨论了冻土退化过程中碳的释放。</li>
</ul>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><ul>
<li>尽管已有研究探讨了冻土退化和滑坡的关系，但对控制斜坡不稳定性的过程的理解仍然有限。</li>
<li>现有模型和方法可能未能充分考虑地形、水文和冻土中冰的分布对滑坡触发的影响。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>使用了Maxar Technologies 2008年的图像数据，通过Google Earth获取，空间分辨率为50cm。</li>
<li>利用了5米间隔的合成孔径雷达(InSAR)衍生的数字高程模型(DEM)。</li>
<li>使用了SHALSTAB模型来评估滑坡易发性。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>开发了基于地形的滑坡分析模型，比较了滑坡分布与地形衍生的水系网络。</li>
<li>使用了2D极限平衡方法(Morgenstern-Price方法)进行坡面稳定性模拟。</li>
<li>通过GeoStudio软件进行地质技术模拟，以测试不同地下冰分布对滑坡触发的影响。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>发现北极浅层滑坡主要在零级排水盆地的汇聚地形中启动。</li>
<li>坡面稳定性模型表明，地下冰的垂直分布对滑坡敏感性有重要影响，尤其是在潜在的滑坡破坏面附近的高地下冰浓度。</li>
<li>研究结果表明，滑坡敏感性受到地形对地下冰和水文控制的强烈影响。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>提供了一种新的视角，将地形、地下冰分布和水文因素结合起来，以评估北极地区滑坡的易发性。</li>
<li>通过2D坡面稳定性模型，展示了地下冰分布对滑坡触发的控制作用，这在以往的研究中并不常见。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>增进了对北极地区气候变化、冻土退化和滑坡活动之间关系的理解。</li>
<li>为评估气候变化对北极地区基础设施和公共安全的影响提供了科学依据。</li>
</ul>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><ul>
<li>模型可能未能完全考虑所有影响滑坡的因素，例如季节性气候变化和随机天气事件的影响。</li>
<li>需要更多的实地数据和长期监测来验证模型的预测和评估滑坡易发性的准确性。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读</title>
    <url>/paper-reading.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;少数文章需要精读，例如研究方向的经典文章，相关方向的好文章。仔细阅读，你可以学习到他们的写作模式，逻辑结构，文字表达，模仿他们的工作和写作，你也可以干科研。</p>
<p>&emsp;&emsp;也有很多文章不太需要精读，毕竟你的”时间“那么有限。这个时候可以用到很多AI工具帮你快速的阅读文献，获得该文献的大致内容。然后你再判断这篇文章有没有必要精读。</p>
<p>&emsp;&emsp;以后会在博客记录下看到的一些文章的内容，当然都是通过AI帮我读的。我用的是<a href="https://kimi.moonshot.cn/">kimi</a>还挺好用。先上传文章，然后给提示词：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请先翻译摘要。相关研究的重要性有哪些？请具体列举并阐述前人具体有哪些相关研究，这些研究有哪些不足？本文使用了什么数据，采用了什么方法，获得了什么结果？本文创新之处是什么，有什么贡献，有什么不足？请用markdown的格式一条一条详细回答以上问题。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（四）</title>
    <url>/paper-reading-4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>全球气候模型通过累加影响厚度的热力学过程（通过相变影响厚度）和动力学过程（通过相对运动影响厚度）来计算海冰厚度。将这些单独的过程与观测结果进行比较对于模型的解释和发展至关重要。我们利用基底热力学生长、整体厚度变化及其残差差异（包括动力学）的观测估计来评估这些过程，在国家大气研究中心（NCAR）社区地球系统模型2（CESM2）提交给世界气候研究计划（WCRP）海洋模型比较项目第二阶段（OMIP2）和泛北极冰-洋建模与同化系统（PIOMAS）中的表现。两种模型都表现出与2010年至2018年观测估计相比，在中央北极有更高的基底热力学生长和更低的残差效应以及冬季厚度，而在边缘海域则相反。纠正残差效应的偏差将改善平均厚度和基底热力学生长的偏差。</p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>这篇文章研究了全球气候模型中海冰厚度的模拟，这对于理解北极海冰对气候变化的响应至关重要。海冰厚度的准确模拟有助于预测未来北极海冰条件，进而对全球气候和海平面变化进行更准确的预测。</p>
<h3 id="总结的前人研究"><a href="#总结的前人研究" class="headerlink" title="总结的前人研究"></a>总结的前人研究</h3><ul>
<li>文章中提到了之前对海冰模型输出与观测数据进行比较的研究，例如Boe et al. (2009), Massonnet et al. (2012), Notz et al. (2020), Shu et al. (2015, 2020), Stroeve et al. (2007)。</li>
<li>引用了关于海冰厚度和自由板高度之间关系的Alexanderrov et al. (2010)。</li>
<li>讨论了Hibler (1980), Thorndike et al. (1975), Zhang &amp; Rothrock (2001)等人关于海冰动力学和热力学过程的早期研究。</li>
</ul>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><ul>
<li>之前的研究缺乏对模型中热力学和动力学海冰厚度效应独立与观测数据的比较。</li>
<li>文章指出，现有模型在模拟海冰厚度方面存在偏差，特别是在中央北极和周边海域的基底热力学生长和剩余效应方面。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>使用了AWI CS2SMOS海冰厚度观测数据集，该数据集结合了CryoSat-2和SMOS卫星的数据。</li>
<li>使用了SLICE（Stefan’s Law Integrated Conducted Energy）方法来检索基底热力学生长并计算剩余过程效应。</li>
<li>比较了NCAR社区地球系统模型2（CESM2）提交给OMIP2和PIOMAS的数据。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>文章采用了一种基于过程的评估方法，通过比较观测估计和模型预测来评估海冰模型中的热力学和动力学过程。</li>
<li>使用了差分插值将PIOMAS和CESM2-OMIP2数据集转换为25公里分辨率的EASE-Grid 2.0。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>发现CESM2-OMIP2和PIOMAS在中央北极的基底热力学生长和剩余效应方面与观测估计相比存在相似的模式偏差。</li>
<li>通过调整动态效应使其更接近观测估计，可以纠正平均厚度和基底热力学生长的偏差。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>本研究是首次尝试将观测到的热力学海冰厚度生长和动态海冰厚度效应与全球气候模型和海冰模型再分析进行比较。</li>
<li>引入SLICE方法，这是一种新的基于卫星数据的海冰厚度变化观测估计方法。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>为改进海冰模型提供了观测数据支持，有助于提高模型预测的准确性。</li>
<li>通过比较观测数据和模型输出，为理解影响海冰厚度的过程提供了新的见解。</li>
</ul>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><ul>
<li>文章指出，需要进一步调整模型中的动态组分参数化，以更准确地反映观测估计。</li>
<li>对于模型中的热力学过程的表示可能需要进一步的改进，以更好地匹配观测数据。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（五）</title>
    <url>/paper-reading-5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在金星相对温和的云层中飘浮的高空气球上的气压计能够探测和表征由地震活动产生的声波，避免了进行地表地震学所需的高温电子设备的需求。Garcia等人（2022年，<a href="https://doi.org/10.1029/2022GL098844%EF%BC%89%E6%9C%80%E8%BF%91%E5%B1%95%E7%A4%BA%E4%BA%86%E4%BB%8E%E8%B7%9D%E9%9C%87%E4%B8%AD%E8%BF%913000%E5%85%AC%E9%87%8C%E7%9A%84%E5%B9%B3%E6%B5%81%E5%B1%82%E6%B0%94%E7%90%83%E6%8E%A2%E6%B5%8B%E5%88%B0%E7%94%B17.3%E7%BA%A7%E5%92%8C7.5%E7%BA%A7%E5%9C%B0%E9%9C%87%E5%BC%95%E8%B5%B7%E7%9A%84%E4%BD%8E%E9%A2%91%E5%A3%B0%E9%9F%B3%EF%BC%88%E6%AC%A1%E5%A3%B0%E6%B3%A2%EF%BC%89%E3%80%82%E4%BB%96%E4%BB%AC%E4%BB%85%E4%BD%BF%E7%94%A8%E5%85%B6%E5%A3%B0%E5%AD%A6%E7%89%B9%E5%BE%81%EF%BC%8C%E5%88%9D%E6%AD%A5%E5%B1%95%E7%A4%BA%E4%BA%86%E5%9C%B0%E9%9C%87%E5%A4%A7%E5%B0%8F%E5%92%8C%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%8F%8D%E6%BC%94%EF%BC%8C%E4%BB%A5%E5%8F%8AS%E6%B3%A2%E5%92%8C%E7%91%9E%E5%88%A9%E6%B3%A2%E9%80%9F%E5%BA%A6%E7%9A%84%E7%A1%AE%E5%AE%9A%E3%80%82%E5%A4%A7%E5%9E%8B%E5%9C%B0%E9%9C%87%E4%BA%A7%E7%94%9F%E7%9A%84%E4%BD%8E%E9%A2%91%E5%9C%B0%E9%9C%87%E6%B3%A2%E8%83%BD%E5%A4%9F%E7%A9%BF%E9%80%8F%E8%A1%8C%E6%98%9F%E7%9A%84%E5%86%85%E9%83%A8%EF%BC%9B%E4%BB%8E%E9%AB%98%E7%A9%BA%E4%BC%98%E5%8A%BF%E7%82%B9%E6%8E%A2%E6%B5%8B%E5%88%B0%E7%9A%84%E5%A4%A7%E9%99%86%E5%B0%BA%E5%BA%A6%E8%B7%9D%E7%A6%BB%E8%AF%81%E6%98%8E%E4%BA%86%E5%9F%BA%E4%BA%8E%E6%B0%94%E7%90%83%E7%9A%84%E9%87%91%E6%98%9F%E5%86%85%E9%83%A8%E7%A0%94%E7%A9%B6%E7%9A%84%E5%8F%AF%E8%A1%8C%E6%80%A7%E3%80%82%E6%88%91%E4%BB%AC%E5%B0%86%E8%BF%99%E4%BA%9B%E7%BB%93%E6%9E%9C%E7%BD%AE%E4%BA%8E%E4%BB%8E%E6%B0%94%E7%90%83%E4%B8%8A%E5%AF%B9%E9%87%91%E6%98%9F%E8%BF%9B%E8%A1%8C%E5%9C%B0%E9%9C%87%E5%AD%A6%E7%A0%94%E7%A9%B6%E7%9A%84%E5%8A%AA%E5%8A%9B%E4%B8%AD%EF%BC%8C%E8%AE%A8%E8%AE%BA%E5%85%B6%E5%B1%80%E9%99%90%E6%80%A7%EF%BC%8C%E5%B9%B6%E5%88%86%E4%BA%AB%E8%BF%99%E4%B8%80%E9%A2%86%E5%9F%9F%E6%9C%AA%E8%A7%A3%E5%86%B3%E7%A0%94%E7%A9%B6%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%82%E7%82%B9%E3%80%82">https://doi.org/10.1029/2022GL098844）最近展示了从距震中近3000公里的平流层气球探测到由7.3级和7.5级地震引起的低频声音（次声波）。他们仅使用其声学特征，初步展示了地震大小和位置的反演，以及S波和瑞利波速度的确定。大型地震产生的低频地震波能够穿透行星的内部；从高空优势点探测到的大陆尺度距离证明了基于气球的金星内部研究的可行性。我们将这些结果置于从气球上对金星进行地震学研究的努力中，讨论其局限性，并分享这一领域未解决研究问题的观点。</a></p>
<h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>这篇文章探讨了金星内部结构研究的重要性，强调了通过研究行星内部结构来了解太阳系形成的过程。由于金星表面极端的高温和高压，传统的地震测量方法难以实施，因此探索新的地震监测手段对于理解金星的地质活动和内部结构至关重要。</p>
<h3 id="总结的前人研究"><a href="#总结的前人研究" class="headerlink" title="总结的前人研究"></a>总结的前人研究</h3><ul>
<li>文章提到了利用地震波研究地球、月球和火星内部结构的成功案例。</li>
<li>引用了Lognonné和Johnson (2007) 对金星地震活动的估计。</li>
<li>提到了Garcia等人 (2022) 在地球上通过平流层气球检测到远距离地震产生的次声波的研究。</li>
</ul>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><ul>
<li>金星表面的极端条件使得长期地震记录难以实现，限制了对金星内部结构的了解。</li>
<li>目前对金星地震活动的了解非常有限，缺乏直接的地震观测数据。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>文章中使用了Garcia等人 (2022) 通过平流层气球收集的次声波数据，这些数据来自地球上的地震事件。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>提出了在金星的相对温和的云层中使用高空气球进行地震监测的新方法。</li>
<li>使用了数值模拟和数据分析技术来检测和表征由地震活动产生的次声波。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>证明了通过气球平台在地球上检测到远距离地震产生的次声波是可行的，这为在金星上实施类似监测提供了概念验证。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>提出了一种新颖的金星地震监测方法，即使用高空气球来检测次声波，从而避免了在金星表面部署高温电子设备的需求。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>为金星内部结构的研究提供了新的视角和可能的解决方案。</li>
<li>对于未来金星探测任务的规划和设计具有指导意义。</li>
</ul>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><ul>
<li>文章中提出的监测方法需要在金星上实际部署气球网络进行验证。</li>
<li>对于如何在金星多变的大气环境中稳定运行气球网络，以及如何处理和解释收集到的数据，仍存在技术和科学上的挑战。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>如何审稿</title>
    <url>/how-to-review.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="审阅学术论文"><a href="#审阅学术论文" class="headerlink" title="审阅学术论文"></a>审阅学术论文</h3><p>如果你在学术圈混，你就得审论文。你的第一次审稿几乎可以肯定是你老板要你审的。随着你的职业生涯的发展，你会成为一个（或多个）领域的专家，你会审更多的论文。审论文是你应该严肃对待的，是你的职责。</p>
<p>没有人给我写过正式的审稿指南，这可能对你来说可能也差不多。</p>
<p>这篇文档目标是让你避免成为那个令人讨厌的审稿人，同时帮助你提高你的效率，免得你审稿时无从下手。</p>
<h3 id="同行评审中的关键角色"><a href="#同行评审中的关键角色" class="headerlink" title="同行评审中的关键角色"></a>同行评审中的关键角色</h3><p>在同行评审过程中有几个重要角色。</p>
<p>首先是期刊的编辑，他会在最开始对论文进行一些审查——主要是筛选出提交的非常疯狂的东西（你会惊讶于看到了什么鬼东西）。通常，编辑是一位对学科领域有广泛了解的高级科学家，他们有很好的直觉，知道什么研究可能引起期刊读者群兴趣以及什么研究才是真正的科学。通常他们不感兴趣的论文或明显错误的论文会直接pass掉。</p>
<p>编辑通常会将论文分配给一个对该论文相关主题有更多专业知识的副编辑。副编辑通常是中级教职员工（高级助理教授或副教授）。同样，明显有缺陷或提出荒谬观点的论文通常无法逃过副编辑的法眼。</p>
<p>如果你的论文通过了这层关卡，并不意味着它是对的或是合理的。这只意味着编辑在快速过一遍时，论文看起来有趣且不离谱。然后副编辑会努力找到在论文相关特定领域工作且与论文作者没有强烈的冲突或有过合作过的审稿人。在某些领域，很难找到既没有冲突又有时间的审稿人。所以有时他们可能找到专业知识接近但与论文主题不完全一致的人。</p>
<h3 id="你在同行评审中的工作是什么？"><a href="#你在同行评审中的工作是什么？" class="headerlink" title="你在同行评审中的工作是什么？"></a>你在同行评审中的工作是什么？</h3><p>科学论文可以提炼为四个部分：</p>
<ol>
<li>一套方法</li>
<li>数据描述</li>
<li>一系列结果</li>
<li>一系列观点</li>
</ol>
<p>当你写一篇论文时，目标是要清晰地传达以上的1-3项内容。在当前的同行评审系统中，作为同行评审者，你有三件事情要负责：</p>
<ol>
<li>评估方法、数据和结果的质量和准确性。</li>
<li>确定方法、数据和结果是否支撑结论。</li>
<li>确定结论的重要性以及它们是否适合期刊。</li>
</ol>
<p>理想情况下，你能够验证论文中的每一个主张并测试每一个结果。考虑到审阅过程的时间限制，这几乎是不可能的。相反，你的目标是尽你所能获得对三个部分的合理估计。</p>
<p>你关于1-3的初步认识得从假设开始，即你得认为作者是个正直（正常人）的人。他会努力做到正确、全面、透明，并且不会夸大其词。如果是个你从未听说过的期刊；或者如果你被要求审阅远远超出你专业知识范围的论文；又或者论文观点非常极端以至于它们可能会颠覆整个学科领域，那你就得调整你的先入为主的认识了。</p>
<h3 id="审稿的结构"><a href="#审稿的结构" class="headerlink" title="审稿的结构"></a>审稿的结构</h3><p>你的审稿需包含三个部分。对作者的评论、对编辑的意见以及建议。</p>
<p><strong>对作者的评论</strong></p>
<p>审稿意见第一部分包括对作者的评论，它包括以下部分：</p>
<ol>
<li>用你自己的一段话总结论文（动机、方法、结果）。</li>
<li>主要问题列表</li>
<li>次要问题列表</li>
<li>一些别字列表</li>
</ol>
<p>总结至关重要，因为如果你不能将观点提炼出来，那么你就真的没有读懂该论文。总结绝对不应该是论文摘要的重述，你应该将你认为最相关的内容写总结中。</p>
<p>主要问题应该整一个列表。根据论文的质量，这个列表可长可短。主要问题必须是以下情形之一：（1）数据不支持的结论，（2）看起来完全错误的方法或结果，（3）关键信息缺失，或者（4）论文可读性很差。你需要指出每一个问题对应的图表、段落或结果，并具体说明问题，批评需要有建设性要具体。如果可能，可以用文献来支持你的观点。</p>
<p>没有提供所有数据和代码以及具体链接和说明，也是一个主要问题。</p>
<p>次要问题也要给出一个列表。次要问题范围可能更广，例如模拟遗漏了一些案例，图表缺少轴标签，或者论文有一些与结论无关的多余结果。</p>
<p>文字错误不是次要问题或主要问题，你没有义务去一一找出它们。如果你发现了文字错误，就以列表的形式提供给作者，格式为：“在第x页，第z行，将…改为…”。</p>
<p>论文如果有很多文字错误，那么可以作为一个次要问题提出。如果论文完全无法阅读，那就是一个主要问题。完全无法阅读的意思是即使你忽略了所有的打字错误，你也无法理解论文。</p>
<p>以下是你的评论中不应该包含的内容：</p>
<ul>
<li>推荐接受或拒绝论文</li>
<li>要求引用你的很多论文</li>
<li>要求进行不必要的实验&#x2F;模拟以证明论文的主要观点</li>
<li>侮辱性的批评或讽刺</li>
</ul>
<p>记住这是一个专业文件。它通常是匿名的（你不需要签名），但副编辑和编辑会看到你的审稿意见，你的声誉会受到你评审意见质量的影响。</p>
<p><strong>对编辑的评论</strong></p>
<p>如果你认为你在对作者的评论中已经涵盖了一切，你可以留白。如果你确实想写点啥，尽量不超过一段文字。不要写你没有在对作者的评论中提出的任何方法&#x2F;结果的批评。你可以写你认为论文有多有趣以及它对期刊读者群有多合适。总之，该内容应该与对作者的评论一致。</p>
<p><strong>建议</strong></p>
<p>你通常有以下四种决定选项：</p>
<ol>
<li>拒绝</li>
<li>大修</li>
<li>小修</li>
<li>接收</li>
</ol>
<p>如果你认为方法、结果或观点明显是错误的，请拒绝。如果你认为论文有重大缺陷无法纠正，请拒绝。如果论文显然不是对当前技术状态的改进，请拒绝。如果你没有该领域足够多经验，你最好咨询你的导师。</p>
<p>如果你认为论文有严重问题但可以纠正，那就给大修意见。如果你要求进行大修，你就默认如果他们能够&#x2F;确实纠正了你指出的所有主要问题，就接收。有时，在进行更正的过程中，你发现他们的方法&#x2F;结果&#x2F;结论是错的，那就拒绝。</p>
<p>如果你认为论文很无趣，不要给反修意见；否则作者针对你的意见进行了仔细的修改，最后你还是拒掉。这样干就是jerk reviwer，混蛋审稿人。</p>
<p>如果论文只有次要问题，你相信作者可以纠正，改正后你就准备接受，那么你就给个小修。</p>
<p>直接接收论文是很少见的。有时候你会收到一篇只有次要问题的论文，这些问题只是你认为的小问题，而不是需要修正以证明观点或方法&#x2F;结果&#x2F;数据清晰的问题。在这种情况下，列出次要问题并建议接收是完全可以的。</p>
<h3 id="审稿的长度"><a href="#审稿的长度" class="headerlink" title="审稿的长度"></a>审稿的长度</h3><p>最好的审稿是要点突出、简洁、只指出关键问题。你绝对没有责任重写论文，改变论文的框架，或者让作者做一些原始工作范围之外的事情。如果你认为论文在当前形式下不适合该期刊，你应该解释&#x2F;证明为什么，并选择拒绝。</p>
<p>你完全没有必要通过写很长的意见来表明你仔细阅读了该论文，以凸显你是多么的专业。不要这样干，你不会因为挑剔、啰嗦或冗长而得到什么收益。</p>
<p>反而你会因为以下事情而得到很大的好处：</p>
<ul>
<li>简洁 - 没有多余的东西</li>
<li>精确 - 指出稿件的具体问题</li>
<li>建设性 - 说明作者如何解决你发现的问题</li>
<li>礼貌 - 这有助于关注真正的问题，而不是小问题</li>
</ul>
<p>好的审稿意见通常以要点格式控制在1-2页的长度。</p>
<h3 id="重新审阅"><a href="#重新审阅" class="headerlink" title="重新审阅"></a>重新审阅</h3><p>除非论文被直接拒绝或接收，否则作者将有机会对你的评审做出回应。如果你遵循了上述建议，重新审阅过程会很简单：</p>
<ul>
<li>如果你选的是小修，作者解决了你的次要问题 - 接收。</li>
<li>如果你选的是大修，作者解决了你指出的所有主要&#x2F;次要问题 - 接收。</li>
<li>如果你选的是大修，作者没有按照你的要求做 - 以未解决的问题为由给个大修。</li>
<li>如果你选的是大修，作者的修订显示他们的方法不正确&#x2F;无趣 - 拒绝。</li>
</ul>
<h3 id="审阅应该花多长时间？"><a href="#审阅应该花多长时间？" class="headerlink" title="审阅应该花多长时间？"></a>审阅应该花多长时间？</h3><p>如果你接受审稿，你应该在一个月内完成它。一般两周你就能搞定。如果预计无法在截止日期前完成，那就礼貌地拒绝，并推荐一些评审人。</p>
<p>有时因为情况特殊，你在截止日期前可能无法完成审稿，那就申请延期。审稿是学术专业生活中的一个重要组成部分，但它不是你自己工作的优先事项，不要”太当回事”。</p>
<p>不过，请记住，有人为了这篇论文付出了巨大的努力，他的饭碗就靠着这篇论文。如果你认为论文应该被拒绝那赶紧，如果你认为论文该被接收，那赶紧。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（六）</title>
    <url>/paper-reading-6.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>通过恢复相位和群速度以及表面波的频率内容，对土星的卫星土卫二进行地震调查可以确定冰壳的厚度以及与平均厚度的偏差。在这里，我们模拟了土卫二冰壳的均匀厚度分别为5公里、20公里和40公里，以及冰面地形变化在5-40公里范围内的情况。我们研究了几种恢复平均冰壳厚度的方法。我们展示了表面波色散可以用来确定平均冰壳厚度。只有在冰壳比临界值薄（小于20公里）时，才会出现冰中的挠曲波。只有在更厚的冰壳中，瑞利波才会占主导地位。Crary波的频率内容取决于冰壳的厚度。</p>
<h3 id="文章重要性"><a href="#文章重要性" class="headerlink" title="文章重要性"></a>文章重要性</h3><p>这篇文章的重要性在于它提供了一种新的方法来估计土卫二冰壳的厚度，这对于了解其潜在的地下海洋环境和评估其宜居性至关重要。</p>
<h3 id="总结前人研究"><a href="#总结前人研究" class="headerlink" title="总结前人研究"></a>总结前人研究</h3><p>文章提到了之前的研究，例如：</p>
<ul>
<li>Lee et al., 2003; Stähler et al., 2017; Maguire et al., 2021 等，这些研究集中于使用简单的一维模型。</li>
</ul>
<h3 id="存在的不足"><a href="#存在的不足" class="headerlink" title="存在的不足"></a>存在的不足</h3><p>文章并没有明确指出前人研究的不足，但指出了本研究的潜在局限性，例如：</p>
<ul>
<li>没有模拟背景噪声。</li>
<li>假设冰壳没有孔隙性，这限制了散射效应的考量。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>使用Cassini任务提供的数据来建立土卫二冰壳厚度的空间变化性。</li>
<li>使用PlanetProfile软件生成土卫二内部结构模型。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>构建了一维模型，模拟了不同均匀厚度的冰壳。</li>
<li>使用Salvus软件创建合成波形。</li>
<li>进行了时间序列分析和表面波色散分析。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>表面波色散可以用来确定土卫二冰壳的平均厚度。</li>
<li>挠曲波和瑞利波的存在与否可以指示冰壳的相对厚度。</li>
<li>Crary波的频率内容和群速度可以用来限制冰壳的厚度。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>采用三维模型和地震模拟来估计土卫二冰壳的厚度，这在以往的研究中较少见。</li>
<li>考虑了冰壳厚度的变化性和冰壳地形的影响。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>为土卫二等冰冷海洋世界的地质结构研究提供了新的视角和方法。</li>
<li>为未来的土卫二着陆任务和地震探测提供了理论基础。</li>
</ul>
<h3 id="存在的不足-1"><a href="#存在的不足-1" class="headerlink" title="存在的不足"></a>存在的不足</h3><ul>
<li>研究没有考虑背景噪声和其他可能影响地震信号的复杂因素。</li>
<li>对于地震事件的定位和定时存在一定的假设，可能影响实际应用中的准确性。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（七）</title>
    <url>/paper-reading-7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;了解冰川结构的异质性对于评估其命运至关重要。然而，结构变化强烈的地方，如裂缝场，通常无法直接进行仪器观测。为了克服这一限制，我们引入了一种创新技术，利用源-接收器空间互易原理，将由裂缝产生的地震源转化为虚拟接收器。我们展示了利用Seismic Michelson Interferometry（地震干涉测量学）技术，通过局部化良好的地震源之间的相位干涉模式来获取相位速度图。得到的相位速度对冰川结构的变化表现出敏感性，提供了对机械属性变化起源的洞见，并且空间分辨率比传统方法提高了五倍。特别是，我们观察到与严重受损的地下区域相关的相位速度的急剧变化，表明了一个复杂的三维介质。更系统地应用这种方法并在其他情境中使用将提高我们对冰川和其他地震发生环境结构的理解。</p>
<h3 id="文章重要性"><a href="#文章重要性" class="headerlink" title="文章重要性"></a>文章重要性</h3><p>这篇文章的重要性在于提出了一种新的技术手段，可以在人迹罕至的地区，如冰川裂缝区域，通过地震干涉测量学来获取高分辨率的冰川结构图。</p>
<h3 id="总结前人研究"><a href="#总结前人研究" class="headerlink" title="总结前人研究"></a>总结前人研究</h3><p>文章总结了以下前人研究：</p>
<ul>
<li>被动地震方法在监测冰量变化、冰床界面变化和冰厚空间变化方面的应用。</li>
<li>利用已知位置的脉冲源，通过Rayleigh表面波旅行时间延迟层析成像来揭示裂缝发生与地震相速度之间的非唯一关系。</li>
</ul>
<h3 id="存在的不足"><a href="#存在的不足" class="headerlink" title="存在的不足"></a>存在的不足</h3><p>文章指出的不足包括：</p>
<ul>
<li>使用噪声源进行地震成像时，确保方位等分性（azimuthal equipartitioning）的挑战。</li>
<li>在采样波场方面的限制，尤其是在仪器部署区域之外。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>法国阿尔卑斯山Argentière冰川消融区的地震事件目录，由98个三分量地震仪组成的阵列收集。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li>利用源-接收器空间互易原理将地震源转化为虚拟接收器。</li>
<li>使用波形同步化和表面波衍射核（Diffraction Kernels, DKs）构建。</li>
<li>采用地震干涉测量学（Seismic Michelson Interferometry, SMI）进行迭代反演。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>获得了在空间分辨率上比传统方法高五倍的相位速度图。</li>
<li>观察到与冰川厚度和裂缝存在相关的相位速度变化。</li>
</ul>
<h3 id="创新之处"><a href="#创新之处" class="headerlink" title="创新之处"></a>创新之处</h3><ul>
<li>利用地震源作为虚拟接收器，通过干涉模式来获取高分辨率的相位速度图。</li>
<li>这种方法允许在没有直接测量设备的地区进行地震成像。</li>
</ul>
<h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><ul>
<li>提供了一种新的技术手段，可以在传统方法难以到达的地区进行高分辨率的地震成像。</li>
<li>为理解冰川结构和动态提供了新的视角。</li>
</ul>
<h3 id="存在的不足-1"><a href="#存在的不足-1" class="headerlink" title="存在的不足"></a>存在的不足</h3><p>文章中并未明确指出研究的不足之处，但可以推测可能的不足包括：</p>
<ul>
<li>技术的应用范围可能受限于地震源的分布和定位精度。</li>
<li>对于非脉冲源或非冰川环境的适用性尚未得到验证。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在HEXO中加入网络视频（以bilibili视频为例）</title>
    <url>/add-video.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>只需要在日志里面加入这句话就可以了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt; &lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;aid=1754790640&amp;bvid=BV1Kt421u7oB&amp;cid=1553481822&amp;p=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>其中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;aid=1754790640&amp;bvid=BV1Kt421u7oB&amp;cid=1553481822&amp;p=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<p>是从bilibili中点击复制链接-&gt;嵌入代码获得。</p>
<p>这个视频是播主“愤怒的唐小虎”的关于大脑可塑性研究的讲述。侵删。大脑的可塑性是很强的，就像练肌肉一样。所以不要借口说我老了，学不来。只要你想，你去做，你都可以。</p>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"> <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=1754790640&bvid=BV1Kt421u7oB&cid=1553481822&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe> </div>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十）</title>
    <url>/paper-reading-10.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;本文研究了当表面压力较大时，低于 0.05 Hz 的大气生成地震噪声的特征。在本文中，大气压力大意味着在 0.01 Hz 时压力功率谱密度超过 100 Pa²&#x2F;Hz。本文讨论了三个要点：</p>
<ol>
<li><p>存在两个频率范围，它们在共址的压力和垂直地震数据之间显示出高一致性。低频(LF)范围较宽，其上限约为 0.002 Hz。高频(HF)范围限制在大约 0.01 到 0.05 Hz 之间。压力和垂直位移之间的相位差在两个范围内是不同的。LF 范围显示出零的相位差，而 HF 范围显示出 180° 的相位差。</p>
</li>
<li><p>第二点是关于 HF 范围内的激励机制。利用理论和数据，我们展示了 HF 范围内的地震噪声主要是由风相关的压力激发的。当压力高时，风速变高，风向变得单一。在这种情况下，Sorrells (1971) 提出的确定性、移动的压力源模型比随机源模型更好地捕捉了数据的特征。</p>
</li>
<li><p>第三点是关于 LF 范围和 HF 范围之间相位差异的原因。即使在去除了仪器响应之后，垂直地震数据中也包含了重力和地球自转的影响。对于低于 0.005 Hz 的频率，重力效应变得显著，并在去卷积垂直位移和真实垂直地面位移之间造成了差异。相位差异的结果自然由它解释。</p>
</li>
</ol>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ul>
<li>地震噪声的低频特性对于理解地球内部结构和动力学过程至关重要。</li>
<li>大气压力变化对地震信号的影响是地震监测和数据分析中不可忽视的因素。</li>
</ul>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><p><strong>Beauduin et al., 1996; De Angelis &amp; Bodin, 2012; Herrin et al., 1969; Hutt et al., 2017; McDonald et al., 1971; Müller &amp; Zürn, 1983; Savino et al., 1972; Sorrells, 1971; Sorrells et al., 1971; Sorrells &amp; Goforth, 1973; Tsai et al., 2004; Warburton &amp; Goodkind, 1977; Ziolkowski, 1973; Zürn &amp; Widmer, 1995; Zürn et al., 2007</strong> 等研究识别了一些重要特性，并提出了具体机制，如地球表面的压力加载效应和大气密度变化的引力吸引效应。</p>
</li>
<li><p>这些研究的不足包括对不同频率地震噪声的物理机制理解不足，以及对地震噪声与大气压力之间关系的复杂性认识有限。</p>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>: 使用了共址的压力和地震数据，以及风速和风向数据。</li>
<li><strong>方法</strong>: 采用了频谱分析，理论推导和数据拟合，以及确定性和随机压力源模型的比较。</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li>发现了两个频率范围内压力和垂直地震数据之间的高一致性。</li>
<li>确定了 HF 范围内地震噪声主要由风相关压力激发。</li>
<li>揭示了 LF 和 HF 范围之间相位差异的原因是垂直地震数据包含了重力和地球自转的效应。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li>明确区分了低频和高频地震噪声的不同物理机制。</li>
<li>提供了一种新的理解大气压力如何影响地震数据的视角。</li>
<li>通过理论分析和实际数据验证，改进了对地震噪声特性的理解。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章未明确指出其研究的局限性，但通常可能包括数据的代表性问题，模型的简化假设，以及对更广泛地区地震噪声特性的普适性考量。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（八）</title>
    <url>/paper-reading-8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;2022年1月15日，汤加火山发生了史上最大的喷发事件，产生了被全球多参数仪器记录的羽流。然而，这次喷发产生的Lamb波对远场水文地质的响应尚未被充分研究。我们研究了远场超过8700公里范围内的地下水对火山喷发的响应，包括274个井。结果表明，速度为316米&#x2F;秒的Lamb波影响了地下水系统，导致井水位（WL）出现类似波动，钻孔应变出现相反相位的波动。不同井在WL幅度上表现出不同的响应，可能由于当地含水层系统的异质性。同时测量大气压力、钻孔空气压力、钻孔应变和WL的5个井的增益值与通过交叉功率谱估计得到的结果一致。这项工作展示了Lamb波在远场地下水系统中诱导的一种新响应，并期望应用于含水层参数估计。</p>
<h3 id="研究的重要性"><a href="#研究的重要性" class="headerlink" title="研究的重要性"></a>研究的重要性</h3><ul>
<li>水文地质响应的探索：了解Lamb波如何影响远场地下水系统对于评估火山活动对地下水资源的潜在影响至关重要。</li>
<li>灾害预警和管理：通过监测地下水位的变化，可以为火山喷发等自然灾害提供预警和管理策略。</li>
</ul>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Briggs et al., 2022; D’Arcangelo et al., 2022; Poli &amp; Shapiro, 2022</strong>：研究了洪阿汤加火山喷发对大气、海啸等的影响。</li>
<li><strong>Jia &amp; Minnett, 2023; Lynett et al., 2022; Ravanelli et al., 2023; Tonegawa &amp; Fukao, 2023</strong>：研究了Lamb波对海洋的影响。</li>
<li><strong>不足</strong>：现有研究主要集中在直接的地质和大气效应上，对远场地下水系统的响应研究不足。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>中国大陆274个井下观测数据，包括气象站的大气压力、钻孔内的空气压力、水位和钻孔应变。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li><strong>小波功率谱方法</strong>：展示水位响应特征。</li>
<li><strong>交叉功率谱方法</strong>：估计增益值。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>Lamb波以约316米&#x2F;秒的速度影响地下水系统。</li>
<li>井水位和钻孔应变出现类似波动和相反相位波动。</li>
<li>观测到可能的时间滞后，可能由不同水力特性的井所致。</li>
</ul>
<h3 id="本文创新之处"><a href="#本文创新之处" class="headerlink" title="本文创新之处"></a>本文创新之处</h3><ul>
<li><strong>新的响应类型</strong>：首次研究了Lamb波对远场地下水系统的新影响。</li>
<li><strong>增益值的一致性</strong>：发现同时测量的大气压力、钻孔空气压力、钻孔应变和WL的增益值与通过交叉功率谱估计得到的结果一致。</li>
</ul>
<h3 id="本文贡献"><a href="#本文贡献" class="headerlink" title="本文贡献"></a>本文贡献</h3><ul>
<li>为理解火山活动对远场地下水系统的影响提供了新的视角。</li>
<li>为含水层参数估计提供了一种可能的新方法。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><p>文章未明确指出研究的不足之处，但可能包括：</p>
<ul>
<li>数据可能受限于井的分布和观测条件。</li>
<li>对Lamb波影响地下水系统的详细机制需要进一步研究。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（九）</title>
    <url>/paper-reading-9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;墨西哥湾近海发生的海底滑坡在美国大陆边缘很常见。这些大规模的土体流失事件可能引发海啸，因此可能对沿海社区和海上基础设施造成严重破坏。然而，海底滑坡的启动和失效过程了解甚少。在这里，我们通过2008年至2015年的数据，识别并定位了墨西哥湾85个以前未知的海底滑坡。其中10个滑坡自发发生，其余75个由远处地震产生的地震面波动态触发，这些地震的震级低至约5级。我们的观察表明，在墨西哥湾存在持续的海底滑坡活动，那里有密集的能源行业基础设施，并且该地区容易受到次生地震灾害的威胁，尽管当地的地震活动率很低。我们的结果应该有助于未来的调查，以识别不稳定的海上斜坡，阐明滑坡的动态过程，也许可以在海啸预警系统中应用远程检测技术。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>海底滑坡对沿海社区和海上基础设施的潜在破坏性</strong>：可能引发海啸，破坏石油平台和海底通信线路。</li>
<li><strong>了解海底滑坡的启动和失效过程</strong>：对于预测和减轻这些灾害至关重要。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Hampton et al., 1996; McAdoo et al., 2000</strong>：研究了海底滑坡对海啸的潜在影响。</li>
<li><strong>Caplan-Auerbach et al., 2001; Dewey &amp; Dellinger, 2008</strong>：发现较小的海底滑坡也能产生可检测的地震信号。</li>
<li><strong>不足</strong>：对海底滑坡的动态触发机制和远程地震面波的触发过程了解不足。</li>
</ul>
<h3 id="使用的数据"><a href="#使用的数据" class="headerlink" title="使用的数据"></a>使用的数据</h3><ul>
<li>使用了2008年至2015年连续8年的地震数据。</li>
</ul>
<h3 id="采用的方法"><a href="#采用的方法" class="headerlink" title="采用的方法"></a>采用的方法</h3><ul>
<li><strong>表面波检测器</strong>：基于Automated Event Location Using a Mesh of Arrays (AELUMA)方法。</li>
<li><strong>Rayleigh波</strong>：用于检测和定位墨西哥湾的海底滑坡。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>识别了85个以前未知的海底滑坡事件。</li>
<li>10个滑坡自发发生，75个由远处地震触发。</li>
</ul>
<h3 id="本文创新之处"><a href="#本文创新之处" class="headerlink" title="本文创新之处"></a>本文创新之处</h3><ul>
<li><strong>远程检测技术的应用</strong>：提出将远程检测技术应用于海啸预警系统。</li>
<li><strong>海底滑坡的动态触发研究</strong>：提供了海底滑坡动态触发的新见解。</li>
</ul>
<h3 id="本文贡献"><a href="#本文贡献" class="headerlink" title="本文贡献"></a>本文贡献</h3><ul>
<li>增进了对海底滑坡启动和失效过程的理解。</li>
<li>为海底滑坡的远程检测和海啸预警提供了新的方法。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>数据覆盖的时间范围有限，仅为8年。</li>
<li>对于海底滑坡的动态触发机制需要进一步的现场观测和研究。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十一）</title>
    <url>/paper-reading-11.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;本文利用西南极附近冰盖分界营地的背景噪声层析成像技术，构建了上覆100米范围内的高分辨率剪切波速度（VS）模型。这是通过联合反演瑞利波相速度和H&#x2F;V比率实现的，其信噪比分别通过三站干涉测量法和相位匹配滤波器得到增强。VS显示在顶部5米内急剧增加（0.04-0.9 km&#x2F;s），在大约8-12米处有明显界面，随后在10到45米深度之间逐渐增加（1.2-1.8 km&#x2F;s），并在约65米处达到2 km&#x2F;s。压缩波速度和经验得到的密度剖面与主动源射击实验中潜水波的Herglotz-Wiechert反演结果以及冰芯分析的结果相吻合。我们的方法提供了一种工具，用于表征雪层和浅层冰柱的高分辨率属性，这有助于推断更深层冰盖的物理属性，从而有助于提高对地球冰冻圈的理解。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>气候变化影响</strong>：南极冰盖保存了关于过去环境条件、气候变化影响的重要信息，对于预测未来海平面上升至关重要。</li>
<li><strong>海平面上升预测</strong>：西南极冰盖（WAIS）对海洋温度的变化非常敏感，其融化可能导致高达3米的海平面上升。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Zhang et al., 2022</strong>：通过环境噪声层析成像技术构建了上层300米的剪切波速度（VS）模型，但在上层雪层的分辨率有限，且预测的瑞利波相速度在频率超过25 Hz时持续超过观测值。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：使用了Thwaites跨学科边缘演化（TIME）项目期间收集的一周长的环境噪声数据。</li>
<li><strong>方法</strong>：<ul>
<li><strong>三站干涉测量法</strong>：增强基模瑞利波。</li>
<li><strong>相位匹配滤波器</strong>：提高H&#x2F;V比率测量的质量。</li>
<li><strong>联合反演</strong>：Vph和H&#x2F;V比率，以获得高分辨率的VS模型。</li>
<li><strong>Herglotz-Wiechert反演（HWI）</strong>：独立验证模型，使用主动源射击实验中潜水波的数据。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li>获得了高分辨率的VS模型，揭示了雪层的显著垂直变化和微妙的水平不均匀性。</li>
<li>经验转换得到的密度剖面为雪层压实过程提供了宝贵见解，并与冰芯分析的测量结果一致。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li>利用环境噪声数据，通过先进的去噪技术和联合反演方法，显著提高了雪层特别是最上层约20米分辨率的刻画。</li>
<li>该方法可以扩展到长期监测更大区域，为冰盖动力学的预测模型提供数据支持。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的局限性，但可能包括信噪比提升技术的局限性、模型对P波速度（VP）的敏感度有限，以及对环境噪声的假设可能带来的影响。</li>
</ul>
<h3 id="数据可用性声明"><a href="#数据可用性声明" class="headerlink" title="数据可用性声明"></a>数据可用性声明</h3><ul>
<li>本研究中使用的数据波形可在EarthScope Consortium PH5 Web Services下获取。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的程序和项目（一）</title>
    <url>/code-and-project1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><a href="https://github.com/ESIPFed/Global-Lake-Level-Database">Global lake level database</a> The Global Lake Level Database (GLLD) is the back-end architecture for the Python package LakePy. </li>
<li><a href="https://github.com/jeffwen/road_building_extraction">Road building extraction</a> This repository contains the code used for this <a href="https://jeffwen.com/2018/02/23/road_extraction">project</a>.</li>
<li><a href="https://github.com/geopy/geopy">geopy</a> geopy is a Python client for several popular geocoding web services.</li>
<li><a href="https://github.com/DenisCarriere/geocoder">geocoder</a> Simple and consistent geocoding library written in Python.</li>
<li><a href="https://github.com/academic/awesome-datascience">Awesome datascience</a> </li>
<li><a href="https://github.com/amueller/ml-workshop-1-of-4">Machine learning workshop</a> This repository contains the teaching material and other info associated with the “Introduction to Machine Learning with scikit-learn” course.</li>
<li><a href="https://github.com/dhaitz/machine-learning-interactive-visualization">Machine learning interactive visualization</a> An interactive dashboard made with Jupyter and Voila. Users can play around with parameter like class imbalance, model strength or cutoff value and observe the effects on metris like ROC&#x2F;AUC or accuracy&#x2F;precision&#x2F;recall.</li>
<li><a href="https://github.com/ChristosChristofidis/awesome-deep-learning">Awesome deep learning</a> An open-source Data Science repository to learn and apply towards solving real world problems.</li>
<li><a href="https://github.com/bubbliiiing/unet-pytorch">Unet pytorch</a> Unet：U-Net: Convolutional Networks for Biomedical Image Segmentation.</li>
<li><a href="https://github.com/hpcaitech/Open-Sora/">Open Sora</a> Democratizing Efficient Video Production for All.</li>
<li><a href="https://github.com/headllines/hackernews-daily">Hacker news daily</a> 通过GitHub订阅Hacker News每日top10.</li>
</ol>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>project</tag>
      </tags>
  </entry>
  <entry>
    <title>如何读文献</title>
    <url>/how-to-read-paper.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>&emsp;&emsp;高效地阅读论文是一项很关键但多半没有人教你的技能。这里讲述了”三遍阅读法”及其在进行文献调查中的使用。</p>
<h3 id="三遍阅读法"><a href="#三遍阅读法" class="headerlink" title="三遍阅读法"></a>三遍阅读法</h3><p>&emsp;&emsp;读第一遍你对论文会有一个大致的了解。读第二遍你能基本掌握论文的基本内容。读第三遍你将深入理解论文。</p>
<h4 id="第一遍"><a href="#第一遍" class="headerlink" title="第一遍"></a>第一遍</h4><p>快速浏览，获得论文的大致内容，大约需要五到十分钟：</p>
<ul>
<li>仔细阅读标题、摘要和引言</li>
<li>阅读各个章节和小节的标题，忽略其他所有内容</li>
<li>阅读结论</li>
<li>浏览参考文献，心里记下你已经读过的那些</li>
</ul>
<p>在第一遍结束时，你应该能够回答5C问题：</p>
<ol>
<li>Category：这是哪种类型的论文？</li>
<li>Context：它与哪些其他论文相关？使用了哪些理论基础？</li>
<li>Correctness：结论看起来合理吗？</li>
<li>Contributions：论文的主要贡献是什么？</li>
<li>Clarity：这篇论文写得好吗?</li>
</ol>
<p>像审稿人一样思考：一般审稿人在一遍阅读后不能理解你的论文要点，这篇论文可能会被拒绝。</p>
<h4 id="第二遍"><a href="#第二遍" class="headerlink" title="第二遍"></a>第二遍</h4><p>仔细地阅读论文，但忽略证明等细节，最多需要一个小时。</p>
<ul>
<li>仔细看图表和其他插图</li>
<li>标记需要进一步阅读的相关未读参考文献</li>
</ul>
<h4 id="第三遍"><a href="#第三遍" class="headerlink" title="第三遍"></a>第三遍</h4><p>对于初学者大约需要四到五个小时，对于有经验的读者大约需要一个小时。</p>
<ul>
<li>能够基本复现这篇论文的工作</li>
</ul>
<h3 id="进行文献调研"><a href="#进行文献调研" class="headerlink" title="进行文献调研"></a>进行文献调研</h3><p>使用学术搜索引擎找到该领域最近的三到五篇论文</p>
<ul>
<li>阅读它们的相关工作</li>
<li>阅读最近的综述论文</li>
<li>在参考文献中找到共享的引用和重复出现的作者名字</li>
<li>下载关键论文（1）</li>
<li>找出最优秀的研究者最近在哪里发表了论文</li>
<li>访问这些顶级会议或期刊的网站，浏览他们最近的论文集</li>
<li>确定最近的高质量相关工作（2）</li>
<li>由（1）和（2）构成调查的第一版</li>
<li>获取你在这些论文中没有找到的关键论文，获取并阅读它</li>
<li>你最好写一个文献调研综述。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十二）</title>
    <url>/paper-reading-12.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;由于冰盖质量巨大，会在地球地壳中引起显著的应力。研究表明，在北欧的某些地区，冰川消融过程中的应力释放可以触发大地震。尽管已经在北欧分析了冰川引起的应力，但尚未对格陵兰进行分析。我们知道格陵兰冰盖在早期全新世经历了一个大规模的融化期，我们首次分析了格陵兰在冰川消融期间的冰川诱发应力变化。结合历史海平面指标和冰川诱发断层重新激活模型的综合分析表明，大约10,600年前，格陵兰冰盖的消融可能导致了一次大地震或一系列较小震级地震。地震可能使相对海平面观测值发生了数米的偏移。地震引发的应力释放是在单一事件中产生的，它可能在北大西洋产生了高达7.2米的英国群岛上岸高度和高达7.8米的加拿大沿岸海啸。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>冰盖融化与地壳应力</strong>：冰盖的融化可以导致地壳应力的释放，进而可能触发地震活动，这对理解地球内部动力学和表面过程具有重要意义。</li>
<li><strong>海平面变化与地震活动</strong>：相对海平面的变化是研究古气候变化的重要指标，而地震活动与海平面变化之间可能存在联系。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>北欧地区研究</strong>：已有研究分析了北欧地区冰川消融引起的地壳应力和地震活动，例如Arvidsson (1996) 研究了Fennoscandian地区的地震活动与冰川消融的关系。</li>
<li><strong>格陵兰冰盖研究</strong>：尽管格陵兰冰盖的融化速度在过去几十年有所加快，但目前尚无证据表明这与地震活动的增加有关 (Voss et al., 2007; Olivieri and Spada, 2015)。</li>
<li><strong>不足</strong>：对格陵兰地区冰川消融引起的应力释放及其可能触发的地震活动的研究相对较少。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：<ul>
<li>过去的海平面指标</li>
<li>格陵兰冰盖模型 (Huy3)</li>
<li>地球粘滞模型</li>
<li>海洋负荷模型</li>
</ul>
</li>
<li><strong>方法</strong>：<ul>
<li>结合历史海平面数据和冰川诱导断层重新激活模型</li>
<li>使用有限元软件ABAQUS进行三维模型计算</li>
<li>应用GeoClaw软件模拟海啸动力学</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li><strong>应力模型</strong>：表明南格陵兰是冰川触发断层活动的最可能区域。</li>
<li><strong>海啸模拟</strong>：如果地震是由单一事件引起的，可能在北大西洋产生了高达数米的海啸。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>首次分析</strong>：首次对格陵兰地区冰川消融期间的冰川诱导应力进行了分析。</li>
<li><strong>综合方法</strong>：结合了多种方法来评估冰川触发地震的可能性，并模拟了可能产生的海啸。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的局限性，但可能包括模型的简化假设、对冰盖融化历史和地震活动的不确定性，以及缺乏直接的地质证据来支持模型预测。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十三）</title>
    <url>/paper-reading-13.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;适当的非构造性地震信号分类对于检测微地震和提高对持续弱地面运动的理解至关重要。我们利用无监督机器学习来标记连续波形中常见的五种非平稳地震噪声类别。描述数据的时间和频谱特征被聚类以识别可分离的紧急和脉冲波形类型。训练好的聚类模型被用来分类来自密集地震阵列的每1秒连续地震记录，站点间隔为10-30米。研究表明，主导噪声信号可以高度局部化，尺度在数百米。该方法展示了弱地面运动的复杂性，并提高了在低信噪比下分析地震波形的标准。应用这种技术将提高在嘈杂环境中检测真实微小地震事件的能力，其中地震传感器记录了来自非构造性源的类似地震信号。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ul>
<li><strong>微地震检测</strong>：提高微地震的检测能力有助于更好地理解断层上的故障过程。</li>
<li><strong>地震信号与噪声的区分</strong>：正确区分地震信号和噪声对于地震监测和预测至关重要。</li>
</ul>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Aguiar &amp; Beroza, 2014; Hammer et al., 2013; Linville et al., 2019; Mousavi et al., 2016; Perol et al., 2018; Ross, Meier, &amp; Hauksson, 2018; Ross, Meier, Hauksson, &amp; Heaton, 2018; Rouet-Leduc et al., 2019</strong>：这些研究使用有监督的机器学习来识别地震、颤动、山体滑坡、雪崩和矿震等。</li>
<li><strong>不足</strong>：现有研究多集中在使用有监督学习，需要大量正确标记的数据，对于新出现的或未知的信号类型识别能力有限。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：来自加利福尼亚大学圣地亚哥分校斯克里普斯海洋学研究所的密集地震阵列的连续波形数据。</li>
<li><strong>方法</strong>：<ul>
<li>使用无监督机器学习对数据进行聚类分析。</li>
<li>利用主成分分析（PCA）对标准化的特征向量进行降维。</li>
<li>应用k-means聚类算法对特征向量进行分类。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li><strong>识别了五种不同的噪声类别</strong>：具有不同的频谱和时间波形属性。</li>
<li><strong>噪声信号的空间分布</strong>：在密集阵列中表现出高度的局部化和变化。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>无监督学习的应用</strong>：首次尝试在密集地震阵列中对连续波形的每一秒进行标记和评估。</li>
<li><strong>聚类模型</strong>：训练的模型能够快速分类大量连续地震波形数据。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的局限性，但可能包括对噪声源的物理特性缺乏直接的实验验证，以及模型在不同地区或不同类型噪声的泛化能力尚未得到验证。</li>
</ul>
<h3 id="数据可用性声明"><a href="#数据可用性声明" class="headerlink" title="数据可用性声明"></a>数据可用性声明</h3><ul>
<li>原始数据通过地震学研究机构的联合研究机构公开获取。训练数据可通过国际数字地震图网络获取。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>哪里去了解科学研究趋势</title>
    <url>/science-blogs.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;自然是要发挥你的主观能动性了。事在人为，干就完了。如果你实在不知道怎么开始干的话，那就看看下面的建议：</p>
<ol>
<li>首先肯定是关注你的相关研究的期刊了。例如：<a href="https://www.sciencedirect.com/journal/earth-and-planetary-science-letters">EPSL</a>，<a href="https://agupubs.onlinelibrary.wiley.com/journal/19448007">GRL</a>，<a href="https://agupubs.onlinelibrary.wiley.com/journal/21699356">JRG: Solid Earth</a>，<a href="https://www.seismosoc.org/publications/srl/">SRL</a>，<a href="https://academic.oup.com/gji/">GJI</a>等。每次都跑去点开人家主页显然是比较麻烦的。<br>那有没有简单的方法呢？自然是有的。你需要RSS(Really Simple Syndication)，他是一种描述和同步网站内容的格式。找一个你喜欢的RSS工具。然后在里面订阅不同网站的RSS源，然后她会定时推送新的内容给你。RSS源一般在每个期刊主页都可以找到。你可以在一个地方坐拥万千稿件和信息。每天点开打卡，审批奏折。<br>以前我用的是google reader，后来不对咱开放了，然后换到feedly。结果后来又封了。试了很多rss工具，都不太喜欢。最后用的是<a href="https://rss.othing.xyz/">FreshRSS</a>，好像是一个小朋友整的个人网站。界面很简洁，是我的风格。</li>
<li>除了自己去读期刊发表的相关研究，自然可以请别人帮你读。哪里去找呢？我找到了这个几个：</li>
</ol>
<ul>
<li><a href="https://www.science.org/blogs">Science blogs1</a>，<a href="https://scienceblogs.com/">Science blogs2</a></li>
<li><a href="https://blogs.nature.com/">Nature blogs</a> Nature的博客。但感觉不怎更新了。</li>
<li><a href="https://phys.org/">phys.org</a>这里更多的是物理学领域的内容。</li>
<li><a href="https://blogs.nasa.gov/">NASA blogs</a></li>
<li><a href="https://www.sciencebuddies.org/">Science Buddies</a></li>
<li><a href="https://www.popsci.com/">Popular Science</a></li>
<li><a href="https://www.planetary.org/articles">The planetary socity</a></li>
<li><a href="https://www.sciencefriday.com/series/educator-collaborative/">Science Friday</a></li>
<li><a href="https://blog.sciencenet.cn/blog.php">科学网</a>这里有好多熟人，名人，新论文，博客等。</li>
<li><a href="https://www.seismo.berkeley.edu/blog/index.html">Berkeley Seismology Lab</a></li>
<li><a href="https://www.pnsn.org/blog">PNSN</a></li>
<li><a href="https://eos.org/landslide-blog">Landslide blog</a></li>
<li><a href="https://blogs.agu.org/geospace">Geospace</a></li>
<li><a href="https://earthobservatory.nasa.gov/blogs/">EarthObservatory</a></li>
<li><a href="https://www.volcanodiscovery.com/earthquakes/news.html">Volcanodiscovery</a></li>
</ul>
<ol start="3">
<li>开会。多开会，你会看到一手的研究，见到你读到的文章的作者，你的idol，你的网友，审你稿件的大小牛，甚至你的未来老板，好友等等。多开会，你会有非常多的视角，兼听则明。</li>
<li>多和课题组，实验室的同学，学长，学姐，老师交流。你以为的问题，有时可能就不是问题。</li>
</ol>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>blogs</tag>
        <tag>science</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十四）</title>
    <url>/paper-reading-14.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;气候变暖导致的冰冻圈响应包括冰川退缩、海拔依赖的热不稳定性以及丰富的融水，这些增加了灾难性冰川灾害链（CGHC）事件的频率。本研究调查了2018年发生在中国喜马拉雅山东部的色东普冰川的一种特殊CGHC事件的形成机制。基于多源遥感、地震信号分析和数值模拟，我们进行了长期的回顾性分析和事件过程重建。结果表明，该事件可分为两个阶段。首先，一个体积为8.5×10^6立方米的悬挂冰川坍塌到下游的主冰川上。接下来，约1.17×10^8立方米的侵蚀物质从受冲击的冰川转变成为泥石流，并沿下游流动了8公里。在级联过程中，冰-岩崩落动量和冰川速度是决定CGHC形成和最终体积的关键因素。我们的研究有助于更好地理解CGHC灾害的多米诺效应。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ul>
<li><strong>气候变化对冰冻圈的影响</strong>：冰川退缩和相关的灾害链事件对下游社区可能产生灾难性后果。</li>
<li><strong>冰川灾害链（CGHC）</strong>：对CGHC事件的理解有助于改进灾害风险评估和减灾措施。</li>
</ul>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Chiarle et al., 2007; Evans &amp; Delaney, 2015; Lutz et al., 2014</strong>：研究了冰川化环境中的大规模流动，包括由融水引起的摩擦减弱、高速度和长距离运动。</li>
<li><strong>Scherler et al., 2011</strong>：研究了全球变暖如何重塑和动员冰川系统，导致冰川相关大规模流动的频率增加。</li>
<li><strong>不足</strong>：现有研究对CGHC事件的物理过程和对气候变化的响应理解不足。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：<ul>
<li>多源遥感数据，包括光学和合成孔径雷达（SAR）图像。</li>
<li>气象站数据和全球降水测量任务（GPM IMERG v6）降水数据。</li>
<li>地震记录数据，来自围绕色东普的11个宽频带地震站的网络。</li>
</ul>
</li>
<li><strong>方法</strong>：<ul>
<li>应用相关匹配算法追踪Landsat&#x2F;Sentinel-2图像中的亚像素偏移。</li>
<li>使用数值方法基于热力学耦合解决冰川运动。</li>
<li>利用地形重建和质量运动解释来揭示2018年CGHC事件的动态过程。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li><strong>气候变化和冰川退缩</strong>：自1970年代以来，青藏高原的年平均气温每十年上升0.32°C，是全球平均水平的两倍。</li>
<li><strong>动态过程和地貌特征</strong>：CGHC事件包括冰-岩崩落和随后的泥石流过程，具有超流动性和体积显著增加。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>CGHC事件的详细重建</strong>：提供了2018年CGHC事件形成、演变和运动过程的详细重建。</li>
<li><strong>气候变化对CGHC的影响</strong>：分析了气候变化如何通过增加冰川融化和降水来促进CGHC事件。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的局限性，但可能包括对冰川动态和CGHC事件复杂性的进一步理解需要更多的实地观测和数据。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十五）</title>
    <url>/paper-reading-15.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>极地地区冰川崩解通常与大气-海洋变化相关，因此预计在气候变暖的情况下会增加。冰山排放对海洋环流、气候和全球海平面都有影响。冰山还因海床刮擦影响底栖生物群落，对航运业和海洋基础设施构成威胁，并通过产生冰山倾覆海啸危及沿海居民。人们认为冰山对海床的影响限于大陆架和上坡，水深不超过冰山龙骨深度（通常小于500米）。在本文中，我们提供了证据表明，冰山通过引发海底滑坡影响了其龙骨深度以外的海床。海底滑坡通常比陆地上的滑坡大得多。它们是主要的地质灾害，尤其是因为它们可能触发对沿海居民造成毁灭性后果的海啸。此外，它们可能破坏海上基础设施，例如承载超过95%全球数据的海底互联网电缆。目前，世界上很少有海底滑坡有已知的触发因素，尽管这些沉积物已在各种水体和环境中被绘制出来。少数被实时记录的海底滑坡通常意味着地震是它们的触发机制。更常见的是，海底不稳定性的原因是基于推测的，这在识别海底滑坡的触发因素时产生了很大的不确定性，并负面影响了适当的风险评估的发展。由于海底滑坡极难在海底观测和监测，关于它们的触发机制仍有重要问题需要解答。在这项研究中，我们结合了重复的海底地形数据、卫星图像和海底沉积物的地质技术属性，以提供证据表明，在巴芬岛南风峡湾，冰山与海床的碰撞触发了海底滑坡。这些结果表明，冰山搁浅和倾覆可能是在许多峡湾和极地至亚极地环境中的大陆坡触发海底滑坡的原因，这是一个以前被低估的隐患。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>气候变化对冰川和冰山的影响</strong>：研究冰山崩解对理解全球气候变化的影响至关重要。</li>
<li><strong>海底滑坡的地质灾害</strong>：海底滑坡可能引发海啸，对沿海社区构成严重威胁。</li>
<li><strong>海洋基础设施的保护</strong>：了解冰山对海底的影响有助于保护海底电缆等基础设施。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><strong>Dowdeswell &amp; Bamber, 2007; Barrie et al., 1992</strong>：研究了冰山在浅于龙骨深度的水域刮擦海床的现象。</li>
<li><strong>Hill &amp; Condron, 2014</strong>：探讨了在冰期后退时，冰山在亚热带佛罗里达的分布。</li>
<li><strong>不足</strong>：现有研究对冰山在超过龙骨深度的水域引发海底滑坡的认识有限，缺乏对此类事件触发机制的直接观测和数据。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：<ul>
<li>重复的海底地形数据（多波束回声探测数据）。</li>
<li>卫星图像。</li>
<li>海底沉积物的地质技术属性。</li>
</ul>
</li>
<li><strong>方法</strong>：<ul>
<li>对比分析不同时间点的海底地形数据，以识别海底滑坡的发生。</li>
<li>使用卫星图像确认冰山的位置和行为。</li>
<li>进行简单的极限平衡边坡稳定性分析，以评估冰山撞击对海底沉积物稳定性的影响。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li>确定了在巴芬岛南风峡湾，冰山与海床的碰撞触发了海底滑坡。</li>
<li>通过卫星图像和多波束回声探测数据，观察到冰山在滑坡发生地的搁浅和倾覆。</li>
<li>地质技术数据显示，冰山撞击产生的垂直载荷足以触发海底滑坡。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>冰山撞击深度的扩展认识</strong>：提供了冰山可以在超过其龙骨深度的水域影响海底的证据。</li>
<li><strong>海底滑坡触发机制的新见解</strong>：揭示了冰山搁浅和倾覆可能是在极地至亚极地环境中触发海底滑坡的一个重要因素。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的局限性，但可能包括对冰山撞击和海底滑坡之间关系的更深入理解需要更多案例研究和数据支持。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十六）</title>
    <url>/paper-reading-16.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在2018年InSight任务着陆之前，InSight科学团队提出了一种独立于地震速度模型的方法，使用多圈面波来定位火星震，适用于大于MW4.6的事件。2022年5月4日的S1222a MW4.7是记录到的最大的火星震，也是第一个足够大，可以使用这种方法的地震。通过确定前三圈Rayleigh波的群到达时间，我们计算出了群速度、震中距和起始时间。平均距离为36.9±0.3°，与基于体波测量的火星地震服务(MQS)的距离37.0±1.6°一致。表面波的起始时间比MQS的起始时间系统性地晚了20秒。背方位角估计与MQS基于体波的估计相似，尽管表明向南有所偏移。R2和R3的背方位角估计更加分散，但显示出明显的椭圆形运动。</p>
<h3 id="相关研究的重要性及前人研究"><a href="#相关研究的重要性及前人研究" class="headerlink" title="相关研究的重要性及前人研究"></a>相关研究的重要性及前人研究</h3><ul>
<li><p><strong>重要性：</strong></p>
<ul>
<li>火星震学对于理解火星内部结构和地质活动至关重要。</li>
<li>独立于地震速度模型的定位方法可以提供一种在地震速度结构未知的情况下估计地震位置的手段。</li>
</ul>
</li>
<li><p><strong>前人研究：</strong></p>
<ul>
<li>Khan et al., 2016; Panning et al., 2015 提出了使用圈面波进行火星地震定位的方法。</li>
<li>其他研究如 Bagheri et al., 2019; Khan et al., 2018; Smrekar et al., 2019 提供了火星内部速度结构的先验模型。</li>
</ul>
</li>
<li><p><strong>不足之处：</strong></p>
<ul>
<li>之前的研究依赖于对火星震速度结构的假设，而这些结构在InSight任务之前并不完全清楚。</li>
<li>火星震事件较小，无法测试多圈面波方法的有效性。</li>
</ul>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><p><strong>数据：</strong></p>
<ul>
<li>使用InSight任务的SEIS仪器记录的S1222a火星地震事件数据。</li>
</ul>
</li>
<li><p><strong>方法：</strong></p>
<ul>
<li>应用了多圈面波定位方法，通过测量R1、R2和R3 Rayleigh波的群到达时间来确定震中距、群速度和起始时间。</li>
</ul>
</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>震中距估计为36.9±0.3°，与MQS基于体波测量的距离一致。</li>
<li>面波的起始时间比MQS的起始时间晚了20秒。</li>
<li>后方位角估计与MQS的估计相似，但表明可能向南有所偏移。</li>
</ul>
<h3 id="本文创新之处及贡献"><a href="#本文创新之处及贡献" class="headerlink" title="本文创新之处及贡献"></a>本文创新之处及贡献</h3><ul>
<li><p><strong>创新之处：</strong></p>
<ul>
<li>首次应用了不依赖于先验地震速度模型的火星地震定位方法。</li>
<li>利用了足够大的火星震事件来测试和验证这种方法。</li>
</ul>
</li>
<li><p><strong>贡献：</strong></p>
<ul>
<li>验证了MQS方法的有效性，并为火星地震学提供了一种新的独立工具。</li>
<li>通过实际地震数据的应用，增强了对火星地震定位方法的信心。</li>
</ul>
</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的不足之处，但可能的不足可能包括：<ul>
<li>由于火星震事件的稀有性和噪声问题，可能影响数据质量和分析结果的准确性。</li>
<li>背方位角的估计可能受到火星表面风等非地震因素的影响，导致估计存在偏差。</li>
</ul>
</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十七）</title>
    <url>/paper-reading-17.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>随着全球气候变暖，冰架表面的融水增加可能会触发冰架崩塌，加速全球海平面上升。表面河流的形成如果能有效排走融水，也可能有助于防止冰架崩塌。在这里，我们展示了格陵兰西北部彼得曼冰架表面河流演变成冰架河口的演变观测，并在附近的雷德冰架上发现了第二个河口。这种表面水文过程可以促进断裂并增强冰架崩解。在彼得曼河口，观察到海冰在上游河口处汇聚，表明了流动方向的逆转。在周围的冰景冻结后，海水仍持续存在于河口中。沿着彼得曼河口的底部，从崩解前沿开始的线性裂缝沿着通道向上游传播。类似的沿着河口通道的裂缝塑造了彼得曼和雷德冰架上过去的大型直线崩解事件。在一个变暖的世界中，表面融化的增加将增强河流侵蚀，促进河口发展，沿冰架前沿的纵向断裂正交于冰架前沿，并增加直线崩解。河口可能在接下来的半个世纪内出现在南极洲，导致冰架崩解增加，加速冰层损失和全球海平面上升。</p>
<h3 id="研究的重要性"><a href="#研究的重要性" class="headerlink" title="研究的重要性"></a>研究的重要性</h3><ol>
<li><strong>冰架稳定性与全球海平面上升</strong>：冰架的稳定性直接关系到全球海平面的变化，是气候变化研究的重要组成部分。</li>
<li><strong>表面水文学对冰架稳定性的影响</strong>：了解表面河流和河口如何影响冰架的稳定性，对预测冰架未来的变化至关重要。</li>
</ol>
<h3 id="前人研究与不足"><a href="#前人研究与不足" class="headerlink" title="前人研究与不足"></a>前人研究与不足</h3><ul>
<li><p><strong>相关研究</strong>：</p>
<ul>
<li>Kingslake et al. (2017) 观察到南极冰架上的融水广泛流动。</li>
<li>Bell et al. (2017) 发现南极冰架可能通过表面河流的融水排出而稳定。</li>
<li>Dow et al. (2018) 发现冰架底部的通道驱动活跃的表面水文学和冰架的横向断裂。</li>
</ul>
</li>
<li><p><strong>不足之处</strong>：</p>
<ul>
<li>之前的研究没有明确识别出冰架上的河口，对河口形成和其对冰架稳定性的影响理解有限。</li>
<li>缺乏对冰架表面河流如何演变成河口的直接观测。</li>
</ul>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><p><strong>数据</strong>：</p>
<ul>
<li>DigitalGlobe卫星图像、Landsat数据、NASA Operation IceBridge (OIB)数据、气候模型Modèle Atmosphérique Régionale (MAR)输出、南极洲的DEM (REMA)。</li>
</ul>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li>高分辨率卫星和航空图像分析。</li>
<li>利用气候模型定性分析表面过程的趋势。</li>
<li>通过测量图像中河流和河口的宽度，追踪其演变。</li>
</ul>
</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>观测到彼得曼冰架上的表面河流演变成河口，并且在雷德冰架上发现了第二个河口。</li>
<li>河口的形成与冰架前沿的裂缝发展和直线崩解事件有关。</li>
<li>预测在接下来的30年内，南极洲的冰架上可能会形成更多的河口。</li>
</ul>
<h3 id="本文创新之处及贡献"><a href="#本文创新之处及贡献" class="headerlink" title="本文创新之处及贡献"></a>本文创新之处及贡献</h3><ul>
<li><p><strong>创新之处</strong>：</p>
<ul>
<li>首次识别出冰架上的河口，并研究了其对冰架稳定性的潜在影响。</li>
<li>提出了“河口弱化”这一新概念，解释了河口如何促进冰架的直线崩解。</li>
</ul>
</li>
<li><p><strong>贡献</strong>：</p>
<ul>
<li>为理解冰架表面水文学对冰架稳定性的影响提供了新的视角。</li>
<li>对未来南极冰架河口的发展及其对全球海平面上升的潜在影响进行了预测。</li>
</ul>
</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的不足之处，但潜在的不足可能包括：<ul>
<li>预测模型可能过于简化，未考虑日内河流水文变化对侵蚀率的影响。</li>
<li>对河口形成所需时间的估计存在不确定性，依赖于多个假设和参数。</li>
</ul>
</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十八）</title>
    <url>/paper-reading-18.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>&emsp;&emsp;罗斯冰架上的冰震活动与海洋重力波活动的振幅有关。在罗斯冰架上部署的宽带地震仪，辅以近冰前海底水听器，确立了强烈的冰震活动与低于0.04赫兹的海洋重力波幅度（AG）之间的关联。罗斯冰架前沿的地震垂直位移幅度（ASV）与AG有很好的相关性，从而可以估计从重力波幅度到冰前垂直位移幅度（TGSV(f)）的频率依赖传递函数。TGSV(f)在0.001–0.01赫兹时为0.6–0.7，但在更高频率时迅速减小。强烈的冰震活动在空间上和季节上与不同的重力波频段有关，最强的冰震主要在南半球夏季观测到，那时海冰最少，涌浪的冲击最强。</p>
<h3 id="研究的重要性"><a href="#研究的重要性" class="headerlink" title="研究的重要性"></a>研究的重要性</h3><ol>
<li><strong>冰架稳定性</strong>：冰架对于抑制陆地冰流向海中的流动起着重要作用，其完整性对调节海平面上升至关重要。</li>
<li><strong>海洋动力影响</strong>：海洋动力可以通过热和动力学两种方式影响冰架的完整性，从而影响全球海平面上升。</li>
</ol>
<h3 id="前人研究与不足"><a href="#前人研究与不足" class="headerlink" title="前人研究与不足"></a>前人研究与不足</h3><ul>
<li><p><strong>相关研究</strong>：</p>
<ul>
<li>早期研究将冰架对重力波的响应建模为均匀厚度的漂浮板。</li>
<li>近期研究包括二维和三维有限元模拟，以及从现场地震数据估算由弯曲和伸展波引起的伸展应力。</li>
</ul>
</li>
<li><p><strong>不足之处</strong>：</p>
<ul>
<li>这些模拟表明，引起的动态应力强烈依赖于系统几何形状，包括冰架厚度、物理属性、冰下腔室厚度和海底地形，这些因素具有显著的不确定性和空间变异性，尚未得到充分考虑。</li>
</ul>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><p><strong>数据</strong>：</p>
<ul>
<li>利用在罗斯冰架上部署的34站宽带地震阵列收集的数据，以及海底压力观测数据。</li>
</ul>
</li>
<li><p><strong>方法</strong>：</p>
<ul>
<li>使用地震仪和水听器记录的地震数据来估计海洋重力波幅度和冰架前沿的垂直位移幅度。</li>
<li>通过这些数据来确定一个经验的频率依赖的海洋波-冰架位移幅度传递函数。</li>
</ul>
</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>确定了罗斯冰架前沿的地震垂直位移幅度与海洋重力波幅度有很好的相关性。</li>
<li>发现冰震活动在南半球夏季最为频繁，这与海冰的最小化和涌浪冲击的最强有关。</li>
<li>获得了一个从海洋重力波幅度到冰架前沿垂直位移幅度的经验传递函数。</li>
</ul>
<h3 id="本文创新之处及贡献"><a href="#本文创新之处及贡献" class="headerlink" title="本文创新之处及贡献"></a>本文创新之处及贡献</h3><ul>
<li><p><strong>创新之处</strong>：</p>
<ul>
<li>首次提供了一个基于观测的海洋到冰架位移传递函数，为理解海洋强迫与冰架响应之间的机械联系提供了新的视角。</li>
</ul>
</li>
<li><p><strong>贡献</strong>：</p>
<ul>
<li>为冰架建模工作提供了验证观测，有助于改进现有的冰架响应模型。</li>
<li>增进了我们对冰架如何响应海洋重力波影响的理解，这对于预测冰架动态和海平面上升具有重要意义。</li>
</ul>
</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>文章中并未明确指出研究的不足之处，但潜在的不足可能包括：<ul>
<li>研究可能需要进一步验证传递函数在不同条件下的适用性和准确性。</li>
<li>对于冰架完整性变化的长期影响和更广泛海洋环境因素的综合评估可能需要更多的研究。</li>
</ul>
</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>如何下载S-net数据</title>
    <url>/how-to-download-Snet-data.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;S-net是NIED（日本国立防灾科学技术研究所）布设的海底地震动观测网络，由150台三分量地震仪组成。观测区域覆盖了2011年东日本大地震及其邻近地区的震源区域。自2017年4月以来，S-net已全面开始运作，实时地将数据传回NIED。<br>&emsp;&emsp;如何下载S-net的数据呢？参见Seisman的<a href="https://seisman.github.io/HinetPy/">HinetPy</a>。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol>
<li>用命令安装HinetPy，用python3.8以上版本，命令为。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m pip install HinetPy</span><br></pre></td></tr></table></figure></li>
<li>安装win32tools<br>在<a href="https://hinetwww11.bosai.go.jp/auth/manual/?LANG=en">hinet</a>网站下载安装包<a href="https://hinetwww11.bosai.go.jp/auth/manual/dlDialogue.php?r=win32tools">win32tools.tar.gz</a>，运行:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf win32tools.tar.gz</span><br><span class="line"><span class="built_in">cd</span> win32tools/</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
把catwin32.src&#x2F;catwin32和win2sac.src&#x2F;win2sac_32拷贝到环境变量认识的位置。</li>
</ol>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>&emsp;&emsp;具体怎么下载数据自己去看说明就好了。我想要下载连续数据，所以写了个循环脚本，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from HinetPy import Client</span><br><span class="line">from HinetPy import win32</span><br><span class="line">from datetime import datetime,timedelta</span><br><span class="line"></span><br><span class="line">client = Client (&quot;xxxx&quot;,&quot;xxxx&quot;)</span><br><span class="line"># 这里输入你自己的账号和密码。自己申请就好了。</span><br><span class="line">endtime=datetime(2016,8,16,2,0) # 截至时间</span><br><span class="line">time=datetime(2016,8,16,1,40)   # 开始时间</span><br><span class="line">dt=timedelta(minutes=20)        # 时间增量（分钟记）</span><br><span class="line">dir=&quot;data&quot;                      # 数据存在dir下面</span><br><span class="line">while (time&lt;endtime):</span><br><span class="line">    print(time,endtime)</span><br><span class="line">    y=&quot;%04d&quot;%time.year</span><br><span class="line">    m=&quot;%02d&quot;%time.month</span><br><span class="line">    d=&quot;%02d&quot;%time.day</span><br><span class="line">    h=&quot;%02d&quot;%time.hour</span><br><span class="line">    mm=&quot;%02d&quot;%time.minute</span><br><span class="line">    name=y+&quot;_&quot;+m+&quot;_&quot;+d+&quot;_&quot;+h+&quot;_&quot;+mm+&quot;.cnt&quot;</span><br><span class="line">    cname=y+&quot;_&quot;+m+&quot;_&quot;+d+&quot;_&quot;+h+&quot;_&quot;+mm+&quot;.ch&quot;</span><br><span class="line">    outd=dir+&quot;/&quot;+y+&quot;_&quot;+m+&quot;_&quot;+d+&quot;_&quot;+h+&quot;_&quot;+mm #每20分钟一个文件夹</span><br><span class="line">    data=dir+&quot;/&quot;+y+&quot;_&quot;+m+&quot;_&quot;+d+&quot;_&quot;+h+&quot;_&quot;+mm+&quot;.cnt&quot;</span><br><span class="line">    ctable=dir+&quot;/&quot;+y+&quot;_&quot;+m+&quot;_&quot;+d+&quot;_&quot;+h+&quot;_&quot;+mm+&quot;.ch&quot;</span><br><span class="line">    if not os.path.exists(ctable):</span><br><span class="line">        # 如果仪器信息文件没有则创建一个空的，这样做可以多跑几个进程，同时下载，并保证不重复。</span><br><span class="line">        with open(ctable, &#x27;w&#x27;) as file:</span><br><span class="line">            pass</span><br><span class="line">        dat,ctabl = client.get_continuous_waveform(&quot;0120&quot;,time,20,data=name,ctable=cname,outdir=dir) # 下载数据，这里0120就是指代S-net。client.info()可以查看所有台网。 outdir指定保存数据的文件夹。</span><br><span class="line">        if os.access(data, os.F_OK):</span><br><span class="line">        # 如果下载成功则进行解压。如果没有数据，强行进行解压，程序就出错跳出来。</span><br><span class="line">        #if os.path.getsize(data) != 0:</span><br><span class="line">            win32.extract_sac(data,ctable,outdir=outd) #解压sac。</span><br><span class="line">            win32.extract_sacpz(ctable, outdir=outd) #解压仪器响应。</span><br><span class="line">    time=time+dt</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;NEID下载数据有个限制就是道数X时间（按分钟记）&lt;12000。S-net有150个台，三分量就是450道，因此12000&#x2F;450&#x3D;26.666分钟，即每次最长可下载不超过26分钟数据。为了方便我搞的是20分钟。<br>&emsp;&emsp;其他没有什么问题，就是下载数据好慢。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>seismic</tag>
      </tags>
  </entry>
  <entry>
    <title>学习聚束分析(一)</title>
    <url>/music.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;聚束分析技术（Bartlett 聚束成形器）虽然稳定性和稳健性很好，但分辨率较差。Schmidt 提出了一种称为多信号分类 （MUSIC） 的新聚束分析算法，用于在保持波束形成器稳定性的同时解决分辨率问题 （Schmidt, 1986）。这里我们学习 MUSIC 算法，并给出一些Python代码来展示该技术的工作原理。</p>
<p>&emsp;&emsp;假设一个信号为$u(t)$则傅里叶频谱为$U(\omega)$, $N$ 个接收器的向量为,<br>$$ \vec{u}(\omega) &#x3D; [U_{1}(\omega), U_{2}(\omega), \cdots, U_{N}(\omega)]^T \tag{1} $$<br>互相关矩阵由下式给出,<br>$$ \bar{C}(\omega) &#x3D; \frac{1}{N}\vec{u}(\omega) \vec{u}^H(\omega) \tag{2} $$<br>式中$H$表示Hermitian转置算符。互相关矩阵$\bar{C}(\omega)$通常受到非相干信号及仪器产生的噪声干扰。因此该矩阵包括相干信号和噪声。对$\bar{C}(\omega)$进行特征值分解获得，</p>
<p>$$ \bar{C}(\omega) &#x3D; \bar{E}(\omega) \bar{\Lambda}(\omega) \bar{E}^{-1}(\omega) \tag{3} $$</p>
<p>式中$\bar{E}(\omega)$由$N$个特征向量$\vec{e}_{i} $ 组成，</p>
<p>$$ \bar{E}(\omega) &#x3D; [\vec{e}_1, \vec{e}_2, \cdots, \vec{e}_N] \tag{4} $$</p>
<p>$\bar{\Lambda}(\omega)$ 是对角矩阵，对角元素$\lambda_{i}$是$\bar{C}(\omega)$的特征值，</p>
<p>$$ \bar{\Lambda}(\omega) &#x3D; diag { \lambda_{1}, \lambda_{2}, \cdots, \lambda_{N} } \tag{5} $$</p>
<p>&emsp;&emsp;最大的特征值表示相干信号（可能有多个相干信号），左边的特征值及其特征向量被噪声占据，这意味着这些噪声是正交的。在这里，我们使用噪声的特征向量构造一个新矩阵</p>
<p>$$ \bar{N}_e(\omega) &#x3D; [\vec{e}_1, \vec{e}<em>2, \cdots, \vec{e}</em>{ne}] [\vec{e}_1, \vec{e}<em>2, \cdots, \vec{e}</em>{ne}]^H \tag{6} $$</p>
<p>&emsp;&emsp;Barlett聚束器从 </p>
<p>$$ P(\omega) &#x3D; \vec{a}(\omega) \bar{C}(\omega) \vec{a}^H(\omega) \tag{7} $$</p>
<p>变为，</p>
<p>$$ P(\omega) &#x3D;\frac{1}{ \vec{a}(\omega) \bar{N}_e(\omega) \vec{a}^H(\omega) } \tag{8} $$<br>式中 $\vec{a}(\omega)$ 表示转向向量 $\vec{a}_n&#x3D;e^{-i\omega \Delta t_n}$。 当我们将转向向量投影到噪声特征向量跨越的噪声矩阵子空间时, 公式$(8)$的分母项将为零。在这种情况下 $P(\omega)$ 将取极大值。$\Delta t_n$ 是时间延迟，其形式为，</p>
<p>$$ \Delta t_{n} &#x3D; \vec{s} \cdot \vec{r}_n \tag{9} $$</p>
<p>式中$\vec{s}&#x3D;s[-sin\theta, -cos\theta]^T$ 和 $\vec{r}_{n}$ 是慢度和位置矢量，其中接收器的反方位角为$\theta$。$\vec{r}_s$ 和 $v$ 是源位置向量和传播速度。</p>
<p>&emsp;&emsp;MUSIC 算法在分辨率上优于 Bartlett 波束成形器。然而，与 MUSIC 相比，Bartlett 波束成形器具有更好的稳定性。以下是两种算法的python脚本示例。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line"># ARF of the Bartlett beamformer.</span><br><span class="line">def arf_beam_barlett(c0, xy, f0=10, b0=90, s0=3.5e-3, b1=0, b2=360, nb=181, s1=1e-3, s2=5e-3, ns=81):</span><br><span class="line">    n = xy.shape[0]</span><br><span class="line">    a = np.zeros((n, 1), dtype=complex)</span><br><span class="line">    b = np.linspace(b1, b2, nb)</span><br><span class="line">    bb = np.radians(b)</span><br><span class="line">    s = np.linspace(s1, s2, ns)</span><br><span class="line">    p = np.zeros((ns, nb), dtype=complex)</span><br><span class="line">    for i in range(ns):</span><br><span class="line">        for j in range(nb):</span><br><span class="line">            shift = -s[i] * (np.sin(bb[j])*xy[:, 0]+np.cos(bb[j])*xy[:, 1])</span><br><span class="line">            a[:, 0] = np.exp(-2j*np.pi*f0*shift)</span><br><span class="line">            p[i, j] = np.conjugate(a.T) @ c0 @ a</span><br><span class="line">    return b, s, p/n**2</span><br><span class="line"></span><br><span class="line"># ARF of the MUSIC beamformer.</span><br><span class="line">def arf_beam_music(c0, xy, f0=10, b0=90, s0=3.5e-3, b1=0, b2=360, nb=181, s1=1e-3, s2=5e-3, ns=81, ne=10):</span><br><span class="line">    n = xy.shape[0]</span><br><span class="line">    a = np.zeros((n, 1), dtype=complex)</span><br><span class="line">    b = np.linspace(b1, b2, nb)</span><br><span class="line">    bb = np.radians(b)</span><br><span class="line">    s = np.linspace(s1, s2, ns)</span><br><span class="line">    p = np.zeros((ns, nb), dtype=complex)</span><br><span class="line">    w, v = np.linalg.eigh(c0)</span><br><span class="line">    ve = v[:, :ne]</span><br><span class="line">    ne = ve @ np.conjugate(ve.T)</span><br><span class="line"></span><br><span class="line">    for i in range(ns):</span><br><span class="line">        for j in range(nb):</span><br><span class="line">            shift = -s[i] * (np.sin(bb[j])*xy[:, 0]+np.cos(bb[j])*xy[:, 1])</span><br><span class="line">            a[:, 0] = np.exp(-2j*np.pi*f0*shift)</span><br><span class="line">            p[i, j] = 1 / (np.conjugate(a.T) @ ne @ a)</span><br><span class="line">    return b, s, p / np.abs(p).max()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Number of receivers</span><br><span class="line">nr = 15</span><br><span class="line"># Aperture of the array</span><br><span class="line">r = 1e2</span><br><span class="line"># Randomly generating the Cartician coordinates</span><br><span class="line">xy = np.random.random((nr, 2)) * r</span><br><span class="line"># Frequency, back-azimuth and slowness of signal</span><br><span class="line">f0 = 5; b0 = 90; s0 = 3.5e-3</span><br><span class="line"># From degree to radian</span><br><span class="line">bb0 = np.radians(b0)</span><br><span class="line"># Fourier vector if signal</span><br><span class="line">u = np.zeros((nr, 1), dtype=complex)</span><br><span class="line">u[:, 0] = np.exp(-2j*np.pi*f0*s0*(-np.sin(bb0)*xy[:, 0]-np.cos(bb0)*xy[:, 1]))</span><br><span class="line"># Generating correlation matrix using u</span><br><span class="line">c0 = u @ np.conjugate(u.T)</span><br><span class="line">c0 /= np.abs(c0); c0[np.isnan(c0)] = 0.</span><br><span class="line"># Back-azimuth and slowness ranges of computing</span><br><span class="line">b1 = 0; b2 = 360; nb = 361</span><br><span class="line">s1 = 1e-3; s2 = 5e-3; ns = 81</span><br><span class="line"># Adding noise to the correlation matrix</span><br><span class="line">noiser = np.random.randn(nr, nr)</span><br><span class="line">noisei = np.random.randn(nr, nr)</span><br><span class="line">ratio = 1.25</span><br><span class="line">c0 = c0 + noiser * ratio + 1j * noisei * ratio</span><br><span class="line"># Computing the Bartlett beamformer</span><br><span class="line">b, s, p1 = arf_beam_barlett(c0, xy, f0=f0, b0=b0, s0=s0, b1=b1, b2=b2, nb=nb, s1=s1, s2=s2, ns=ns)</span><br><span class="line"># Computing the MUSIC beamformer.</span><br><span class="line">_, _, p2 = arf_beam_music(c0, xy, f0=f0, b0=b0, s0=s0, b1=b1, b2=b2, nb=nb, s1=s1, s2=s2, ns=ns, ne=nr-1)</span><br><span class="line"># Normalizing beam power</span><br><span class="line">p1 = np.abs(p1); p1 /= p1.max()</span><br><span class="line">p2 = np.abs(p2); p2 /= p2.max()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## Visualizing the beam power results.</span><br><span class="line"># Array configuration</span><br><span class="line">plt.figure(figsize=(12, 8))</span><br><span class="line">plt.subplot(221)</span><br><span class="line">plt.scatter(xy[:, 0], xy[:, 1], marker=&#x27;v&#x27;, s=100, edgecolor=&#x27;k&#x27;, alpha=0.5)</span><br><span class="line">plt.xlabel(&#x27;Easting (m)&#x27;, fontsize=14)</span><br><span class="line">plt.ylabel(&#x27;Northing (m)&#x27;, fontsize=14)</span><br><span class="line">plt.gca().tick_params(labelsize=12)</span><br><span class="line">plt.axis(&#x27;equal&#x27;)</span><br><span class="line">plt.grid(ls=&#x27;--&#x27;)</span><br><span class="line"></span><br><span class="line"># Comparing the accuracy</span><br><span class="line">sn = int((s0-s.min())/(s[1]-s[0])); dsn = 2</span><br><span class="line">pp1 = np.mean(p1[sn-dsn:sn+dsn], axis=0)</span><br><span class="line">pp2 = np.mean(p2[sn-dsn:sn+dsn], axis=0)</span><br><span class="line">pp1 /= pp1.max(); pp2 /= pp2.max()</span><br><span class="line">ax = plt.subplot(222, projection=&#x27;polar&#x27;)</span><br><span class="line">ax.plot(np.radians(b), pp1, &#x27;r&#x27;, label=&#x27;Bartlett&#x27;)</span><br><span class="line">ax.plot(np.radians(b), pp2, &#x27;b&#x27;, label=&#x27;MUSIC&#x27;)</span><br><span class="line">ax.plot([np.radians(b0), np.radians(b0)], [0, 1], &#x27;k--&#x27;, label=&#x27;True&#x27;)</span><br><span class="line">ax.legend(fontsize=11)</span><br><span class="line">ax.set_theta_zero_location(&#x27;N&#x27;)</span><br><span class="line">ax.set_theta_direction(-1)</span><br><span class="line">plt.gca().tick_params(labelsize=13)</span><br><span class="line"></span><br><span class="line"># Barlett beam power</span><br><span class="line">ax = plt.subplot(223, projection=&#x27;polar&#x27;)</span><br><span class="line">plt.pcolormesh(np.radians(b), s*1e3, p1, cmap=&#x27;gnuplot2_r&#x27;)</span><br><span class="line">cbar = plt.colorbar(shrink=0.8, pad=0.075)</span><br><span class="line">cbar.set_label(r&#x27;Barlett beam power&#x27;, fontsize=13)</span><br><span class="line">cbar.ax.tick_params(labelsize=11)</span><br><span class="line">ax.grid(color=&#x27;#333333&#x27;, ls=(10, (6, 5)), lw=0.5)</span><br><span class="line">ax.tick_params(axis=&#x27;y&#x27;, colors=&#x27;k&#x27;, labelsize=13)</span><br><span class="line">ax.set_theta_zero_location(&#x27;N&#x27;)</span><br><span class="line">ax.set_theta_direction(-1)</span><br><span class="line">ax.set_xlabel(&#x27;Slowness (s/km)&#x27;, fontsize=14)</span><br><span class="line">ax.tick_params(labelsize=13)</span><br><span class="line">ax.scatter(bb0, s0*1e3, marker=&#x27;o&#x27;, s=100, facecolor=&#x27;none&#x27;, edgecolor=&#x27;c&#x27;, lw=2)</span><br><span class="line"></span><br><span class="line"># MUSIC beam power</span><br><span class="line">ax = plt.subplot(224, projection=&#x27;polar&#x27;)</span><br><span class="line">plt.pcolormesh(np.radians(b), s*1e3, p2, cmap=&#x27;gnuplot2_r&#x27;)</span><br><span class="line">cbar = plt.colorbar(shrink=0.8, pad=0.075)</span><br><span class="line">cbar.set_label(r&#x27;MUSIC beam power&#x27;, fontsize=13)</span><br><span class="line">cbar.ax.tick_params(labelsize=11)</span><br><span class="line">ax.grid(color=&#x27;#333333&#x27;, ls=(10, (6, 5)), lw=0.5)</span><br><span class="line">ax.tick_params(axis=&#x27;y&#x27;, colors=&#x27;k&#x27;, labelsize=13)</span><br><span class="line">ax.set_theta_zero_location(&#x27;N&#x27;)</span><br><span class="line">ax.set_theta_direction(-1)</span><br><span class="line">ax.set_xlabel(&#x27;Slowness (s/km)&#x27;, fontsize=14)</span><br><span class="line">ax.tick_params(labelsize=13)</span><br><span class="line">ax.scatter(bb0, s0*1e3, marker=&#x27;o&#x27;, s=100, facecolor=&#x27;none&#x27;, edgecolor=&#x27;c&#x27;, lw=2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>参考文献：<br>Schmidt, R.O, “Multiple Emitter Location and Signal Parameter Estimation,” IEEE Trans. Antennas Propagation, Vol. AP-34 (March 1986), pp. 276–280.</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>Seismology</tag>
      </tags>
  </entry>
  <entry>
    <title>obspy去polezero类型仪器仪响应</title>
    <url>/obspy-paz.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;如果有polezero文件，那可以用attach_paz来读取。然后去仪器响应的脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> obspy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> obspy <span class="keyword">import</span> read</span><br><span class="line"><span class="keyword">from</span> obspy.io.sac <span class="keyword">import</span> attach_paz</span><br><span class="line"><span class="keyword">from</span> obspy.signal.invsim <span class="keyword">import</span> corn_freq_2_paz</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">fpath=<span class="string">&quot;/home/junxie/work/Snet/data/2016_08_16_01_00&quot;</span></span><br><span class="line">p=Path(fpath)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> p.rglob(<span class="string">&#x27;*VX*.SAC&#x27;</span>): <span class="comment">#循环读取文件</span></span><br><span class="line">    st=read(file, debug_headers=<span class="literal">True</span>)</span><br><span class="line">    tr=st[<span class="number">0</span>].copy()</span><br><span class="line">    aa=<span class="built_in">str</span>(file).split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    pz=<span class="built_in">str</span>(file)+<span class="string">&quot;_PZ&quot;</span> <span class="comment"># 这就是paz文件</span></span><br><span class="line">    attach_paz(tr,pz)  <span class="comment"># 贴到tr中</span></span><br><span class="line">    paz_1hz = corn_freq_2_paz(<span class="number">1.0</span>, damp=<span class="number">0.707</span>)  <span class="comment"># 1Hz instrument</span></span><br><span class="line">    paz_1hz[<span class="string">&#x27;sensitivity&#x27;</span>] = <span class="number">1.0</span></span><br><span class="line">    st.simulate(paz_simulate=paz_1hz) <span class="comment">#去仪器响应</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;如果没有的话找到零点、极点和放大系数，赋值到paz里面，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from obspy import read</span><br><span class="line">from obspy.signal.invsim import corn_freq_2_paz</span><br><span class="line">st = read()</span><br><span class="line">paz_sts2 = &#123;&#x27;poles&#x27;: [-0.037004+0.037016j, -0.037004-0.037016j,</span><br><span class="line">                      -251.33+0j,</span><br><span class="line">                      -131.04-467.29j, -131.04+467.29j],</span><br><span class="line">            &#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">            &#x27;gain&#x27;: 60077000.0,</span><br><span class="line">            &#x27;sensitivity&#x27;: 2516778400.0&#125;</span><br><span class="line">paz_1hz = corn_freq_2_paz(1.0, damp=0.707)</span><br><span class="line">st.simulate(paz_remove=paz_sts2, paz_simulate=paz_1hz)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>seismology</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（十九）</title>
    <url>/paper-reading-19.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>海沟地震和海啸观测网（S-net）是一种新颖的海底观测站网络，覆盖了日本东北部外海的广阔区域。为了充分利用S-net数据，我们估计了所有150个S-net站点的传感器方向，因为没有这些信息，就无法确定测量在地理坐标中的方位。我们确定了每个站点传感器方向的三个参数：电缆长轴的倾斜角度、围绕长轴的旋转角度和长轴的方位角。我们使用记录重力加速度的加速度计的直流分量来估计倾斜和旋转角度。除了2016年8月20日Mw 6.0三陆海沟地震和2016年11月20日Mw 6.9福岛地震造成的旋转角度大于1°的余震步变外，大多数站点在2016年至2018年期间的倾斜和旋转角度都在0.001°至0.1°的范围内略有变化。我们通过长周期瑞利波的质点运动估计了长轴的方位角。我们使用了7至14个远震事件（Mw 7.0-8.2）在0.01-0.03 Hz的加速度计记录。方位角被限制在95%置信区间的±3°-12°内。在根据估计的传感器方向校正原始波形后，我们确认了整个S-net站点内的相干波形，以及径向和横向分量中瑞利波和洛夫波的分离。波形也与陆地上的宽频带站点相干。我们提供了估计的传感器方向和转换矩阵，用于从XYZ坐标转换为东西向上（ENU）分量。估计的方向可以作为基于S-net数据进一步进行地震和地壳探测的基础资源。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>提高地震和海啸预警的准确性</strong>：通过精确的海底观测，可以更好地理解地震和海啸的产生机制，从而提高预警系统的准确性。</li>
<li><strong>增进对地壳和地幔结构的理解</strong>：海底地震观测提供了直接测量地壳和地幔结构的手段，有助于揭示地球内部的动力学过程。</li>
<li><strong>支持灾害风险评估和管理</strong>：准确的地震和海啸数据对于评估灾害风险、制定减灾策略和提高公共安全至关重要。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li><p><strong>前人研究</strong>：</p>
<ul>
<li>S-net的部署和初步观测结果（Kanazawa et al., 2016; Mochizuki et al., 2016; Uehira et al., 2016）。</li>
<li>利用S-net数据进行地震定位和震源机制研究（Nakamura and Hayashimoto, 2019）。</li>
</ul>
</li>
<li><p><strong>研究不足</strong>：</p>
<ul>
<li>传感器方向的不确定性限制了数据的精确分析和解释。</li>
<li>缺乏对传感器方向变化的长期监测和校正。</li>
</ul>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：S-net的加速度计记录，包括强震传感器和高灵敏度加速度计的数据。</li>
<li><strong>方法</strong>：<ul>
<li>使用加速度计的直流分量估计倾斜和旋转角度。</li>
<li>利用长周期瑞利波的粒子运动估计传感器的方位角。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li>确定了所有150个S-net站点的传感器方向。</li>
<li>发现倾斜和旋转角度在大多数站点在2016年至2018年期间相对稳定。</li>
<li>通过校正波形，确认了S-net站点内的波形相干性和与陆地宽频带站点的一致性。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>创新之处</strong>：首次系统地估计了S-net所有站点的传感器方向，为精确的地震和地壳数据分析提供了基础。</li>
<li><strong>贡献</strong>：提供了传感器方向的估计值和转换矩阵，这些信息对于未来的地震学和地壳探测研究具有重要价值。</li>
</ul>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li>数据分析可能受到传感器安装和海底环境变化的影响。</li>
<li>需要进一步验证传感器方向估计的长期稳定性和准确性。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>如何下载Fnet的台站列表</title>
    <url>/how-to-download-fnet-station-list.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;这里其实是一个网页抓取的工作。Fnet台站列表网址是<a href="https://www.fnet.bosai.go.jp/st_info/?LANG=en%E3%80%82%E9%82%A3%E4%B9%88%E4%B8%8B%E8%BD%BD%E5%85%B6%E5%88%97%E8%A1%A8%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9A%84python%E8%84%9A%E6%9C%AC%E5%A6%82%E4%B8%8B%EF%BC%9A">https://www.fnet.bosai.go.jp/st_info/?LANG=en。那么下载其列表并保存到本地的python脚本如下：</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">import requests</span><br><span class="line">url = &#x27;https://www.fnet.bosai.go.jp/st_info/?LANG=en&#x27;</span><br><span class="line">response = requests.get(url)</span><br><span class="line">print(response.content)</span><br><span class="line">dfs = pd.read_html(response.content)</span><br><span class="line">if len(dfs) &gt; 0:</span><br><span class="line">    df = dfs[2]</span><br><span class="line">    df.to_csv(&#x27;fnet_station.csv&#x27;,index=False)</span><br><span class="line">    print(&quot;表格已保存为 fent_station.csv 文件。&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;未找到表格。&quot;)</span><br></pre></td></tr></table></figure>
<p>注意到保存下来的是第三个表dfs[2]。事实上该网页有多个表，如果抓取其他网站信息的时候需要打印出dfs，自己判断。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（二十）</title>
    <url>/paper-reading-20.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要翻译"><a href="#摘要翻译" class="headerlink" title="摘要翻译"></a>摘要翻译</h3><p>测量深海温度变化对于理解地球系统如何应对气候变化至关重要。在这项工作中，我们提出了一种方法，利用声学传播的被动估计来测量局部（约3公里）空间尺度上的深度平均深海温度。这些深海温度的被动声学估计可以与现有的和未来的被动声学监测基础设施一起使用，为海洋提供补充观测，尤其是在海洋观测覆盖不足的区域。利用8年的环境声数据，我们展示了被动估计与全球海洋模型和ARGO浮标测量的一致性。与HYCOM海洋模型的均方根差为0.13°C，与ARGO测量的均方根差为0.086°C。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>气候变化监测</strong>：深海温度是气候变化的关键指标，对预测未来气候变化模式至关重要。</li>
<li><strong>海洋生态系统影响</strong>：深海温度的变化影响海洋生态系统的健康和生物多样性。</li>
<li><strong>海洋洋流和循环</strong>：深海温度数据对于理解海洋环流和热量传输至关重要。</li>
</ol>
<h3 id="前人相关研究及其不足"><a href="#前人相关研究及其不足" class="headerlink" title="前人相关研究及其不足"></a>前人相关研究及其不足</h3><ul>
<li>**Bensen et al. (2007)*<em>：利用环境噪声数据获得可靠的宽带表面波色散测量。</em>不足*：可能没有充分考虑海洋环境的复杂性。</li>
<li>**Brooks &amp; Gerstoft (2009)*<em>：在热带风暴期间从20-100 Hz噪声的交叉相关中近似格林函数。</em>不足*：研究可能受限于特定环境条件。</li>
<li>**Woolfe &amp; Sabra (2015)*<em>：使用深海环境噪声监测温度变化。</em>不足*：可能缺乏长期和大规模的数据支持。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：使用了8年的OOI环境声数据，由两个海底水听器记录。</li>
<li><strong>方法</strong>：利用环境噪声干涉测量技术估计声学格林函数，通过分析声波传播时间来估计深度平均水温。</li>
</ul>
<h3 id="获得的结果"><a href="#获得的结果" class="headerlink" title="获得的结果"></a>获得的结果</h3><ul>
<li>与HYCOM海洋模型的均方根差为0.13°C。</li>
<li>与ARGO浮标测量的均方根差为0.086°C。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ul>
<li><strong>创新之处</strong>：首次在深海环境中使用被动声学监测技术来测量局部积分温度。</li>
<li><strong>贡献</strong>：提供了一种新的深海温度监测方法，可以补充现有的观测手段，特别是在观测覆盖不足的区域。</li>
</ul>
<h3 id="本文的不足"><a href="#本文的不足" class="headerlink" title="本文的不足"></a>本文的不足</h3><ul>
<li><strong>数据范围</strong>：研究仅限于特定的海洋区域，可能需要更广泛的数据来验证方法的普适性。</li>
<li><strong>环境因素</strong>：可能未充分考虑所有可能影响声波传播的环境因素，如海底地形变化。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（二十一）</title>
    <url>/paper-reading-21.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要翻译"><a href="#摘要翻译" class="headerlink" title="摘要翻译"></a>摘要翻译</h3><p>第一类地脉动是地球上研究较少的地震背景振动。证据表明，这些振动的来源是由海洋重力波与海底地形耦合引起的。因此，这些来源应该位于小于海洋波长的水深处。利用最先进的海浪模型，我们进行了首次全球规模的初级微震垂直分量功率谱密度的地震建模。我们的建模使我们能够推断，在南半球观测到的初级微震的弱季节性与源的弱局部季节性相对应。此外，对主要贡献于每个台站的源区域的系统分析揭示，北大西洋东西两侧的台站对频率依赖的源区域都很敏感。在低频（即0.05赫兹）下，主要的源区域可能位于距离台站数千公里之外。这一观察表明，在最近的海岸识别初级微震的源区域可能会产生误导。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>了解地球的自然振动</strong>：初级微震是理解地球内部动力学和海洋与地壳相互作用的重要途径。</li>
<li><strong>环境监测</strong>：微震活动与海洋活动紧密相关，可用于监测气候变化和海啸等自然灾害。</li>
<li><strong>地震学研究</strong>：微震的研究有助于改进地震波传播理论，提高地震预测的准确性。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ol>
<li>**Hasselmann (1963)**：首次提出了海洋重力波与海底地形相互作用产生微震的理论。</li>
<li>**Haubrich et al. (1963)**：通过比较微震和涌浪的频谱，确定了近岸区域的微震源。</li>
<li>**Juretzek &amp; Hadziioannou (2016, 2017)**：使用波束形成分析推断了初级微震频率带中瑞利波和勒夫波的源位置。</li>
</ol>
<p><strong>不足</strong>：</p>
<ul>
<li>这些研究主要集中在局部区域，缺乏全球尺度的系统分析。</li>
<li>对于微震源的季节性变化和频率依赖性研究不足。</li>
<li>缺乏对远离台站的源区域的深入研究。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：使用Geoscope网络的24个地震台站在2013年记录的连续地震数据。</li>
<li><strong>方法</strong>：采用最先进的海洋波模型WAVEWATCH III进行全球规模的地震建模。</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li>确定了全球初级微震的源区域。</li>
<li>发现南半球初级微震的弱季节性与源的弱季节性相对应。</li>
<li>揭示了北大西洋东西两侧台站对频率依赖的源区域的敏感性。</li>
</ul>
<h3 id="本文创新之处和贡献"><a href="#本文创新之处和贡献" class="headerlink" title="本文创新之处和贡献"></a>本文创新之处和贡献</h3><ol>
<li><strong>全球规模建模</strong>：首次进行全球规模的初级微震建模。</li>
<li><strong>季节性分析</strong>：提供了南半球微震季节性变化的新见解。</li>
<li><strong>频率依赖性研究</strong>：揭示了低频下微震源区域的远程特性。</li>
</ol>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li><strong>模型简化</strong>：在模型中未考虑局部场地效应和三维传播效应。</li>
<li><strong>数据限制</strong>：研究基于2013年的数据，可能需要更多年份的数据来验证模型的稳定性。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>高效bash脚本</title>
    <url>/efficient-shell-script.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="build-in-commands"><a href="#build-in-commands" class="headerlink" title="build-in commands"></a>build-in commands</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$var</span>&quot;</span> -eq 3 ]];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h1 id="minimize-subshells"><a href="#minimize-subshells" class="headerlink" title="minimize subshells"></a>minimize subshells</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">output=$(&lt;input.txt)</span><br></pre></td></tr></table></figure>

<h1 id="array"><a href="#array" class="headerlink" title="array"></a>array</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">color=(<span class="string">&quot;red&quot;</span> <span class="string">&quot;yellow&quot;</span> <span class="string">&quot;blue&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;color[@]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$col</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h1 id="enable-noclobber"><a href="#enable-noclobber" class="headerlink" title="enable noclobber"></a>enable noclobber</h1><p>可以防止overwrite。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set -o noclobber</span><br></pre></td></tr></table></figure>

<h1 id="file-operation"><a href="#file-operation" class="headerlink" title="file operation"></a>file operation</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while IFS= read -f line</span><br><span class="line">do</span><br><span class="line">echo $line</span><br><span class="line">done &lt;input.txt</span><br></pre></td></tr></table></figure>

<h1 id="parallel-processing"><a href="#parallel-processing" class="headerlink" title="parallel processing"></a>parallel processing</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat urls.txt | xargs -n 1 -P 4 curl -O</span><br></pre></td></tr></table></figure>

<h1 id="error-handling"><a href="#error-handling" class="headerlink" title="error handling"></a>error handling</h1><p>脚本一出错就退出来。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set -e</span><br></pre></td></tr></table></figure>
<p>个性化出错信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">command || &#123; echo &quot;command failded&quot;; exit 1; &#125;</span><br></pre></td></tr></table></figure>
<p>trap signals </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">trap &#x27;echo &quot;error occurred&quot;; cleanup; exit1&#x27; ERR</span><br><span class="line">function cleanup()&#123;</span><br><span class="line">   #clean up command</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>validate inputs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if [[ -z &quot;$1&quot; ]];then</span><br><span class="line">   echo &quot;Usage: $0 &lt;argument&gt;&quot;</span><br><span class="line">   exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>logging</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logfile=&quot;script.log&quot;</span><br><span class="line">exec &gt; &gt;(tee -i $logfile)</span><br><span class="line">exec 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">echo &quot;script started&quot;</span><br></pre></td></tr></table></figure>

<h1 id="系统任务"><a href="#系统任务" class="headerlink" title="系统任务"></a>系统任务</h1><p>系统备份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set -e</span><br><span class="line">trap &#x27; echo &quot;Backup failed&quot;; exit 1&#x27; ERR</span><br><span class="line">bk_up=&quot;/bak_dir&quot;</span><br><span class="line">ts=$(date +%Y%m%d%H%M%S)</span><br><span class="line">bkup_file=&quot;$&#123;bk_up&#125;/backup_$&#123;ts&#125;.tar.gz&quot;</span><br><span class="line">tar czf &quot;$bkup_file&quot; backup_files</span><br></pre></td></tr></table></figure>
<p>系统监测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">threshold=80</span><br><span class="line">partition=&quot;/dev/sda1&quot;</span><br><span class="line">usage=$(df -h | grep &quot;$partition&quot; | awk &#x27;&#123;print $5&#125;&#x27; | sed &#x27;s/%//&#x27;)</span><br><span class="line">if [[ &quot;$usage&quot; -gt &quot;$threshold&quot; ]];then</span><br><span class="line">   echo &quot;disk usage of $partition is above $threshold%&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>用户管理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function add_user() &#123;</span><br><span class="line">    local username=$1</span><br><span class="line">    useradd &quot;$username&quot; &amp;&amp; echo &quot;User $username added successfully.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function remove_user() &#123;</span><br><span class="line">&#125;</span><br><span class="line">case $1 in </span><br><span class="line">    add)</span><br><span class="line">       add_user &quot;$2&quot;</span><br><span class="line">       ;;</span><br><span class="line">    remove)</span><br><span class="line">       remove_user &quot;$2&quot;</span><br><span class="line">       ;;</span><br><span class="line">    *)</span><br><span class="line">       echo &quot;Usage : $0 &#123;add|remove&#125; &lt;username&gt;&quot;</span><br><span class="line">       exit 1</span><br><span class="line">       ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<p>自动更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set -e</span><br><span class="line">trap &#x27;echo &quot;update failed&quot;; exit 1 &#x27; ERR</span><br><span class="line"></span><br><span class="line">apt-get update &amp;&amp; apt-get upgrade -y</span><br></pre></td></tr></table></figure>
<p>网络配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function configure_network()&#123;</span><br><span class="line">     local interface=$1</span><br><span class="line">     local ip_address=$$2</span><br><span class="line">     local gateway=$3</span><br><span class="line">     </span><br><span class="line">     cat &lt;&lt;EOF &gt;/etc/network/interfaces</span><br><span class="line">auto $interface</span><br><span class="line">iface $interface inet static</span><br><span class="line">     address $ip_address</span><br><span class="line">     gateway $gateway</span><br><span class="line">EOF</span><br><span class="line">     systemctl restart networking</span><br><span class="line">     echo &quot;network configured on $interface&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读（二十二）</title>
    <url>/paper-reading-22.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要翻译"><a href="#摘要翻译" class="headerlink" title="摘要翻译"></a>摘要翻译</h3><p>&emsp;&emsp;本文研究了南极和格陵兰岛的冰架在形成冰山前的崩解过程。目前，冰盖模型面临的一个主要问题是缺乏基于物理的冰架崩解法则。冰架与海湾壁或海底高地的摩擦提供了冰盖流动的阻力；这种阻力的减少会导致冰盖流动加速，进而导致海平面上升。冰架的长度增加会增加侧摩擦和遇到海底高地的概率，而这些无法在没有崩解法则的情况下计算。我们假设沿流冰架的扩展是控制崩解的主要因素。为了验证这一假设，我们收集了不同冰架的新数据和已发表的数据（表S1），选择这些数据是为了代表性而非全面性。除了一些壮观的例子外，崩解通量远大于长度变化。因此，冰架前端的速度大致等于崩解通量（c），而沿流速度梯度给出了适当的扩展速率（e˙）。所有数据都避开了剪切边缘，主要位于中心线附近。结果与我们的假设一致。最佳幂律拟合为 c &#x3D; 15,000e˙0.43 m&#x2F;year，解释了91%的方差（对数-对数空间中的线性回归为62%）；使用 c &#x3D; 12,000 e˙0.33 表示对扩展应力的线性依赖，解释了88%的方差（对数-对数为43%）。残差表明较窄的冰架崩解速度较慢。侧向剪切将裂缝开启应力从崩解前沿旋转开来，同时有利于较小的冰山和容易愈合的剪切裂缝。模型 c &#x3D; 0.039(e˙w)1.9 m&#x2F;year（半宽w以米为单位）解释了超过95%的方差（对数-对数空间中为92%）。崩解率与厚度H相关，但幂律拟合 c(H) 仅解释了69%的方差（对数-对数为84%）；涉及 c(e˙) 和 c(e˙w) 的拟合残差与H没有强相关性。尽管如此，扩展应力随H增加，人们可能会预期断裂，因此崩解，取决于变形工作完成的速率，因此与 e˙H 成正比。包括 (e˙wH) 的最佳拟合幂律为 c &#x3D; 0.022(e˙wH)0.98 m&#x2F;year；图1显示了通过原点的线性拟合 c &#x3D; 0.016 e˙wH m&#x2F;year，每个解释了89%的方差（对数-对数为93%）（SOM文本）。数据不允许在这些或其他可能的关系中进行选择，但后者是物理上有动机的并且简单。c随e˙增加的一个含义是，几乎所有未受支撑的冰架都将无条件不稳定，因为厚度（因此扩展速率）在流动方向上减小，但速度增加；崩解事件将冰架前沿移入更厚、更快扩展、因此更快崩解的冰中，这些冰供应得更慢。数值实验表明适当的支撑可以稳定冰架。这与观察结果一致：从足够快的输入足够薄（因此扩展缓慢）的冰中可以形成极长的“冰舌”，冰架通常观察到在支撑点附近终止，失去支撑后冰架迅速缩小。尽管我们没有学到完整的崩解法则，但我们建议，从冰架的相互比较中得出的关系可能比以往任何时候都更令人鼓舞，因此值得进一步测试，并在冰流模型中谨慎实施。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>海平面上升</strong>：冰架崩解是全球海平面变化的关键因素，了解其机制对于预测未来海平面变化至关重要。</li>
<li><strong>气候变化研究</strong>：冰架崩解与气候变化紧密相关，研究崩解过程有助于理解全球气候变化的影响。</li>
<li><strong>冰盖稳定性</strong>：了解冰架崩解机制对于评估冰盖稳定性和长期存续性至关重要。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li>**Meier (1990)**：在《Sea-Level Change》中讨论了冰架崩解对海平面变化的影响，但未提出基于物理的崩解法则。</li>
<li>**Dupont &amp; Alley (2005)**：研究了冰架流动与崩解的关系，但未全面解释崩解过程的物理机制。</li>
<li><strong>不足</strong>：缺乏一个全面的、基于物理的崩解法则，无法准确预测冰架崩解对海平面变化的影响。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：收集了不同冰架的新数据和已发表的数据（表S1），包括冰架的厚度、半宽、速度等。</li>
<li><strong>方法</strong>：通过最佳幂律拟合和线性回归分析，研究冰架崩解通量与冰架扩展速率之间的关系。</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li><strong>结果</strong>：发现冰架崩解通量与冰架扩展速率的0.43次幂成正比，解释了91%的方差；冰架崩解率与冰架厚度、半宽和应变率的乘积成正比，解释了89%的方差。</li>
</ul>
<h3 id="本文创新之处及贡献"><a href="#本文创新之处及贡献" class="headerlink" title="本文创新之处及贡献"></a>本文创新之处及贡献</h3><ol>
<li><strong>创新</strong>：提出了一个基于物理的冰架崩解法则，即冰架崩解通量与冰架扩展速率的幂律关系。</li>
<li><strong>贡献</strong>：为冰流模型提供了一个可能的崩解法则，有助于更准确地预测冰架崩解对海平面变化的影响。</li>
</ol>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li><strong>数据限制</strong>：数据集并非全面，可能影响结果的普适性。</li>
<li><strong>模型简化</strong>：模型假设沿流冰架扩展是控制崩解的主要因素，可能忽略了其他影响因素。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(23)</title>
    <url>/paper-reading-23.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要翻译"><a href="#摘要翻译" class="headerlink" title="摘要翻译"></a>摘要翻译</h3><p><strong>冰川崩解样式和模式的季节性周期的驱动因素</strong></p>
<p>&emsp;&emsp;崩解是格陵兰冰盖质量损失的关键过程。此外，由于观测不足，崩解在当前冰川流动模型和预测中造成了巨大的不确定性。在这里，我们通过使用高分辨率的地面雷达干涉仪（TRI）数据、6年的连续日和小时时间序列图像以及在两次实地活动中记录的10秒时间序列图像，来研究崩解事件的频率、体积和样式。结果表明，Eqip Sermia的崩解前沿，这是一个快速流动、高度裂缝化的西格陵兰出口冰川，呈现出明显的季节性周期，并在亚冰川排放羽流、浅床地形和冰前冰混杂物的存在和退却期间显示出独特的模式。崩解事件的体积、频率和样式随季节循环的状态变化而强烈变化。在具有不同床面地形、水深和崩解前沿坡度的三个不同前沿扇区之间观察到显著的空间差异。在冰混杂物消失和峡湾表面附近的融水羽流变得可见的同时，早期融季的崩解活动显著增加。在浅水区域观察到前沿的减少后退，而在亚冰川融水羽流的位置观察到加速后退。随着这些羽流在融季初的出现，可能由于前沿的削弱而发生了更大的全厚度崩解事件。后来在融季，亚冰川融水羽流处的崩解活动与邻近区域相似，表明羽流的存在对崩解变得不那么重要。结果强调了亚冰川排放和床面地形对前沿几何形状、崩解过程的时间变化性以及崩解样式的变异性的重要性。</p>
<h3 id="第一作者介绍"><a href="#第一作者介绍" class="headerlink" title="第一作者介绍"></a>第一作者介绍</h3><ul>
<li><strong>姓名</strong>：Andrea Kneib-Walter</li>
<li><strong>工作单位</strong>：苏黎世大学地理系冰川学和地貌动力学组，瑞士苏黎世；苏黎世联邦理工学院水文学、冰川学和水力学实验室，瑞士苏黎世。</li>
<li><strong>其他工作</strong>：Andrea Kneib-Walter在冰川学领域有着丰富的研究经验，特别是在冰川崩解、冰川动力学和冰盖变化等方面。她的工作涉及到使用地面雷达干涉仪（TRI）和其他遥感技术来监测和分析冰川前沿的变化。</li>
</ul>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>海平面上升</strong>：冰川崩解对海平面上升有直接影响，特别是在全球变暖的背景下，这一过程加速了冰盖质量的损失。</li>
<li><strong>气候变化反馈机制</strong>：冰川崩解与气候变化之间的相互作用是理解全球气候变化反馈机制的关键。</li>
<li><strong>冰川动力学模型</strong>：准确的冰川崩解模型对于预测未来冰川变化和海平面上升至关重要。</li>
</ol>
<h3 id="前人研究及不足"><a href="#前人研究及不足" class="headerlink" title="前人研究及不足"></a>前人研究及不足</h3><ul>
<li>**Joughin et al. (2004)**：研究了格陵兰Jakobshavn Isbræ冰川的快速变化，但未能详细解释崩解过程的物理机制。</li>
<li>**Nick et al. (2009)**：发现格陵兰出口冰川的大规模变化是由冰川末端触发的，但缺乏对崩解过程的直接观测。</li>
<li><strong>不足</strong>：大多数研究依赖于时间平均的崩解率，而不是观察单个崩解事件和研究崩解的时间和空间变化。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：<ul>
<li>高分辨率地面雷达干涉仪（TRI）数据。</li>
<li>6年的连续日和小时时间序列图像。</li>
<li>两次实地活动中记录的10秒时间序列图像。</li>
</ul>
</li>
<li><strong>方法</strong>：<ul>
<li>使用TRI数据通过计算得到的高程模型差异来获取崩解事件的体积目录。</li>
<li>连续的时间序列图像用于解释TRI派生崩解事件在季节循环中的不同模式。</li>
<li>10秒时间序列图像用作验证数据，并提供崩解类型的信息。</li>
</ul>
</li>
</ul>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ul>
<li><strong>结果</strong>：<ul>
<li>Eqip Sermia冰川的崩解模式和样式因冰川前沿的不同几何形状而异，并在一年中强烈变化。</li>
<li>冰川前沿的时间和空间演变受床和峡湾地形以及融水羽流的出现控制。</li>
<li>短期气温或潮汐变化似乎对崩解活动没有直接影响。</li>
</ul>
</li>
</ul>
<h3 id="本文创新之处及贡献"><a href="#本文创新之处及贡献" class="headerlink" title="本文创新之处及贡献"></a>本文创新之处及贡献</h3><ol>
<li><strong>创新</strong>：结合了高分辨率TRI数据和连续时间序列图像，提供了冰川崩解事件的详细分析。</li>
<li><strong>贡献</strong>：强调了亚冰川排放和床面地形对冰川前沿几何形状、崩解过程的时间变化性以及崩解样式变异性的重要性。</li>
</ol>
<h3 id="本文不足"><a href="#本文不足" class="headerlink" title="本文不足"></a>本文不足</h3><ul>
<li><strong>数据限制</strong>：研究仅限于Eqip Sermia冰川，可能无法直接推广到其他冰川。</li>
<li><strong>方法限制</strong>：TRI和其他遥感技术可能无法捕捉到所有小型崩解事件，且对天气条件有一定依赖。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(24)</title>
    <url>/paper-reading-24.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要翻译"><a href="#摘要翻译" class="headerlink" title="摘要翻译"></a>摘要翻译</h3><p>地震源和波传播研究有助于理解冰川及其周围环境中的结构、传输、断裂力学、质量平衡等过程。由冰川生成的地震波与地球主体耦合良好，能够被地震仪在从局部到全球的范围内记录。尽管活跃冰川的断裂、消融、融化以及&#x2F;或者高度不规则的环境可能极为不稳定和危险，但在稳定的近冰或岩石地点通常可以进行有信息量的地震测量。地震学还有助于新兴的研究领域，即大气、海洋、固体地球和冰冻圈之间的弹性波和重力波耦合。最近科学和技术的进步已经促成了冰川学和地震学之间的合作，这些合作涵盖了广泛的尺度和过程。这包括对冰冻圈系统对气候变化和其他环境条件响应的深入了解。在这里，我们回顾了相关的基础物理和冰川学知识，并提供了对冰川地震学当前状态及其快速发展的未来方向的广泛回顾。</p>
<h3 id="第一作者信息"><a href="#第一作者信息" class="headerlink" title="第一作者信息"></a>第一作者信息</h3><ul>
<li><strong>姓名</strong>：Richard C. Aster</li>
<li><strong>工作单位</strong>：美国科罗拉多州立大学地球科学系和华纳自然资源学院</li>
<li><strong>教育背景</strong>：1991年在斯克里普斯海洋学研究所获得博士学位</li>
<li><strong>其他工作</strong>：Aster教授曾在南极洲、西南极洲的多个地点、埃里伯斯火山和南极点进行过多个赛季的现场项目。</li>
</ul>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><strong>冰冻圈变化监测</strong>：冰川地震学提供了一种监测冰冻圈变化的手段，这对于理解全球气候变化和海平面上升至关重要。</li>
<li><strong>环境变化响应</strong>：通过研究冰川地震活动，可以更好地理解冰冻圈系统对气候变化的响应。</li>
<li><strong>灾害预警</strong>：冰川地震学有助于预测冰川崩解等自然灾害，对灾害预防和减灾具有重要意义。</li>
</ol>
<h3 id="相关研究的主要方向"><a href="#相关研究的主要方向" class="headerlink" title="相关研究的主要方向"></a>相关研究的主要方向</h3><ol>
<li><strong>冰川内部结构和动力学</strong>：研究冰川内部结构和动力学过程，如冰川流动、断裂和变形。</li>
<li><strong>冰川与地球的耦合</strong>：研究冰川产生的地震波与地球主体的耦合机制。</li>
<li><strong>冰川地震波的传播和记录</strong>：研究冰川地震波在地球中的传播特性和记录技术。</li>
<li><strong>冰川对气候变化的响应</strong>：研究冰川如何响应气候变化和其他环境条件。</li>
</ol>
<h3 id="对应主要研究内容"><a href="#对应主要研究内容" class="headerlink" title="对应主要研究内容"></a>对应主要研究内容</h3><ol>
<li><strong>冰川地震波的产生机制</strong>：研究冰川地震波的产生和传播，包括冰川流动、断裂和冰山崩解等过程。</li>
<li><strong>冰川地震学与地球物理的交叉</strong>：利用地震学方法研究冰川的物理特性，如冰川的密度、粘度和弹性模量。</li>
<li><strong>冰川变化的长期监测</strong>：通过地震学数据监测冰川的长期变化，包括冰川厚度、速度和表面高度的变化。</li>
</ol>
<h3 id="研究趋势"><a href="#研究趋势" class="headerlink" title="研究趋势"></a>研究趋势</h3><ol>
<li><strong>多学科融合</strong>：冰川地震学是一个多学科交叉领域，涉及地球物理学、冰川学、气候学等多个学科。</li>
<li><strong>技术进步</strong>：随着地震学仪器和技术的进步，对冰川的监测和研究变得更加精确和全面。</li>
<li><strong>全球变化监测</strong>：随着全球气候变化的加剧，对冰川变化的监测和研究需求日益增加。</li>
</ol>
<h3 id="研究重点和难题"><a href="#研究重点和难题" class="headerlink" title="研究重点和难题"></a>研究重点和难题</h3><ol>
<li><strong>冰川内部结构的精确成像</strong>：精确地成像冰川内部结构仍然是一个挑战，需要更先进的技术和方法。</li>
<li><strong>冰川动力学的全面理解</strong>：全面理解冰川动力学过程，包括冰川流动、断裂和变形机制。</li>
<li><strong>气候变化对冰川的影响</strong>：研究气候变化如何影响冰川的稳定性和动态，以及这些变化对海平面上升的潜在影响。</li>
<li><strong>数据采集和分析</strong>：在极端环境下进行长期、高质量的地震数据采集和分析仍然是一个挑战。</li>
</ol>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次找回Linux启动项的经历</title>
    <url>/find-linux-back.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我的笔记本是Windows10和Fedora40的双系统。平时都在Fedora下面干活，因此给windows的C盘分配了120G。然而Linux下面对于word的支持不太行，因此也需要在windows下面处理文档。谁知最近空间告急，磁盘标志频频翻红。眼看window就没办法再用了。</p>
<p>&emsp;&emsp;于是在网上搜索怎么清理C盘，结果尝试了大量的网上和Kimi的方法，发现：C盘里除了回收站和浏览器的缓存几乎不可能再干净了。估计是之前也尝试过了。</p>
<p>&emsp;&emsp;然后我想到好像可以压缩一下D盘，然后分一些给C。于是准备开始压缩。D盘近700G，只用了300G左右，里面除了重要数据和文件还有我当时为了减小C盘将默认安装到C盘的程序安装到D盘的文件。我打开了磁盘管理工具，尝试压缩，结果D盘只能压1.7G。震惊了。那是有多乱啊，让系统优化整理吧。一套连招下来，D盘还是只能压缩1.7G。</p>
<p>&emsp;&emsp;Kimi也来帮忙解决问题，按照它给的方法，还是没啥用。不过Kimi会搜索啊，他建议用外部软件啊。我找到了傲梅分区助手。下载下来安装好。压缩空间、合并、清理等按钮很清晰。那就压缩、合并。</p>
<p>&emsp;&emsp;来回捣腾，C盘成了320G，D盘500G。然后重启，欸！我的Linux呢？直接当看不见了啊。这我熟啊，以前也就重装呗。这次问问Kimi吧，kimi告诉说要这样这样。问问豆包，豆包说要这样这样。</p>
<p>&emsp;&emsp;有点麻烦啊。不过kimi说实在不行就整第三方软件呗，推荐easyuefi。</p>
<p>&emsp;&emsp;这个也不得了，就两个按钮。一点就出来了。把Fedora放到第一位。重启。搞定。</p>
<p>&emsp;&emsp;AI真的好方便。以前要解决这些问题得在网上使劲搜，关键字不准还搜不出来。现在kimi啥的帮你搜索，整理，效率有三层楼那么高啊。另外现在的程序都好用到爆。按钮字大到恨不得占满屏幕，功能简单到你一点击啥都解决了。</p>
<p>&emsp;&emsp;这些工具真的提高了完成一个工作的效率，重点还是要清楚你自己要干什么，然而在提高效率的同时也可能让人懈怠。总是依赖工具，那就麻烦了。</p>
<p>&emsp;&emsp;咋突然让我想到了钢铁侠，脱去那个战衣，你还是啥？</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在自己电脑中部署deepseek</title>
    <url>/how-to-install-deepseek.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Windows下deepseek部署"><a href="#Windows下deepseek部署" class="headerlink" title="Windows下deepseek部署"></a>Windows下deepseek部署</h1><p>&emsp;&emsp;首先是在windows下下载<a href="https://ollama.com/download">ollama</a>并安装。然后在cmd下运行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:7b</span><br></pre></td></tr></table></figure>
<p>其实安装时输入deepseek-r1默认就是7b，大小有4.7G。当然还有其他的版本，自己去搜索并根据自己的GPU大小进行安装。<br>安装完之后出现了</p>
<p>“&gt;&gt;&gt;”</p>
<p>就可以对话了。下次要调用就在cmd中重新运行命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1</span><br></pre></td></tr></table></figure>

<h1 id="Linux下deepseek部署"><a href="#Linux下deepseek部署" class="headerlink" title="Linux下deepseek部署"></a>Linux下deepseek部署</h1><p>&emsp;&emsp;在Linux下面则这样安装ollama，命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://ollama.com/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>这个命令是从github下载ollama进行安装。得保证你能连接到github。接下来安装deepseek:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:7b</span><br></pre></td></tr></table></figure>

<h1 id="deepseek与zotero结合"><a href="#deepseek与zotero结合" class="headerlink" title="deepseek与zotero结合"></a>deepseek与zotero结合</h1><p>deepseek可以和zotero结合进行本地的文献阅读。<br>这个时候就要安装awsome GPT，位置在<a href="https://zotero-chinese.com/plugins/">zotero中文社区</a>。配置可以参考<a href="https://zhuanlan.zhihu.com/p/20850142386">这里</a>。我尝试了一下，没有搞定。有机会再整。</p>
<h1 id="图像生成大模型Janus-Pro-7B本地部署"><a href="#图像生成大模型Janus-Pro-7B本地部署" class="headerlink" title="图像生成大模型Janus-Pro-7B本地部署"></a>图像生成大模型Janus-Pro-7B本地部署</h1><p>&emsp;&emsp;另外DeepSeek发布的多模态大模型Janus-Pro-7B支持图像生成，也可以<a href="https://www.upx8.com/4681">本地部署</a>，超厉害。</p>
<h2 id="安装Git和conda"><a href="#安装Git和conda" class="headerlink" title="安装Git和conda"></a>安装Git和conda</h2><h2 id="创建环境："><a href="#创建环境：" class="headerlink" title="创建环境："></a>创建环境：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create -n mp python=3.10 -y</span><br><span class="line">conda activate mp</span><br></pre></td></tr></table></figure>
<h2 id="克隆Janus"><a href="#克隆Janus" class="headerlink" title="克隆Janus"></a>克隆Janus</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/deepseek-ai/Janus.git</span><br><span class="line">cd Janus</span><br></pre></td></tr></table></figure>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -e .</span><br></pre></td></tr></table></figure>
<h2 id="安装Graio-UI"><a href="#安装Graio-UI" class="headerlink" title="安装Graio(UI)"></a>安装Graio(UI)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install gradio</span><br><span class="line">pip uninstall torch torchvision torchaudio -y</span><br><span class="line">pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121</span><br></pre></td></tr></table></figure>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python demo/app_januspro.py</span><br></pre></td></tr></table></figure>
<p>调用gpu运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python demo/app_januspro.py --device cuda</span><br></pre></td></tr></table></figure>
<p>打开本地链接<a href="http://127.0.0.1:7860就可以使用。">http://127.0.0.1:7860就可以使用。</a></p>
<p>理想很丰满，现实很骨感，还是没搞定，有时间再整。</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(25)</title>
    <url>/paper-reading-25.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>本文研究了格陵兰冰盖东北冰流（NEGIS）中的冰流变形机制。通过在东格陵兰冰芯项目（EastGRIP）的钻孔中部署分布式声学传感（DAS）技术，我们观测到了一种与常规冰流非线性粘性流变学不一致的冰变形模式：冰内地震事件级联。这些事件级联在冰芯中表现为类似地质推覆构造的结构，表明冰流内部发生了脆性变形。本文通过分析DAS数据，揭示了这些冰内地震事件的特征和成因，并探讨了其对冰流动力学的影响。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ul>
<li>冰流动力学：理解冰流的变形机制对于预测冰盖在气候变化中的行为至关重要，这直接影响到全球海平面上升的预测。</li>
<li>冰盖模拟：准确的冰盖模拟需要精确的冰流流变学模型，这对于评估冰盖对气候变化的响应和未来的海平面上升具有重要意义。</li>
<li>冰芯研究：冰芯中的微观结构和化学成分可以提供冰流历史和环境条件的线索，有助于理解冰流的物理过程。</li>
</ul>
<h3 id="前人相关研究及不足"><a href="#前人相关研究及不足" class="headerlink" title="前人相关研究及不足"></a>前人相关研究及不足</h3><ul>
<li>冰流模拟的局限性：</li>
<li>研究：前人研究主要依赖于Glen流变学定律来模拟冰流的粘性流动（如参考文献49）。</li>
<li>不足：这些模型在小尺度上（如冰流的代表性体积单元，RVE）的适用性受到质疑，因为它们无法解释冰流中的脆性变形现象（如参考文献50）。</li>
<li>冰流变形机制：<ul>
<li>研究：前人研究通过冰芯晶体学和地质物理方法研究冰流的变形机制（如参考文献12、13）。</li>
<li>不足：这些研究主要集中在冰流的粘性流动，对冰流中的脆性变形机制了解有限。</li>
</ul>
</li>
<li>冰流中的地震活动：<ul>
<li>研究：前人研究观测到冰流中的微地震活动，但主要集中在冰床和表面裂缝区域（如参考文献34、35）。</li>
<li>不足：这些研究未能解释冰流内部的地震活动，特别是与冰流变形机制的关系。</li>
</ul>
</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据：</strong><ul>
<li>DAS数据：本文使用了在东格陵兰冰芯项目（EastGRIP）钻孔中部署的分布式声学传感（DAS）技术获取的数据。</li>
<li>冰芯数据：结合了东格陵兰冰芯项目的冰芯数据，包括冰芯的微观结构和化学成分。</li>
</ul>
</li>
<li><strong>方法：</strong><ul>
<li>DAS技术：通过DAS技术记录冰流中的地震活动，分析地震事件的特征和成因。</li>
<li>波场模拟：通过波场模拟技术，验证观测到的地震事件的成因机制。</li>
<li>冰流模型：结合冰流模型，探讨冰内地震活动对冰流动力学的影响。</li>
</ul>
</li>
</ul>
<h3 id="本文获得的结果"><a href="#本文获得的结果" class="headerlink" title="本文获得的结果"></a>本文获得的结果</h3><ul>
<li>冰内地震事件特征：</li>
<li>观测到冰流内部的地震事件级联，这些事件具有明显的垂直反演对称性，且传播速度介于S波和P波之间。</li>
<li>这些事件级联在冰芯中表现为类似地质推覆构造的结构，表明冰流内部发生了脆性变形。</li>
<li>成因机制：</li>
<li>通过波场模拟，推断这些地震事件是由水平断层面上的滑动引起的，且这些断层面可能由火山灰层中的杂质促进的晶界裂纹引发。</li>
<li>这些事件级联可能与冰流中的宏观塑性变形有关，且这种变形机制在冰流中较为常见。</li>
<li>对冰流动力学的影响：</li>
<li>保守估计表明，这些地震事件级联可能产生与GPS测量的水平应变率相当的应变率，对冰流的宏观变形有显著贡献。</li>
<li>这些观测结果表明，冰流的代表性体积单元（RVE）可能在千米尺度上，而不是厘米尺度。</li>
</ul>
<h3 id="本文的创新之处和贡献"><a href="#本文的创新之处和贡献" class="headerlink" title="本文的创新之处和贡献"></a>本文的创新之处和贡献</h3><ul>
<li>创新之处：<ul>
<li>首次使用DAS技术：首次在冰流研究中使用DAS技术，揭示了冰流内部的地震活动。</li>
<li>揭示脆性变形机制：首次揭示了冰流内部的脆性变形机制，与常规的粘性流变学不一致。</li>
</ul>
</li>
<li>贡献：<ul>
<li>改进冰流模型：为改进现有的冰流模型提供了新的数据和理论依据，特别是在小尺度上的冰流变形机制。</li>
<li>提高海平面上升预测的准确性：通过更准确的冰流模型，提高对冰盖质量损失和海平面上升的预测准确性。</li>
</ul>
</li>
</ul>
<h3 id="本文的不足"><a href="#本文的不足" class="headerlink" title="本文的不足"></a>本文的不足</h3><ul>
<li>空间分布的不确定性：</li>
<li>本文观测到的冰内地震活动的空间分布尚不明确，需要更多的观测数据来验证其在冰流中的普遍性。</li>
<li>时间分布的不确定性：</li>
<li>本文的观测时间较短，需要更长时间的观测数据来验证冰内地震活动的时间分布特征。</li>
<li>模型的局限性：</li>
<li>本文提出的冰流模型仍存在一定的局限性，需要进一步的实验和观测数据来验证和完善。</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>本文通过在东格陵兰冰芯项目中部署DAS技术，揭示了冰流内部的地震活动和脆性变形机制，为改进冰流模型和提高海平面上升预测的准确性提供了新的数据和理论依据。尽管本文在空间和时间分布的观测上存在一定的局限性，但其创新性和贡献为未来的研究提供了重要的方向。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(26)</title>
    <url>/paper-reading-26.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>2023年初，一系列强烈的气河风暴缓解了加利福尼亚州的历史性干旱，但地下水恢复的空间和时间范围仍然知之甚少。我们利用地震背景噪声干涉测量技术追踪了大洛杉矶地区二十年地下水的变化。得到的地震水文图揭示了地下水和地表水干旱的不同表现：尽管2023年湿润季节地表和近地表水储量几乎完全恢复，但自2006年以来失去的地下水只有大约25%得到恢复。从十年尺度来看，我们发现在50米深度以下的含水层中有大量枯竭，仅有限的风暴相关恢复。我们的分析强调了使用高分辨率工具（如地震感应）监测深含水层的必要性，以更全面地评估总水资源短缺情况。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ul>
<li>理解地下水恢复情况：<br>研究有助于了解在极端天气事件后地下水恢复的空间和时间范围。<br>提供了对自然补给机制在补充地下水储量方面的有效性的见解。</li>
<li>水资源管理：<br>研究结果对于应对极端天气事件和长期干旱的水资源管理策略至关重要。<br>强调了监测深含水层以全面评估总水资源短缺的必要性。</li>
<li>气候适应性：<br>研究结果为气候适应性策略提供了信息，识别了表层水库的局限性和地下水水库的重要性。<br>支持发展增强地下水储存和管理的政策。</li>
</ul>
<h3 id="前人相关研究及不足"><a href="#前人相关研究及不足" class="headerlink" title="前人相关研究及不足"></a>前人相关研究及不足</h3><ul>
<li>地下水监测：</li>
<li>传统方法如井数据昂贵且空间分布稀疏，无法捕捉含水层的异质性。</li>
<li>例子：点尺度井数据不足以进行流域尺度分析。</li>
<li>遥感技术：</li>
<li>卫星遥感和航空调查提供了有价值的数据，但可能缺乏必要的时空分辨率。</li>
<li>例子：GRACE和GRACE-FO任务提供的空间分辨率较低，时间分辨率为每月一次。</li>
<li>水文模型：</li>
<li>模型通常依赖于假设和简化，可能无法准确反映实际情况。</li>
<li>例子：简化的水量平衡模型可能无法考虑复杂的水文地质结构。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li>数据：</li>
<li>地震数据：由南加州地震网络的68个站点记录。</li>
<li>重力数据：来自GRACE和GRACE-FO任务。</li>
<li>水文数据：包括降水、地下水井数据、GPS测量、水文模拟等。</li>
<li>方法：</li>
<li>地震干涉测量：使用先进技术测量地震速度的微小变化。</li>
<li>地震水文图：推导出以追踪深度处水储量的变化。</li>
<li>垂直地震水文图（VSHs）：用于理解含水层动态的垂直变化。</li>
</ul>
<h3 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h3><ul>
<li>地下水恢复：</li>
<li>2023年地表和近地表水储量几乎完全恢复。</li>
<li>自2006年以来失去的地下水只有大约25%得到恢复。</li>
<li>50米深度以下的含水层中有大量枯竭，仅有限的风暴相关恢复。</li>
<li>深度分布：</li>
<li>地下水损失范围广泛，最大达到约500米深度处的季节性变化的450%以上。</li>
<li>2023年恢复量约为季节性变化的120%。</li>
<li>空间变化：</li>
<li>在圣加布里埃尔盆地西部和惠提尔狭隘附近，浅层到中层含水层的地下水补给显著。</li>
</ul>
<h3 id="创新点、贡献和不足"><a href="#创新点、贡献和不足" class="headerlink" title="创新点、贡献和不足"></a>创新点、贡献和不足</h3><ul>
<li>创新点：</li>
<li>高分辨率地震感应：提供了详细的地下水动态深度剖面。</li>
<li>深度依赖的地震干旱指数（Seismic-DI）：一种新的工具，用于量化地下水干旱状况。</li>
<li>贡献：</li>
<li>提供了对极端天气事件后地下水恢复情况的全面评估。</li>
<li>强调了监测深含水层以全面了解水资源短缺的必要性。</li>
<li>提供了一种新的工具（Seismic-DI），用于高时空分辨率的地下水干旱监测。</li>
<li>不足：</li>
<li>研究主要集中在大洛杉矶地区，其发现可能不适用于其他地区。</li>
<li>地震数据可能无法捕捉高度异质性含水层中地下水动态的所有复杂性。</li>
<li>需要在不同的水文地质设置中进一步验证和校准Seismic-DI。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的程序和项目（二）</title>
    <url>/code-and-project2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><a href="https://ssa2py.readthedocs.io/en/stable/basic_info.html">Fast analysis of the seismic rupture</a> SSA2py is an emergent python based software that allows fast analysis of the seismic rupture, making possible the near-realtime identification of the rupture characteristics after a significant seismic event. </li>
<li><a href="https://github.com/beridel/fast_matched_filter">Fast matching filter</a> Seismic matched-filter search for both CPU and GPU architectures.</li>
<li><a href="https://github.com/lsmeng/MUSICBP">MUSIC Teleseismic Back-Projection</a> Perform the Back-Projection Imaging on the seismograms of large earthquakes recorded by large-scale dense arrays.</li>
<li><a href="https://ebeauce.github.io/Seismic_BPMF/index.html">Seismic_BPMF</a> Fully automated workflow for earthquake detection and location with the backprojection and matched filtering methods.</li>
<li><a href="https://github.com/tso1257771/Attention-Recurrent-Residual-U-Net-for-earthquake-detection">ARRU_seismic_backprojection</a> ARRU Phase Picker: Attention Recurrent‐Residual U‐Net for Picking Seismic P‐ and S‐Phase Arrivals.</li>
<li><a href="https://github.com/ajay6763/earthquake_back_projection">earthquake_back_projection</a> Back-projection of high-frequency radiation from earthquake source using multiple arrays. Methodology is based on Ishii (2012). </li>
<li><a href="https://github.com/ebeauce/earthquake_detection_EB_et_al_2019">earthquake_detection</a> Codes used in the earthquake detection and location method presented in Beauce et al. 2019, DOI: 10.1029&#x2F;2019JB018110. A real data example is also provided.</li>
<li><a href="https://ebeauce.github.io/beampower/introduction.html">beampower</a> Fast routines for seismic backprojection&#x2F;beamforming for both CPU and GPU architectures.</li>
<li><a href="https://ebeauce.github.io/ILSI/">Iterative Linear Stress Inversion (ILSI)</a> Python package for stress tensor inversion. </li>
<li><a href="https://git.pyrocko.org/pyrocko/pyrocko/">Pyrocko</a> A Python framework for efficient use of pre-computed Green’s functions in seismological and other physical forward and inverse source problems.</li>
</ol>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>project</tag>
      </tags>
  </entry>
  <entry>
    <title>obspy下载连续背景噪声数据</title>
    <url>/down-ambient-noise-py.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>利用obspy的MassDownloader下载连续的波形示例。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> obspy</span><br><span class="line"><span class="keyword">from</span> obspy.clients.fdsn.mass_downloader <span class="keyword">import</span> RectangularDomain, CircularDomain, \</span><br><span class="line">    Restrictions, MassDownloader</span><br><span class="line"><span class="comment"># Rectangular domain containing parts of southern Germany.</span></span><br><span class="line"><span class="comment">#domain = RectangularDomain(minlatitude=-15, maxlatitude=18,</span></span><br><span class="line"><span class="comment">#                           minlongitude=10, maxlongitude=22)</span></span><br><span class="line">domain = CircularDomain(</span><br><span class="line">        latitude=<span class="number">0</span>,</span><br><span class="line">        longitude=<span class="number">0</span>,</span><br><span class="line">        minradius=<span class="number">0.0</span>,</span><br><span class="line">        maxradius=<span class="number">12.0</span></span><br><span class="line">        )</span><br><span class="line">restrictions = Restrictions(</span><br><span class="line">    <span class="comment"># Get data for a whole year.</span></span><br><span class="line">    starttime=obspy.UTCDateTime(<span class="number">2005</span>, <span class="number">1</span>, <span class="number">15</span>),</span><br><span class="line">    endtime=obspy.UTCDateTime(<span class="number">2007</span>, <span class="number">10</span>, <span class="number">15</span>),</span><br><span class="line">    <span class="comment"># Chunk it to have one file per day.</span></span><br><span class="line">    chunklength_in_sec=<span class="number">86400</span>,</span><br><span class="line">    <span class="comment"># Considering the enormous amount of data associated with continuous</span></span><br><span class="line">    <span class="comment"># requests, you might want to limit the data based on SEED identifiers.</span></span><br><span class="line">    <span class="comment"># If the location code is specified, the location priority list is not</span></span><br><span class="line">    <span class="comment"># used; the same is true for the channel argument and priority list.</span></span><br><span class="line">    network=<span class="string">&quot;??&quot;</span>, station=<span class="string">&quot;????&quot;</span>, location=<span class="string">&quot;*&quot;</span>, channel=<span class="string">&quot;LHZ&quot;</span>,</span><br><span class="line">    <span class="comment"># The typical use case for such a data set are noise correlations where</span></span><br><span class="line">    <span class="comment"># gaps are dealt with at a later stage.</span></span><br><span class="line">    reject_channels_with_gaps=<span class="literal">False</span>,</span><br><span class="line">    <span class="comment"># Same is true with the minimum length. All data might be useful.</span></span><br><span class="line">    minimum_length=<span class="number">0.0</span>,</span><br><span class="line">    <span class="comment"># Guard against the same station having different names.</span></span><br><span class="line">    minimum_interstation_distance_in_m=<span class="number">100.0</span>)</span><br><span class="line"><span class="comment"># Restrict the number of providers if you know which serve the desired</span></span><br><span class="line"><span class="comment"># data. If in doubt just don&#x27;t specify - then all providers will be</span></span><br><span class="line"><span class="comment"># queried.</span></span><br><span class="line"><span class="comment">#mdl = MassDownloader(providers=[&quot;IRIS&quot;,&quot;USGS&quot;,&quot;GFZ&quot;])</span></span><br><span class="line">mdl = MassDownloader()</span><br><span class="line">mdl.download(domain, restrictions, mseed_storage=<span class="string">&quot;waveforms&quot;</span>,</span><br><span class="line">             stationxml_storage=<span class="string">&quot;stations&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>obspy</tag>
      </tags>
  </entry>
  <entry>
    <title>如何下载Fnet数据</title>
    <url>/download-fnet-data-py.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>感谢Seisman写了<a href="https://github.com/seisman/FnetPy">FnetPy</a>,可以很方便地下载数据。<br>安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install https://github.com/seisman/FnetPy/archive/master.zip</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from obspy.io.xseed import Parser</span><br><span class="line">from FnetPy import Client</span><br><span class="line">from datetime import datetime,timedelta</span><br><span class="line">from obspy import read_inventory,read,Trace</span><br><span class="line">from datetime import datetime</span><br><span class="line">client = Client(&#x27;用户名&#x27;, &#x27;密码&#x27;)</span><br><span class="line"></span><br><span class="line">current_date=datetime(2013,1,1,0,0)</span><br><span class="line">#current_date=datetime(2004,12,30,0,0)</span><br><span class="line">end_date=datetime(2025,1,1,0,0)</span><br><span class="line">output_dir=&#x27;./seed&#x27;</span><br><span class="line">raw_dir=&#x27;./raw&#x27;</span><br><span class="line">resp_dir=&#x27;./resp&#x27;</span><br><span class="line">os.makedirs(output_dir, exist_ok=True)</span><br><span class="line">os.makedirs(raw_dir, exist_ok=True)</span><br><span class="line">os.makedirs(resp_dir, exist_ok=True)</span><br><span class="line">while (current_date&lt;end_date):</span><br><span class="line">    start_time = current_data</span><br><span class="line">    start_str = current_date.strftime(&quot;%Y_%m_%d_%H_%M_%S&quot;)</span><br><span class="line">    name=start_str+&quot;.seed&quot;</span><br><span class="line">    fname=os.path.join(raw_dir,name)</span><br><span class="line">    output_file=os.path.join(output_dir, name)</span><br><span class="line">    if os.path.exists(output_file):</span><br><span class="line">        print(f&quot;[跳过] 文件已存在: &#123;output_file&#125;&quot;)</span><br><span class="line">        current_date+=timedelta(days=1)</span><br><span class="line">        continue</span><br><span class="line">    open(output_file, &#x27;wb&#x27;).close()  # 创建空文件</span><br><span class="line">    if not os.path.exists(fname):</span><br><span class="line">        print(&#x27;download data from &#x27;+str(start_time)+&#x27; to &#x27;+str(end_time))</span><br><span class="line">        client.get_waveform(start_time, duration_in_seconds=86400+3600,component=&quot;LHZ&quot;,filename=fname) # download</span><br><span class="line">        print(&#x27;download &#x27;+fname+&#x27; down!&#x27;)</span><br><span class="line">    current_date+=timedelta(days=1)</span><br><span class="line">    st = read(fname) # read</span><br><span class="line">    parser = Parser(fname) #parse</span><br><span class="line">    parser.write_resp(resp_dir, zipped=False)</span><br><span class="line">    for tr in st:</span><br><span class="line">        resp_file = f&quot;RESP.&#123;tr.get_id()&#125;&quot;</span><br><span class="line">        inv = read_inventory(os.path.join(resp_dir, resp_file))</span><br><span class="line">        tr.remove_response(inventory=inv, output=&quot;VEL&quot;)</span><br><span class="line">        #print(tr.stats)</span><br><span class="line">    st.write(output_file, format=&quot;MSEED&quot;)</span><br><span class="line">print(&#x27;Finished&#x27;)</span><br></pre></td></tr></table></figure>
<p>这个脚本可以下载2013到2025年Fnet所有台站的LHZ连续波形数据，数据长度为25小时，overlap 1小时。去除仪器响应后的速度记录存放在seed文件夹中。每天的数据名称为%Y_%m_%d_%H_%M_%S.seed。账户需要去NIED去申请，当然用我的也可以。</p>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(27)</title>
    <url>/paper-reading-27.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>持续的地震数据分析能够识别与地球内部或地表物理过程相关的信号 。表征地震信号有助于深入了解源过程和地球的结构特征 。通过对长周期（25 - 100秒）面波的全球地震网络分析，已经检测到了一些未通过高频体波分析识别出的地震事件 。然而，全球范围内探测具有窄谱峰的持久单色信号仍然具有挑战性，这些信号携带着有关地质和环境过程的宝贵信息 。我们开发了一种基于相干性的方法，用于在全球范围内表征长周期单色地震信号 。除了来自几内亚湾、瓦努阿图群岛和一座海底火山的信号外，我们还观测到来自加拿大北极地区的一个此前未识别的信号，可能与冰川动态有关 。我们的方法探索了连续地震数据中的长周期单色地震信号，为未来研究表征这些信号在地球表面产生的物理过程奠定了基础 。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><p>以下是相关研究的一些重要性：</p>
<ul>
<li><strong>深化地球物理过程理解</strong>：有助于深入了解地球内部的物理过程，如地震的发生机制、岩浆的运移等。</li>
<li><strong>改进地震监测技术</strong>：推动地震监测技术的发展，提高地震事件的检测能力。</li>
<li><strong>揭示地质灾害成因</strong>：为地质灾害的预测和防范提供科学依据，减少灾害带来的损失。</li>
<li><strong>监测环境变化</strong>：通过监测与环境变化相关的地震信号，如冰川融化、火山活动等，为环境科学研究提供数据支持。</li>
</ul>
<h3 id="前人的相关研究及不足"><a href="#前人的相关研究及不足" class="headerlink" title="前人的相关研究及不足"></a>前人的相关研究及不足</h3><p>以下是前人的一些相关研究及不足：</p>
<ul>
<li><strong>Shearer（1994）</strong>：通过堆叠长周期面波使用匹配滤波技术，检测到32个未识别事件，大多数事件位于南半球的大洋中脊。<strong>不足</strong>：依赖于速度模型的准确性，速度模型的不准确可能会引入事件检测的不确定性。</li>
<li><strong>Ekström（2006）</strong>：分析了10年的全球地震数据，检测到约1300个未识别事件，主要由格陵兰和南极的冰川崩解产生。<strong>不足</strong>：难以检测到具有窄频率带、长持续时间和不清晰起始时间的单色信号。</li>
<li><strong>Poli（2024）</strong>：应用基于迁移算法的分析，发现了约1766个未识别事件，主要位于极地地区、大洋中脊和构造边界。<strong>不足</strong>：对信号的物理机制理解不够深入，需要进一步研究。</li>
</ul>
<h3 id="本文使用的数据和方法"><a href="#本文使用的数据和方法" class="headerlink" title="本文使用的数据和方法"></a>本文使用的数据和方法</h3><ul>
<li><strong>数据</strong>：本文使用了日本F-net网络中的72个宽频带地震台站记录的信号数据，收集了从2003年1月1日至2022年12月31日的连续数据。</li>
<li><strong>方法</strong>：提出了基于相干性的方法，计算区域地震阵列中所有台站对的网络平均相干性，通过波束形成和匹配滤波等技术来识别和定位信号源。</li>
</ul>
<h3 id="本文获得的结果"><a href="#本文获得的结果" class="headerlink" title="本文获得的结果"></a>本文获得的结果</h3><ul>
<li>识别出了多个已知和未知的信号源，包括来自几内亚湾、瓦努阿图群岛、Fukutoku-Okanoba海底火山和加拿大北极群岛的信号。</li>
<li>通过匹配滤波方法，发现加拿大北极地区存在新的冰川地震活动。</li>
<li>揭示了26秒微震在南半球冬季的高发生率，以及瓦努阿图弧在某些年份的信号爆发。</li>
</ul>
<h3 id="本文的创新之处"><a href="#本文的创新之处" class="headerlink" title="本文的创新之处"></a>本文的创新之处</h3><ul>
<li>提出了基于相干性的新方法，有效解决了传统方法在检测长周期单色地震信号时的不足。</li>
<li>成功识别了来自加拿大北极群岛的 previously 未被识别的信号，拓展了对极地地区地震活动的认识。</li>
<li>通过匹配滤波方法，首次发现了加拿大北极地区的重复冰川地震活动。</li>
</ul>
<h3 id="本文的贡献"><a href="#本文的贡献" class="headerlink" title="本文的贡献"></a>本文的贡献</h3><ul>
<li>为系统检测和表征火山和环境信号提供了新方法，有助于更好地理解这些信号的物理机制。</li>
<li>丰富了全球地震信号的观测和研究，为地震学和地球物理学研究提供了新的数据和案例。</li>
<li>对监测和研究气候变化对极地地区的影响具有重要意义。</li>
</ul>
<h3 id="本文的不足"><a href="#本文的不足" class="headerlink" title="本文的不足"></a>本文的不足</h3><ul>
<li>在定位信号源时，假设面波沿小圆弧大圆路径传播，这可能会引入系统误差。</li>
<li>对信号的物理机制解释存在一定的不确定性，需要更多的研究来验证。</li>
<li>分析主要基于日本的地震台网数据，可能在信号检测和定位的全球覆盖范围上存在局限性。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>去仪器响应练习</title>
    <url>/remove-response-miniseed.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>用我的脚本下载了一堆的miniseed放在seed下，仪器响应文件放在resp文件夹下，利用obspy去除仪器响应，还保存为miniseed。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from glob import glob</span><br><span class="line">from obspy import read, read_inventory</span><br><span class="line"># 设置路径</span><br><span class="line">seed_folder = &quot;seed&quot;</span><br><span class="line">resp_folder = &quot;resp&quot;</span><br><span class="line">output_folder = &quot;seed_corrected&quot;</span><br><span class="line">os.makedirs(output_folder, exist_ok=True)</span><br><span class="line">seed_files = glob(os.path.join(seed_folder, &quot;*.seed&quot;))   # 遍历所有 seed 文件</span><br><span class="line">for seed_file in seed_files:</span><br><span class="line">    print(f&quot;Processing &#123;os.path.basename(seed_file)&#125;&quot;)</span><br><span class="line">    try:</span><br><span class="line">        st = read(seed_file)   # 读取 MiniSEED 数据</span><br><span class="line">        for tr in st:</span><br><span class="line">            net = tr.stats.network</span><br><span class="line">            sta = tr.stats.station</span><br><span class="line">            loc = tr.stats.location</span><br><span class="line">            cha = tr.stats.channel</span><br><span class="line">            resp_file = os.path.join(resp_folder, f&quot;RESP.&#123;net&#125;.&#123;sta&#125;.&#123;loc&#125;.&#123;cha&#125;&quot;) # 构造 RESP 文件路径</span><br><span class="line">            if not os.path.exists(resp_file):</span><br><span class="line">                print(f&quot;RESP file not found: &#123;resp_file&#125;, skipping trace.&quot;)</span><br><span class="line">                continue</span><br><span class="line">            inventory = read_inventory(resp_file)   # 读取 RESP 文件作为 inventory</span><br><span class="line">            # 去除仪器响应</span><br><span class="line">            tr.remove_response(inventory=inventory, output=&quot;VEL&quot;, pre_filt=[0.001, 0.002, 0.3, 0.45 ], zero_mean=True, taper=True)</span><br><span class="line">        output_file = os.path.join(output_folder, os.path.basename(seed_file)) # 输出文件名</span><br><span class="line">        st.write(output_file, format=&quot;MSEED&quot;)</span><br><span class="line">        print(f&quot;Saved corrected data to &#123;output_file&#125;\n&quot;)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(f&quot;Error processing &#123;seed_file&#125;: &#123;e&#125;&quot;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>seismology</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>下载地震数据练习</title>
    <url>/download-earthquake-py.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;接收函数或者其他方法需要下载地震波形数据。这里给出结合FetchEvent和obspy进行数据下载的例子。<br>&emsp;&emsp;FetchEvent从地址<a href="https://github.com/EarthScope/fetch-scripts%E4%B8%8B%E8%BD%BD%E3%80%82%E4%BB%96%E6%98%AF%E7%94%A8perl%E8%84%9A%E6%9C%AC%E5%86%99%E7%9A%84%E3%80%82%E8%BF%90%E8%A1%8C%E4%BE%8B%E5%AD%90%E5%A6%82%E4%B8%8B%EF%BC%9A">https://github.com/EarthScope/fetch-scripts下载。他是用perl脚本写的。运行例子如下：</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./FetchEvent -s 2006-01-01 -e 2007-05-01 --radius 5:12:95:28 --mag 5:10 -o event.lst</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;表示下载发生时间为2006-01-01到2007-05-01，位于以(5,12)(lat,lon)为中心，半径28-95度，震级5-10级的地震信息，保存到event.lst中。<br>&emsp;&emsp;下载到的event.lst内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8037834 |2006/01/23 20:50:46.19Z |  6.9168| -77.7951|  24.0355|ISC|||MS,5.86,ISC|mb,6.16,ISC|Near west coast of Colombia</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;表示ID|时间|纬度|经度|深度|目录|||震级类型,震级,目录|震级类型,震级,目录|位置<br>&emsp;&emsp;可以看出地震信息来自ISC目录，其实到<a href="https://www.isc.ac.uk/iscbulletin/search/catalogue/">ISC</a>直接检索也很方便。</p>
<p>&emsp;&emsp;接下来，下载XB台网所有台站接收到的地震理论P波到时前50秒到后150秒三分量数据。其中P波到时调用taup来计算。接下来去仪器响应，最后再截取P波前10秒到后60秒。保存为SAC格式，每个地震每个台站保存一个SAC，名称需包含地震时间震级及台站名。利用多线程ThreadPoolExecutor加速。脚本如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from obspy import UTCDateTime, read_inventory</span><br><span class="line">from obspy.clients.fdsn import Client</span><br><span class="line">from obspy.taup import TauPyModel</span><br><span class="line">from obspy.geodetics import locations2degrees</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor, as_completed</span><br><span class="line"></span><br><span class="line">client = Client(&quot;IRIS&quot;)</span><br><span class="line">model = TauPyModel(&quot;iasp91&quot;)</span><br><span class="line"></span><br><span class="line">output_dir = &quot;processed_sac&quot;</span><br><span class="line">os.makedirs(output_dir, exist_ok=True)</span><br><span class="line"></span><br><span class="line">event_file = &quot;event.lst&quot;</span><br><span class="line">exception_log = &quot;exceptions.txt&quot;</span><br><span class="line">thread_workers = 4  # 可调线程数</span><br><span class="line"></span><br><span class="line">with open(event_file, &quot;r&quot;) as f:</span><br><span class="line">    event_lines = [line.strip() for line in f if line.strip()]</span><br><span class="line"></span><br><span class="line">with open(exception_log, &quot;w&quot;) as elog:</span><br><span class="line">    elog.write(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">def process_station(event_id, origin_time, magnitude, ev_lat, ev_lon, ev_dep, net, sta, sta_lat, sta_lon, sta_elev):</span><br><span class="line">    try:</span><br><span class="line">        # 使用 locations2degrees 计算震中距</span><br><span class="line">        dist_deg = locations2degrees(ev_lat, ev_lon, sta_lat, sta_lon)</span><br><span class="line">        print(dist_deg)</span><br><span class="line">        arrivals = model.get_travel_times(source_depth_in_km=ev_dep,</span><br><span class="line">                                          distance_in_degree=dist_deg,</span><br><span class="line">                                          phase_list=[&quot;P&quot;])</span><br><span class="line">        if not arrivals:</span><br><span class="line">            raise Exception(&quot;No P arrival&quot;)</span><br><span class="line"></span><br><span class="line">        p_arrival = origin_time + arrivals[0].time</span><br><span class="line">        start_dl = p_arrival - 50</span><br><span class="line">        end_dl = p_arrival + 150</span><br><span class="line"></span><br><span class="line">        # 下载三分量数据</span><br><span class="line">        st = client.get_waveforms(network=net, station=sta, location=&quot;*&quot;, channel=&quot;BH?&quot;,</span><br><span class="line">                                  starttime=start_dl, endtime=end_dl,</span><br><span class="line">                                  attach_response=True)</span><br><span class="line"></span><br><span class="line">        # 去响应</span><br><span class="line">        st.remove_response(output=&quot;VEL&quot;, pre_filt=(0.01, 0.02, 8, 10), taper=True, zero_mean=True, taper_fraction=0.05)</span><br><span class="line"></span><br><span class="line">        # 截取有效窗口</span><br><span class="line">        st.trim(starttime=p_arrival - 10, endtime=p_arrival + 60)</span><br><span class="line"></span><br><span class="line">        # 检查是否为三分量</span><br><span class="line">        if not all(comp in [tr.stats.channel[-1] for tr in st] for comp in [&quot;N&quot;, &quot;E&quot;, &quot;Z&quot;]):</span><br><span class="line">            raise Exception(&quot;Incomplete 3-component data&quot;)</span><br><span class="line"></span><br><span class="line">        # 写入 SAC 文件并添加头段信息</span><br><span class="line">        for tr in st:</span><br><span class="line">            tr.stats.sac = tr.stats.get(&quot;sac&quot;, &#123;&#125;)</span><br><span class="line">            tr.stats.sac.stla = sta_lat</span><br><span class="line">            tr.stats.sac.stlo = sta_lon</span><br><span class="line">            tr.stats.sac.stel = sta_elev</span><br><span class="line">            tr.stats.sac.evla = ev_lat</span><br><span class="line">            tr.stats.sac.evlo = ev_lon</span><br><span class="line">            tr.stats.sac.evdp = ev_dep</span><br><span class="line">            tr.stats.sac.mag = float(magnitude) if magnitude != &quot;NA&quot; else 0.0</span><br><span class="line"></span><br><span class="line">            time_tag = origin_time.strftime(&quot;%Y%m%dT%H%M%S&quot;)</span><br><span class="line">            chan = tr.stats.channel</span><br><span class="line">            filename = f&quot;&#123;time_tag&#125;_M&#123;magnitude&#125;_&#123;net&#125;.&#123;sta&#125;.&#123;chan&#125;.sac&quot;</span><br><span class="line">            filepath = os.path.join(output_dir, filename)</span><br><span class="line">            tr.write(filepath, format=&quot;SAC&quot;)</span><br><span class="line">        return f&quot;&#123;net&#125;.&#123;sta&#125; ✅&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        with open(exception_log, &quot;a&quot;) as elog:</span><br><span class="line">            elog.write(f&quot;&#123;event_id&#125; &#123;net&#125;.&#123;sta&#125; ❌ &#123;str(e)&#125;\n&quot;)</span><br><span class="line">        return f&quot;&#123;net&#125;.&#123;sta&#125; ❌ &#123;str(e)&#125;&quot;</span><br><span class="line"></span><br><span class="line">def process_event(line):</span><br><span class="line">    results = []</span><br><span class="line">    parts = line.split(&quot;|&quot;)</span><br><span class="line">    if len(parts) &lt; 10:</span><br><span class="line">        return [&quot;跳过格式错误行&quot;]</span><br><span class="line"></span><br><span class="line">    evid = parts[0].strip()</span><br><span class="line">    time_str = parts[1].strip()</span><br><span class="line">    ev_lat = float(parts[2].strip())</span><br><span class="line">    ev_lon = float(parts[3].strip())</span><br><span class="line">    ev_dep = float(parts[4].strip())</span><br><span class="line">    mag_info = parts[8].strip()</span><br><span class="line">    magnitude = mag_info.split(&quot;,&quot;)[1] if &quot;,&quot; in mag_info else &quot;NA&quot;</span><br><span class="line"></span><br><span class="line">    origin_time = UTCDateTime(time_str)</span><br><span class="line">    print(f&quot;\n🟡 Processing event &#123;evid&#125; M&#123;magnitude&#125; @ &#123;origin_time&#125; (&#123;ev_lat&#125;, &#123;ev_lon&#125;, &#123;ev_dep&#125;km)&quot;)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        inventory = client.get_stations(network=&quot;XB&quot;, starttime=origin_time,</span><br><span class="line">                                        endtime=origin_time + 3600,</span><br><span class="line">                                        level=&quot;station&quot;, channel=&quot;BH?&quot;)</span><br><span class="line">        task_list = []</span><br><span class="line">        with ThreadPoolExecutor(max_workers=thread_workers) as executor:</span><br><span class="line">            for network in inventory:</span><br><span class="line">                for station in network:</span><br><span class="line">                    sta_lat = station.latitude</span><br><span class="line">                    sta_lon = station.longitude</span><br><span class="line">                    sta_elev = station.elevation</span><br><span class="line">                    sta = station.code</span><br><span class="line">                    net = network.code</span><br><span class="line">                    task = executor.submit(process_station, evid, origin_time, magnitude,</span><br><span class="line">                                           ev_lat, ev_lon, ev_dep, net, sta, sta_lat, sta_lon, sta_elev)</span><br><span class="line">                    task_list.append(task)</span><br><span class="line"></span><br><span class="line">            for task in as_completed(task_list):</span><br><span class="line">                results.append(task.result())</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        with open(exception_log, &quot;a&quot;) as elog:</span><br><span class="line">            elog.write(f&quot;&#123;evid&#125; XB ERROR: &#123;str(e)&#125;\n&quot;)</span><br><span class="line">        results.append(f&quot;⚠️ Failed to process event &#123;evid&#125;: &#123;e&#125;&quot;)</span><br><span class="line">    return results</span><br><span class="line"></span><br><span class="line"># 执行所有事件处理</span><br><span class="line">for line in event_lines:</span><br><span class="line">    results = process_event(line)</span><br><span class="line">    for r in results:</span><br><span class="line">        print(r)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>seismology</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>gmt怎么画箭头</title>
    <url>/gmt-arrow.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;用gmt画箭头还是挺常见的。<a href="https://docs.generic-mapping-tools.org/dev/plot.html">GMT document</a>和<a href="https://docs.gmt-china.org/latest/basis/vector/">GMT中文手册</a>虽好，但如果网络不好不就歇菜了，还是记录一下吧，自己翻起来方便。画箭头参数是Sv(或SV)，自己调Sv之后的参数可以看效果。输入参数表示是x，y，angle，length。x，y表示箭头的起始坐标。angle是箭头指向，逆时针为正，x轴正向为0。length就是那个length了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 0 60 0.5i | gmt psxy -R -J -O -K -Sv0.25c+e0.2c -W0.5p -Gblack &gt;&gt;$ps</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>gmt</category>
      </categories>
      <tags>
        <tag>gmt</tag>
        <tag>script</tag>
      </tags>
  </entry>
  <entry>
    <title>下载地震数据更新</title>
    <url>/download-eq-data.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;以下是地震数据下载脚本更新。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from obspy import UTCDateTime</span><br><span class="line">from obspy.clients.fdsn import Client</span><br><span class="line">from obspy.taup import TauPyModel</span><br><span class="line">from obspy.geodetics import locations2degrees</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor, as_completed</span><br><span class="line"></span><br><span class="line">client = Client(&quot;IRIS&quot;)</span><br><span class="line">model = TauPyModel(&quot;iasp91&quot;)</span><br><span class="line"></span><br><span class="line">output_dir = &quot;processed_sac&quot;</span><br><span class="line">os.makedirs(output_dir, exist_ok=True)</span><br><span class="line"></span><br><span class="line">event_file = &quot;event.lst&quot;</span><br><span class="line">sta_file = &quot;sta.lst&quot;</span><br><span class="line">exception_log = &quot;exceptions.txt&quot;</span><br><span class="line">thread_workers = 4</span><br><span class="line"></span><br><span class="line"># 读取台站信息：net, sta, lat, lon, elev</span><br><span class="line">with open(sta_file, &quot;r&quot;) as sf:</span><br><span class="line">    sta_lines = [line.strip() for line in sf if line.strip()]</span><br><span class="line">sta_list = []</span><br><span class="line">for line in sta_lines:</span><br><span class="line">    parts = line.split(&quot;|&quot;)</span><br><span class="line">    if len(parts) &gt;= 5:</span><br><span class="line">        net = parts[0].strip()</span><br><span class="line">        sta = parts[1].strip()</span><br><span class="line">        lat = float(parts[2])</span><br><span class="line">        lon = float(parts[3])</span><br><span class="line">        elev = float(parts[4])</span><br><span class="line">        sta_list.append((net, sta, lat, lon, elev))</span><br><span class="line"></span><br><span class="line"># 清空异常日志</span><br><span class="line">with open(exception_log, &quot;w&quot;) as elog:</span><br><span class="line">    elog.write(&quot;&quot;)</span><br><span class="line"></span><br><span class="line">def process_station(event_id, origin_time, magnitude, ev_lat, ev_lon, ev_dep,</span><br><span class="line">                    net, sta, sta_lat, sta_lon, sta_elev):</span><br><span class="line">    try:</span><br><span class="line">        dist_deg = locations2degrees(ev_lat, ev_lon, sta_lat, sta_lon)</span><br><span class="line">        arrivals = model.get_travel_times(source_depth_in_km=ev_dep,</span><br><span class="line">                                          distance_in_degree=dist_deg,</span><br><span class="line">                                          phase_list=[&quot;P&quot;])</span><br><span class="line">        if not arrivals:</span><br><span class="line">            raise Exception(&quot;No P arrival&quot;)</span><br><span class="line"></span><br><span class="line">        p_arrival = origin_time + arrivals[0].time</span><br><span class="line">        start_dl = p_arrival - 50</span><br><span class="line">        end_dl = p_arrival + 150</span><br><span class="line"></span><br><span class="line">        st = client.get_waveforms(network=net, station=sta, location=&quot;*&quot;, channel=&quot;BH?&quot;,</span><br><span class="line">                                  starttime=start_dl, endtime=end_dl,</span><br><span class="line">                                  attach_response=True)</span><br><span class="line"></span><br><span class="line">        st.remove_response(output=&quot;VEL&quot;, pre_filt=(0.01, 0.02, 8, 10),</span><br><span class="line">                           taper=True, zero_mean=True, taper_fraction=0.05)</span><br><span class="line"></span><br><span class="line">        st.trim(starttime=p_arrival - 10, endtime=p_arrival + 60)</span><br><span class="line"></span><br><span class="line">        comps = [tr.stats.channel[-1] for tr in st]</span><br><span class="line">        if not all(comp in comps for comp in [&quot;N&quot;, &quot;E&quot;, &quot;Z&quot;]):</span><br><span class="line">            raise Exception(&quot;Incomplete 3-component data&quot;)</span><br><span class="line"></span><br><span class="line">        for tr in st:</span><br><span class="line">            tr.stats.sac = tr.stats.get(&quot;sac&quot;, &#123;&#125;)</span><br><span class="line">            tr.stats.sac.stla = sta_lat</span><br><span class="line">            tr.stats.sac.stlo = sta_lon</span><br><span class="line">            tr.stats.sac.stel = sta_elev</span><br><span class="line">            tr.stats.sac.evla = ev_lat</span><br><span class="line">            tr.stats.sac.evlo = ev_lon</span><br><span class="line">            tr.stats.sac.evdp = ev_dep</span><br><span class="line">            tr.stats.sac.mag = float(magnitude) if magnitude != &quot;NA&quot; else 0.0</span><br><span class="line"></span><br><span class="line">            time_tag = origin_time.strftime(&quot;%Y%m%dT%H%M%S&quot;)</span><br><span class="line">            chan = tr.stats.channel</span><br><span class="line">            filename = f&quot;&#123;time_tag&#125;_M&#123;magnitude&#125;_&#123;net&#125;.&#123;sta&#125;.&#123;chan&#125;.sac&quot;</span><br><span class="line">            filepath = os.path.join(output_dir, filename)</span><br><span class="line">            tr.write(filepath, format=&quot;SAC&quot;)</span><br><span class="line"></span><br><span class="line">        return f&quot;&#123;net&#125;.&#123;sta&#125; ✅&quot;</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        with open(exception_log, &quot;a&quot;) as elog:</span><br><span class="line">            elog.write(f&quot;&#123;event_id&#125; &#123;net&#125;.&#123;sta&#125; ❌ &#123;str(e)&#125;\n&quot;)</span><br><span class="line">        return f&quot;&#123;net&#125;.&#123;sta&#125; ❌ &#123;str(e)&#125;&quot;</span><br><span class="line"></span><br><span class="line">def process_event(line):</span><br><span class="line">    results = []</span><br><span class="line">    parts = line.split(&quot;|&quot;)</span><br><span class="line">    if len(parts) &lt; 10:</span><br><span class="line">        return [&quot;跳过格式错误行&quot;]</span><br><span class="line"></span><br><span class="line">    evid = parts[0].strip()</span><br><span class="line">    time_str = parts[1].strip()</span><br><span class="line">    ev_lat = float(parts[2].strip())</span><br><span class="line">    ev_lon = float(parts[3].strip())</span><br><span class="line">    ev_dep = float(parts[4].strip())</span><br><span class="line">    mag_info = parts[8].strip()</span><br><span class="line">    magnitude = mag_info.split(&quot;,&quot;)[1] if &quot;,&quot; in mag_info else &quot;NA&quot;</span><br><span class="line"></span><br><span class="line">    origin_time = UTCDateTime(time_str)</span><br><span class="line">    print(f&quot;\n🟡 Processing event &#123;evid&#125; M&#123;magnitude&#125; @ &#123;origin_time&#125; (&#123;ev_lat&#125;, &#123;ev_lon&#125;, &#123;ev_dep&#125;km)&quot;)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        task_list = []</span><br><span class="line">        with ThreadPoolExecutor(max_workers=thread_workers) as executor:</span><br><span class="line">            for net, sta, sta_lat, sta_lon, sta_elev in sta_list:</span><br><span class="line">                task = executor.submit(process_station, evid, origin_time, magnitude,</span><br><span class="line">                                       ev_lat, ev_lon, ev_dep, net, sta, sta_lat, sta_lon, sta_elev)</span><br><span class="line">                task_list.append(task)</span><br><span class="line"></span><br><span class="line">            for task in as_completed(task_list):</span><br><span class="line">                results.append(task.result())</span><br><span class="line"></span><br><span class="line">    except Exception as e:</span><br><span class="line">        with open(exception_log, &quot;a&quot;) as elog:</span><br><span class="line">            elog.write(f&quot;&#123;evid&#125; XB ERROR: &#123;str(e)&#125;\n&quot;)</span><br><span class="line">        results.append(f&quot;⚠️ Failed to process event &#123;evid&#125;: &#123;e&#125;&quot;)</span><br><span class="line">    return results</span><br><span class="line"></span><br><span class="line"># 读取事件列表并执行</span><br><span class="line">with open(event_file, &quot;r&quot;) as f:</span><br><span class="line">    event_lines = [line.strip() for line in f if line.strip()]</span><br><span class="line"></span><br><span class="line">for line in event_lines:</span><br><span class="line">    results = process_event(line)</span><br><span class="line">    for r in results:</span><br><span class="line">        print(r)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;与之前的脚本:<a href="/download-earthquake-py" title="下载地震数据练习">下载地震数据练习</a>不同的地方是多了文件sta.lst。其格式为：<br>TA|140A|32.6408|-93.573997|56.0|<br>台网|台站|纬度|经度|高程</p>
]]></content>
      <categories>
        <category>seismology</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>鼠标点击位置记录</title>
    <url>/mouse-click-monitoring.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;有些时候需要抓取别人图片中的点的信息，应该怎么整？当然是找作者要咯！不过有时可能没办法（例如可能联系不上作者&#x2F;作者找不到数据了&#x2F;作者不想给你&#x2F;作者说你自己提取吧）或则并不需要他图片中的点的准确信息的时候，我们可以自己去点。之前有个perl脚本，但找不到了（这又体现了整理资料和做笔记的必要性），现在python很方便的，调用pynput的Listener就好了。记录鼠标点击的脚本如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pynput.mouse import Listener</span><br><span class="line">import logging</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line"># 配置日志记录</span><br><span class="line">logging.basicConfig(</span><br><span class="line">    filename=&quot;mouse_clicks.log&quot;,</span><br><span class="line">    level=logging.INFO,</span><br><span class="line">    format=&quot;%(asctime)s %(message)s&quot;,</span><br><span class="line">    datefmt=&quot;%Y-%m-%dT%H:%M:%S&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">def on_click(x, y, button, pressed):</span><br><span class="line">    if pressed:</span><br><span class="line">        message = f&quot;&#123;x&#125; &#123;y&#125;&quot;</span><br><span class="line">        print(message)  # 输出到屏幕</span><br><span class="line">        logging.info(message)  # 写入日志文件</span><br><span class="line">        if button == button.right:</span><br><span class="line">            # 停止监听器</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line"># 启动鼠标监听器</span><br><span class="line">with Listener(on_click=on_click) as listener:</span><br><span class="line">    try:</span><br><span class="line">        listener.join()</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        print(&quot;监听器已被用户中断。&quot;)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这个脚本会记录鼠标左键的位置，输出到mouse_clicks.log文件中。mouse_clicks.log文件有三列:</p>
<p>2025-05-07T17:01:33 1977 1576</p>
<p>分别表示点击的时间，x和y坐标。其中y坐标是下面大上面小。此外点击鼠标右键或者输入Ctrl+C就可以结束记录。我一般是怎么做的呢？我先点击图片左下角得到（x0,y0），点击右下角得到(x1,y0)，点击左上角得到(x0,y1)，然后点击你想要的点。得到mouse_clicks.log以后就可以这么画图（gmt）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dat=mouse_clicks.log</span><br><span class="line">#获得x0,y0,x1,y1，他们是参考点</span><br><span class="line">x0=`awk &#x27;NR==1&#123;print $2&#125;&#x27; $&#123;dat&#125;`</span><br><span class="line">y0=`awk &#x27;NR==1&#123;print $3&#125;&#x27; $&#123;dat&#125;`</span><br><span class="line">x1=`awk &#x27;NR==2&#123;print $2&#125;&#x27; $&#123;dat&#125;`</span><br><span class="line">y1=`awk &#x27;NR==3&#123;print $3&#125;&#x27; $&#123;dat&#125;`</span><br><span class="line">#获得横纵轴长度（屏幕尺度）</span><br><span class="line">xs=`echo &quot;$x1-$x0&quot; |bc` </span><br><span class="line">ys=`echo &quot;$y0-$y1&quot; |bc`</span><br><span class="line"></span><br><span class="line">awk -v x0=$x0 -v y0=$y0 -v xs=$xs -v ys=$ys &#x27;NR&gt;3&#123;print ($2-x0)/xs*2000-1000,(y0-$3)/ys*1500&#125;&#x27; $&#123;dat&#125; | gmt psxy -R -J -O -K -W3p,black &gt;&gt;$ps</span><br><span class="line">#这里（2000，1500）是横纵轴实际尺度，-1000表示实际位置调整。</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;注意，这种方法仅仅适用于线性笛卡尔坐标，其他的各种投影都不行。<br>&emsp;&emsp;以后得加上这句：脚本&#x2F;程序不保证正确性，自求多幅(no warranty&#x2F;use at your own risk)。</p>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>即“蠢”又“坏”？</title>
    <url>/bad-and-evil.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;不要误会，并不是你想象中的“蠢”和“坏”。我们在讨论某个“东西”的时候，有必要对这个“东西”的概念进行解释，否则会造成鸡同鸭讲，对牛弹琴的结果。另外你也会发现，像我这种学理的，总会在和别人讨论之前要明确“东西”的定义。人的语言其实还是挺匮乏的，难以完美表述自己心中所想，要是讨论的话题没有进行明确的定义，那就容易自说自话。有句话叫做人的冲突80%都是定义不明，也是说明这种状况。现在我也大约能够明白为什么小时候读国外的小说都觉得他们怎么写得那么“啰嗦”。原因是因为语言不够准确吧，需要提供冗余的信息，才不至于让人理解错误，以传达错误的信息。这是他们的办法，而我们选择了浪漫。<br>&emsp;&emsp;好了，先说“蠢”吧，算了，还是一起说，因为似乎他们难以分开。这两个词都是形容词，都是评价。当我们在评价一个人或物的时候，我们通常是站在了一个价值观，或角度或利益在讲。我讲他们难以分开，是站在哪个角度呢？<br>&emsp;&emsp;首先站在旁观者的角度，不带利益取舍的看吧。但又似乎不能，因为我也是人，所以几乎不能客观。但不管，姑且认为我是客观的吧，至少也可以试着幻想自己是一个外星物。从进化的角度来看吧。人付出了一些东西，演化出了大脑这个东西。大脑有很多神经元，连接，可以处理应付适应甚至改变很复杂的环境，从此大约不需要进化了啊。在此之前至少走到了动物界之巅了啊，说走上了生物之巅还为时尚早。<br>&emsp;&emsp;脑子是个好东西。我们会思考了。不过我们思考的时候，上帝就笑了。我们以为我们很会思考，其实，不是的。大脑只要一思考是很消耗能量的。老祖宗在恶劣的生存条件下，填饱肚子都是个挑战，能分配给脑子的能量是不够的啊。就像你要跑个AI模型，没有显卡，CPU只能跑个简单小模型啊。例如“狗”都会的条件反射。<br>&emsp;&emsp;好了，我们肯定不只会“狗”都会的条件反射。我们还会逻辑。真的吗？我不知道，因为逻辑真的会耗费更多能量。在思考这件事情上，我们可是很会省能量的。这就说到“蠢”的时候。我们进化出了脑子，是帮我们思考，处理复杂环境的，但同时，它太耗能量了，我们不能一刻不停的思考。我们有很多故有程序。举一个例子，有个程序叫做贴标签，或者叫指代，或者叫类比。<br>&emsp;&emsp;你会发现这是很明显的吧。如果你不清楚，那我再解释一下。这其实到了我想说的重点之一了。贴标签这回事。例如，有一个人做了“坏事”你会用“坏人”这个标签贴在这个人脑门子上。于是它做了任何其他事情，在你贴了对应标签的系统里面都是怀着不好的目的，都是有着“坏人”该有的心思的。于是你的脑子省下了大把的力气和能量，不用去想仔细推敲他为什么要做这个事情，总之识别出他是一个坏人的话（或者叫贴上了标签），远离他，堤防着他准是没有错的。事实就是如此，贴标签对我们的演化很多时候是有利的啊。<br>&emsp;&emsp;这可以部分解释我的朋友圈的“怪相”了吧。什么“怪相”？那就是：谁谁谁发某某期刊了。是不是很好玩了，这里有个标签不知道你看到没。那就是某某期刊了啊。某某期刊其实是没有什么问题的，无非就是我们把某某期刊贴上了“好”期刊的标签了啊。大概也是大家省能量了啊。贴上了“好”标签之后，我们就不用思考谁谁谁研究的是个啥了啊。管它是个啥，总是“好”的吧。<br>&emsp;&emsp;好了，此话题不宜讲太多，多了就露馅了，不好看了啊。<br>&emsp;&emsp;那么就来到“坏”的话题了啊。那什么是“坏”啊？提到“坏”，那你是不是应该就想到了“好”啊？那讲好坏的时候，我们的立场是什么呢？那无非还是DNA告诉我们的生存啊。当别人做的事情，直接或简介，近期或远期威胁到你的生存（或其他需求）的时候，你就会觉得他是“坏”的。<br>&emsp;&emsp;那么又回到贴标签这回事了。有些时候贴标签是好的啊，因为对于我们的生存是有利的。如果大家都贴一个标签，把此标签封为圭臬，那就挺好的哈。然而有些家伙会利用人们贴标签（“蠢”）的习惯在里面干“坏”事，在标签之下干自己的勾当，就是“坏”的了啊。<br>&emsp;&emsp;然而，话又说回来了。在做评价的时候是需要站在某一个立场的。所谓立场先行。那换一个立场，坏的也就是好的了。例如，对于利用“蠢”来干“坏”事的主体，其实他干的事情是对他自己“好”的啊，而且他打破了标签束缚，他还是“聪明”的啊。<br>&emsp;&emsp;天地不仁，以万物为刍狗。天地是没有立场的，也就没有分别心了啊。<br>&emsp;&emsp;阿门。阿弥陀佛。哈利路亚。人受到DNA的控制，同时又有自己的脑子，有各种需求难以摆脱，是没有办法成佛成圣的。<br>&emsp;&emsp;大约人间是地狱，人间也是天堂。</p>]]></content>
      <categories>
        <category>某日记</category>
      </categories>
      <tags>
        <tag>乱笔</tag>
      </tags>
  </entry>
  <entry>
    <title>注意力机制</title>
    <url>/attention-mechanism.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;注意力机制的核心思想是让模型能够动态聚焦于输入数据中最相关的部分。在时间序列分类中：<br>工作原理：</p>
<p>通过计算每个时间步的”重要性分数”（attention score）</p>
<p>使用softmax函数将这些分数转换为0-1之间的权重</p>
<p>对时间步特征进行加权求和，生成上下文向量（context vector）<br>数学表示：</p>
<p>   $e_i &#x3D; f(h_i)$  # 计算每个隐藏状态h_i的能量分数<br>   $α_i &#x3D; exp(e_i) &#x2F; Σ exp(e_j)$  # softmax归一化<br>   $context &#x3D; Σ (α_i * h_i)$  # 加权上下文向量<br>与传统模型的对比：</p>
<table>
<thead>
<tr>
<th>模型类型</th>
<th>处理变长异常能力</th>
<th>可解释性</th>
<th>计算效率</th>
</tr>
</thead>
<tbody><tr>
<td>FFN</td>
<td>❌ 固定位置依赖</td>
<td>❌ 黑盒</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>CNN</td>
<td>△ 局部感受野</td>
<td>△ 中等</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>Attention</td>
<td>✅ 动态聚焦</td>
<td>✅ 高（权重可视化）</td>
<td>⭐⭐⭐</td>
</tr>
</tbody></table>
<p>双向LSTM（BiLSTM）<br>作用：作为特征提取器，捕获时间序列的前后依赖关系</p>
<p>双向性：同时考虑过去和未来信息</p>
<p>  前向：h_forward &#x3D; LSTM(从t&#x3D;0到t&#x3D;T)<br>  后向：h_backward &#x3D; LSTM(从t&#x3D;T到t&#x3D;0)<br>  最终状态：h &#x3D; [h_forward; h_backward]</p>
<p>异常检测机制</p>
<pre class="mermaid">graph LR
    A[原始正弦波] --> B[随机位置]
    --> C[插入平坦段]
    --> D[长度随机]
    --> E[振幅/频率随机]
    --> F[形成异常样本]</pre>
<p>模型架构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">AttentionModel(</span><br><span class="line">  (lstm): LSTM(<span class="number">1</span>, <span class="number">32</span>, bidirectional=<span class="literal">True</span>)</span><br><span class="line">  (attention): Sequential(</span><br><span class="line">    (<span class="number">0</span>): Linear(in_features=<span class="number">64</span>, out_features=<span class="number">64</span>)</span><br><span class="line">    (<span class="number">1</span>): Tanh()</span><br><span class="line">    (<span class="number">2</span>): Linear(in_features=<span class="number">64</span>, out_features=<span class="number">1</span>)</span><br><span class="line">  )</span><br><span class="line">  (classifier): Sequential(</span><br><span class="line">    (<span class="number">0</span>): Linear(in_features=<span class="number">64</span>, out_features=<span class="number">1</span>)</span><br><span class="line">    (<span class="number">1</span>): Sigmoid()</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>评估指标<br>ROC-AUC：衡量模型区分正负样本的能力</p>
<p>值域[0,1]，&gt;0.9表示优秀模型<br>F1-Score：精确率和召回率的调和平均</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F1 = 2  (Precision  Recall) / (Precision + Recall)</span><br></pre></td></tr></table></figure>
<p>混淆矩阵：</p>
<table>
<thead>
<tr>
<th></th>
<th>预测正常</th>
<th>预测异常</th>
</tr>
</thead>
<tbody><tr>
<td>实际正常</td>
<td>TN (真负例)</td>
<td>FP (假正例)</td>
</tr>
<tr>
<td>实际异常</td>
<td>FN (假负例)</td>
<td>TP (真正例)</td>
</tr>
</tbody></table>
<p>“学习注意力机制的最佳途径不是NLP而是时间序列”<br>优势：</p>
<ol>
<li>复杂度降低：</li>
</ol>
<h3 id="NLP需要词嵌入-位置编码等额外层"><a href="#NLP需要词嵌入-位置编码等额外层" class="headerlink" title="NLP需要词嵌入&#x2F;位置编码等额外层"></a>NLP需要词嵌入&#x2F;位置编码等额外层</h3><h3 id="时间序列可直接使用原始数值数据"><a href="#时间序列可直接使用原始数值数据" class="headerlink" title="时间序列可直接使用原始数值数据"></a>时间序列可直接使用原始数值数据</h3><h3 id="示例：NLP处理流程-vs-时间序列处理"><a href="#示例：NLP处理流程-vs-时间序列处理" class="headerlink" title="示例：NLP处理流程 vs 时间序列处理"></a>示例：NLP处理流程 vs 时间序列处理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># NLP</span><br><span class="line">文本 → 分词 → 嵌入 → 位置编码 → 注意力</span><br><span class="line"># 时间序列</span><br><span class="line">原始信号 → 注意力</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>直观可视化：<br>  时间序列的注意力权重可直接叠加在信号图上<br>  NLP的注意力热力图需要专业知识解释</li>
<li>计算效率：<br>  时间序列可生成小型合成数据集（文中5000样本）<br>  训练在CPU上仅需几分钟（NLP模型通常需要GPU小时级训练）</li>
</ol>
<p>局限性：</p>
<ol>
<li>语义理解缺失：<br> NLP任务能更好展示注意力处理语义关系的能力<br> 如：指代消解”The animal didn’t cross the street because it was too tired”</li>
<li>实际应用偏差：<br>  工业界注意力应用仍以NLP为主（BERT, GPT等）<br>  时间序列注意力研究相对较少</li>
</ol>
<p>改进建议:</p>
<ol>
<li>混合学习路径（推荐）</li>
</ol>
<pre class="mermaid">graph TD
    A[基础概念] --> B[时间序列示例]
--> C[可视化理解]
--> D[NLP进阶]
--> E[CV扩展]</pre>

<ol start="2">
<li>增强时间序列实验设计<br>  多类型异常：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当前：仅平坦异常</span></span><br><span class="line">wave[loc:end] = wave[loc] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 建议增加：</span></span><br><span class="line">wave[loc:end] = <span class="number">0</span>  <span class="comment"># 零值异常</span></span><br><span class="line">wave[loc:end] = random_noise()  <span class="comment"># 噪声异常</span></span><br><span class="line">wave = add_spike(loc)  <span class="comment"># 尖峰异常</span></span><br></pre></td></tr></table></figure>
多变量时间序列：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">  <span class="comment"># 当前：单变量正弦波</span></span><br><span class="line">X.shape = (<span class="number">5000</span>, <span class="number">500</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改进：多变量</span></span><br><span class="line">X_multi = np.stack([sine_wave, </span><br><span class="line">                    cosine_wave, </span><br><span class="line">                    random_walk], axis=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li>
<li>模型架构优化</li>
</ol>
<p>多头注意力（Multi-Head Attention）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">  <span class="comment"># 当前：单头</span></span><br><span class="line"><span class="variable language_">self</span>.attention = nn.Sequential(...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改进：多头</span></span><br><span class="line"><span class="variable language_">self</span>.multihead_attn = nn.MultiheadAttention(</span><br><span class="line">    embed_dim=<span class="number">64</span>, num_heads=<span class="number">4</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>位置编码增强：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">  <span class="comment"># 当前：依赖LSTM的顺序处理</span></span><br><span class="line"><span class="comment"># 改进：显式位置编码</span></span><br><span class="line">position = torch.arange(<span class="number">0</span>, seq_len).unsqueeze(<span class="number">1</span>)</span><br><span class="line">pe = torch.sin(position / <span class="number">10000</span>(<span class="number">2</span>*i/d_model))</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>可解释性增强</li>
</ol>
<p>定量评估指标：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">attention_accuracy</span>(<span class="params">att_weights, anomaly_loc</span>):</span><br><span class="line">  <span class="string">&quot;&quot;&quot;计算注意力聚焦异常区域的准确度&quot;&quot;&quot;</span></span><br><span class="line">  focus_region = att_weights.argmax()-<span class="number">10</span> : att_weights.argmax()+<span class="number">10</span></span><br><span class="line">  overlap = <span class="built_in">len</span>(<span class="built_in">set</span>(focus_region) &amp; <span class="built_in">set</span>(anomaly_loc))</span><br><span class="line">  <span class="keyword">return</span> overlap / <span class="built_in">len</span>(anomaly_loc)</span><br></pre></td></tr></table></figure>
<p>对比可视化：</p>
<table>
<thead>
<tr>
<th>样本类型</th>
<th>正常样本</th>
<th>异常样本</th>
</tr>
</thead>
<tbody><tr>
<td>注意力分布</td>
<td>均匀分布</td>
<td>峰值在异常区</td>
</tr>
<tr>
<td>典型模式</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>时间序列提供了更简洁直观的注意力学习路径。但在工业实践中，建议：</p>
<ol>
<li>以时间序列作为入门起点</li>
<li>通过NLP任务深化语义理解</li>
<li>最终扩展到多模态应用<br>“注意力机制不是领域特定的工具，而是数据关系的动态透镜——时间序列提供了最干净的镜片来观察其本质。”</li>
</ol>
<p>python脚本例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import torch</span><br><span class="line">import torch.nn as nn</span><br><span class="line">import torch.optim as optim</span><br><span class="line">from torch.utils.data import Dataset, DataLoader, TensorDataset</span><br><span class="line">from sklearn.model_selection import train_test_split</span><br><span class="line">from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, roc_auc_score</span><br><span class="line"></span><br><span class="line"># 配置参数</span><br><span class="line">class Config:</span><br><span class="line">    num_points = 500        # 时间序列长度</span><br><span class="line">    dataset_size = 5000     # 数据集大小</span><br><span class="line">    normal_ratio = 0.5      # 正常样本比例</span><br><span class="line">    min_freq = 1            # 最小频率</span><br><span class="line">    max_freq = 4            # 最大频率</span><br><span class="line">    min_amp = 1             # 最小振幅</span><br><span class="line">    max_amp = 10            # 最大振幅</span><br><span class="line">    min_loc_ratio = 0.0     # 异常位置最小比例</span><br><span class="line">    max_loc_ratio = 0.9     # 异常位置最大比例</span><br><span class="line">    min_length_ratio = 0.1  # 异常长度最小比例</span><br><span class="line">    max_length_ratio = 0.5  # 异常长度最大比例</span><br><span class="line">    batch_size = 32         # 批大小</span><br><span class="line">    lr = 0.001              # 学习率</span><br><span class="line">    num_epochs = 15         # 训练轮数</span><br><span class="line">    hidden_dim = 32         # LSTM隐藏层维度</span><br><span class="line">    device = torch.device(&#x27;cuda&#x27; if torch.cuda.is_available() else &#x27;cpu&#x27;)</span><br><span class="line">    patience = 5            # 早停耐心值</span><br><span class="line"></span><br><span class="line">config = Config()</span><br><span class="line"></span><br><span class="line"># 1. 数据生成</span><br><span class="line">def generate_sine_wave(length, freq, amp):</span><br><span class="line">    &quot;&quot;&quot;生成正弦波&quot;&quot;&quot;</span><br><span class="line">    t = np.linspace(0, 2*np.pi, length)</span><br><span class="line">    return amp * np.sin(freq * t)</span><br><span class="line"></span><br><span class="line">def generate_dataset(config):</span><br><span class="line">    &quot;&quot;&quot;生成数据集&quot;&quot;&quot;</span><br><span class="line">    X = []</span><br><span class="line">    y = []</span><br><span class="line">    </span><br><span class="line">    for _ in range(config.dataset_size):</span><br><span class="line">        # 随机生成频率和振幅</span><br><span class="line">        freq = np.random.uniform(config.min_freq, config.max_freq)</span><br><span class="line">        amp = np.random.uniform(config.min_amp, config.max_amp)</span><br><span class="line">        </span><br><span class="line">        # 生成正常或异常样本</span><br><span class="line">        if np.random.rand() &lt; config.normal_ratio:</span><br><span class="line">            # 正常样本</span><br><span class="line">            wave = generate_sine_wave(config.num_points, freq, amp)</span><br><span class="line">            label = 0</span><br><span class="line">        else:</span><br><span class="line">            # 异常样本：生成正弦波并在随机位置插入平坦段</span><br><span class="line">            wave = generate_sine_wave(config.num_points, freq, amp)</span><br><span class="line">            # 随机选择异常位置和长度（按比例）</span><br><span class="line">            loc_ratio = np.random.uniform(config.min_loc_ratio, config.max_loc_ratio)</span><br><span class="line">            length_ratio = np.random.uniform(config.min_length_ratio, config.max_length_ratio)</span><br><span class="line">            loc = int(loc_ratio * config.num_points)</span><br><span class="line">            length = int(length_ratio * config.num_points)</span><br><span class="line">            end = min(loc + length, config.num_points)</span><br><span class="line">            # 将选定区域替换为常数值（取开始点的值）</span><br><span class="line">            wave[loc:end] = wave[loc]</span><br><span class="line">            label = 1</span><br><span class="line">        </span><br><span class="line">        X.append(wave)</span><br><span class="line">        y.append(label)</span><br><span class="line">    </span><br><span class="line">    # 转换为numpy数组</span><br><span class="line">    X = np.array(X)</span><br><span class="line">    y = np.array(y)</span><br><span class="line">    </span><br><span class="line">    # 转换为PyTorch张量</span><br><span class="line">    X_tensor = torch.tensor(X, dtype=torch.float32).unsqueeze(-1)  # (N, T, 1)</span><br><span class="line">    y_tensor = torch.tensor(y, dtype=torch.float32)  # (N,)</span><br><span class="line">    </span><br><span class="line">    return X_tensor, y_tensor</span><br><span class="line"></span><br><span class="line"># 2. 模型定义</span><br><span class="line">class AttentionModel(nn.Module):</span><br><span class="line">    def __init__(self, input_dim=1, hidden_dim=32):</span><br><span class="line">        super(AttentionModel, self).__init__()</span><br><span class="line">        # 双向LSTM</span><br><span class="line">        self.lstm = nn.LSTM(</span><br><span class="line">            input_size=input_dim,</span><br><span class="line">            hidden_size=hidden_dim,</span><br><span class="line">            batch_first=True,</span><br><span class="line">            bidirectional=True</span><br><span class="line">        )</span><br><span class="line">        # 注意力权重计算</span><br><span class="line">        self.attention = nn.Sequential(</span><br><span class="line">            nn.Linear(2 * hidden_dim, 64),</span><br><span class="line">            nn.Tanh(),</span><br><span class="line">            nn.Linear(64, 1)</span><br><span class="line">        )</span><br><span class="line">        # 分类器</span><br><span class="line">        self.classifier = nn.Sequential(</span><br><span class="line">            nn.Linear(2 * hidden_dim, 1),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line">    </span><br><span class="line">    def forward(self, x):</span><br><span class="line">        # LSTM处理</span><br><span class="line">        lstm_out, _ = self.lstm(x)  # (batch_size, seq_len, 2*hidden_dim)</span><br><span class="line">        </span><br><span class="line">        # 计算注意力权重</span><br><span class="line">        e = self.attention(lstm_out).squeeze(-1)  # (batch_size, seq_len)</span><br><span class="line">        alpha = torch.softmax(e, dim=1)  # 归一化权重</span><br><span class="line">        alpha_expanded = alpha.unsqueeze(-1)  # (batch_size, seq_len, 1)</span><br><span class="line">        </span><br><span class="line">        # 加权得到上下文向量</span><br><span class="line">        context = torch.sum(alpha_expanded * lstm_out, dim=1)  # (batch_size, 2*hidden_dim)</span><br><span class="line">        </span><br><span class="line">        # 分类</span><br><span class="line">        out = self.classifier(context).squeeze(-1)  # (batch_size,)</span><br><span class="line">        return out, alpha</span><br><span class="line"></span><br><span class="line"># 3. 训练函数</span><br><span class="line">def train_model(model, train_loader, val_loader, config):</span><br><span class="line">    model.to(config.device)</span><br><span class="line">    criterion = nn.BCELoss()</span><br><span class="line">    optimizer = optim.Adam(model.parameters(), lr=config.lr)</span><br><span class="line">    </span><br><span class="line">    best_val_loss = float(&#x27;inf&#x27;)</span><br><span class="line">    patience_counter = 0</span><br><span class="line">    </span><br><span class="line">    train_losses = []</span><br><span class="line">    val_losses = []</span><br><span class="line">    </span><br><span class="line">    for epoch in range(config.num_epochs):</span><br><span class="line">        # 训练阶段</span><br><span class="line">        model.train()</span><br><span class="line">        train_loss = 0.0</span><br><span class="line">        for batch_X, batch_y in train_loader:</span><br><span class="line">            batch_X, batch_y = batch_X.to(config.device), batch_y.to(config.device)</span><br><span class="line">            </span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            outputs, _ = model(batch_X)</span><br><span class="line">            loss = criterion(outputs, batch_y)</span><br><span class="line">            loss.backward()</span><br><span class="line">            optimizer.step()</span><br><span class="line">            </span><br><span class="line">            train_loss += loss.item() * batch_X.size(0)</span><br><span class="line">        </span><br><span class="line">        # 计算平均训练损失</span><br><span class="line">        train_loss = train_loss / len(train_loader.dataset)</span><br><span class="line">        train_losses.append(train_loss)</span><br><span class="line">        </span><br><span class="line">        # 验证阶段</span><br><span class="line">        model.eval()</span><br><span class="line">        val_loss = 0.0</span><br><span class="line">        with torch.no_grad():</span><br><span class="line">            for batch_X, batch_y in val_loader:</span><br><span class="line">                batch_X, batch_y = batch_X.to(config.device), batch_y.to(config.device)</span><br><span class="line">                outputs, _ = model(batch_X)</span><br><span class="line">                loss = criterion(outputs, batch_y)</span><br><span class="line">                val_loss += loss.item() * batch_X.size(0)</span><br><span class="line">        </span><br><span class="line">        val_loss = val_loss / len(val_loader.dataset)</span><br><span class="line">        val_losses.append(val_loss)</span><br><span class="line">        </span><br><span class="line">        print(f&#x27;Epoch &#123;epoch+1&#125;/&#123;config.num_epochs&#125; | Train Loss: &#123;train_loss:.4f&#125; | Val Loss: &#123;val_loss:.4f&#125;&#x27;)</span><br><span class="line">        </span><br><span class="line">        # 早停检查</span><br><span class="line">        if val_loss &lt; best_val_loss:</span><br><span class="line">            best_val_loss = val_loss</span><br><span class="line">            patience_counter = 0</span><br><span class="line">            torch.save(model.state_dict(), &#x27;best_model.pth&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            patience_counter += 1</span><br><span class="line">            if patience_counter &gt;= config.patience:</span><br><span class="line">                print(f&#x27;Early stopping at epoch &#123;epoch+1&#125;&#x27;)</span><br><span class="line">                break</span><br><span class="line">    </span><br><span class="line">    # 加载最佳模型</span><br><span class="line">    model.load_state_dict(torch.load(&#x27;best_model.pth&#x27;))</span><br><span class="line">    return model, train_losses, val_losses</span><br><span class="line"></span><br><span class="line"># 4. 评估函数</span><br><span class="line">def evaluate_model(model, test_loader, config):</span><br><span class="line">    model.eval()</span><br><span class="line">    y_true = []</span><br><span class="line">    y_pred = []</span><br><span class="line">    y_score = []</span><br><span class="line">    </span><br><span class="line">    with torch.no_grad():</span><br><span class="line">        for batch_X, batch_y in test_loader:</span><br><span class="line">            batch_X, batch_y = batch_X.to(config.device), batch_y.to(config.device)</span><br><span class="line">            outputs, _ = model(batch_X)</span><br><span class="line">            </span><br><span class="line">            # 收集真实标签和预测概率</span><br><span class="line">            y_true.extend(batch_y.cpu().numpy())</span><br><span class="line">            y_score.extend(outputs.cpu().numpy())</span><br><span class="line">            y_pred.extend((outputs &gt; 0.5).float().cpu().numpy())</span><br><span class="line">    </span><br><span class="line">    # 计算指标</span><br><span class="line">    acc = accuracy_score(y_true, y_pred)</span><br><span class="line">    prec = precision_score(y_true, y_pred)</span><br><span class="line">    rec = recall_score(y_true, y_pred)</span><br><span class="line">    f1 = f1_score(y_true, y_pred)</span><br><span class="line">    auc = roc_auc_score(y_true, y_score)</span><br><span class="line">    cm = confusion_matrix(y_true, y_pred)</span><br><span class="line">    </span><br><span class="line">    print(f&#x27;Accuracy: &#123;acc:.4f&#125;&#x27;)</span><br><span class="line">    print(f&#x27;Precision: &#123;prec:.4f&#125;&#x27;)</span><br><span class="line">    print(f&#x27;Recall: &#123;rec:.4f&#125;&#x27;)</span><br><span class="line">    print(f&#x27;F1 Score: &#123;f1:.4f&#125;&#x27;)</span><br><span class="line">    print(f&#x27;ROC AUC: &#123;auc:.4f&#125;&#x27;)</span><br><span class="line">    print(&#x27;Confusion Matrix:&#x27;)</span><br><span class="line">    print(cm)</span><br><span class="line">    </span><br><span class="line">    return acc, prec, rec, f1, auc, cm</span><br><span class="line"></span><br><span class="line"># 5. 可视化注意力</span><br><span class="line">def plot_attention(wave, attention_weights, title=&#x27;Attention Visualization&#x27;):</span><br><span class="line">    &quot;&quot;&quot;可视化注意力权重&quot;&quot;&quot;</span><br><span class="line">    wave = wave.squeeze()</span><br><span class="line">    attention_weights = attention_weights.squeeze()</span><br><span class="line">    </span><br><span class="line">    fig, ax1 = plt.subplots(figsize=(12, 4))</span><br><span class="line">    </span><br><span class="line">    # 绘制原始波形</span><br><span class="line">    ax1.plot(wave, &#x27;b-&#x27;, label=&#x27;Signal&#x27;)</span><br><span class="line">    ax1.set_xlabel(&#x27;Time Step&#x27;)</span><br><span class="line">    ax1.set_ylabel(&#x27;Amplitude&#x27;, color=&#x27;b&#x27;)</span><br><span class="line">    ax1.tick_params(&#x27;y&#x27;, colors=&#x27;b&#x27;)</span><br><span class="line">    </span><br><span class="line">    # 绘制注意力权重（红色虚线）</span><br><span class="line">    ax2 = ax1.twinx()</span><br><span class="line">    ax2.plot(attention_weights, &#x27;r--&#x27;, alpha=0.7, label=&#x27;Attention&#x27;)</span><br><span class="line">    ax2.set_ylabel(&#x27;Attention Weight&#x27;, color=&#x27;r&#x27;)</span><br><span class="line">    ax2.tick_params(&#x27;y&#x27;, colors=&#x27;r&#x27;)</span><br><span class="line">    ax2.set_ylim(0, 1.0)</span><br><span class="line">    </span><br><span class="line">    plt.title(title)</span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"># 主函数</span><br><span class="line">def main():</span><br><span class="line">    # 生成数据</span><br><span class="line">    print(&quot;Generating dataset...&quot;)</span><br><span class="line">    X, y = generate_dataset(config)</span><br><span class="line">    </span><br><span class="line">    # 划分训练集、验证集、测试集</span><br><span class="line">    X_train, X_temp, y_train, y_temp = train_test_split(</span><br><span class="line">        X, y, test_size=0.3, random_state=42</span><br><span class="line">    )</span><br><span class="line">    X_val, X_test, y_val, y_test = train_test_split(</span><br><span class="line">        X_temp, y_temp, test_size=0.5, random_state=42</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">    # 创建数据加载器</span><br><span class="line">    train_dataset = TensorDataset(X_train, y_train)</span><br><span class="line">    val_dataset = TensorDataset(X_val, y_val)</span><br><span class="line">    test_dataset = TensorDataset(X_test, y_test)</span><br><span class="line">    </span><br><span class="line">    train_loader = DataLoader(train_dataset, batch_size=config.batch_size, shuffle=True)</span><br><span class="line">    val_loader = DataLoader(val_dataset, batch_size=config.batch_size)</span><br><span class="line">    test_loader = DataLoader(test_dataset, batch_size=config.batch_size)</span><br><span class="line">    </span><br><span class="line">    # 初始化模型</span><br><span class="line">    model = AttentionModel(input_dim=1, hidden_dim=config.hidden_dim)</span><br><span class="line">    </span><br><span class="line">    # 训练模型</span><br><span class="line">    print(&quot;Training model...&quot;)</span><br><span class="line">    model, train_losses, val_losses = train_model(model, train_loader, val_loader, config)</span><br><span class="line">    </span><br><span class="line">    # 评估模型</span><br><span class="line">    print(&quot;\nEvaluating model on test set...&quot;)</span><br><span class="line">    evaluate_model(model, test_loader, config)</span><br><span class="line">    </span><br><span class="line">    # 可视化训练过程</span><br><span class="line">    plt.figure(figsize=(10, 5))</span><br><span class="line">    plt.plot(train_losses, label=&#x27;Train Loss&#x27;)</span><br><span class="line">    plt.plot(val_losses, label=&#x27;Validation Loss&#x27;)</span><br><span class="line">    plt.xlabel(&#x27;Epochs&#x27;)</span><br><span class="line">    plt.ylabel(&#x27;Loss&#x27;)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.title(&#x27;Training and Validation Loss&#x27;)</span><br><span class="line">    plt.show()</span><br><span class="line">    </span><br><span class="line">    # 可视化注意力机制</span><br><span class="line">    print(&quot;\nVisualizing attention for sample examples...&quot;)</span><br><span class="line">    model.eval()</span><br><span class="line">    with torch.no_grad():</span><br><span class="line">        # 随机选择一些测试样本</span><br><span class="line">        indices = np.random.choice(len(test_dataset), 4, replace=False)</span><br><span class="line">        for i in indices:</span><br><span class="line">            sample_X, sample_y = test_dataset[i]</span><br><span class="line">            sample_X = sample_X.unsqueeze(0).to(config.device)  # 增加批次维度</span><br><span class="line">            _, attention_weights = model(sample_X)</span><br><span class="line">            </span><br><span class="line">            # 转换回CPU和numpy</span><br><span class="line">            sample_X = sample_X.cpu().numpy().squeeze()</span><br><span class="line">            attention_weights = attention_weights.cpu().numpy().squeeze()</span><br><span class="line">            </span><br><span class="line">            # 绘制</span><br><span class="line">            title = f&quot;Sample &#123;i&#125; - &#123;&#x27;Anomaly&#x27; if sample_y.item() == 1 else &#x27;Normal&#x27;&#125;&quot;</span><br><span class="line">            plot_attention(sample_X, attention_weights, title)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ai</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python脚本下载连续波形数据</title>
    <url>/download-continuous-seis.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> obspy <span class="keyword">import</span> UTCDateTime, Stream</span><br><span class="line"><span class="keyword">from</span> obspy.clients.fdsn <span class="keyword">import</span> Client</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ConnectionError, Timeout</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">client = Client(<span class="string">&quot;IRIS&quot;</span>)</span><br><span class="line">output_dir = <span class="string">&quot;global_data&quot;</span></span><br><span class="line">os.makedirs(output_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">sta_file = <span class="string">&quot;station.lst&quot;</span></span><br><span class="line">start_date = UTCDateTime(<span class="string">&quot;2013-01-01&quot;</span>)</span><br><span class="line">end_date = UTCDateTime(<span class="string">&quot;2024-01-01&quot;</span>)  <span class="comment"># 包括该天</span></span><br><span class="line">thread_workers = <span class="number">20</span></span><br><span class="line">exception_log = <span class="string">&quot;exceptions.txt&quot;</span></span><br><span class="line">timing_log = <span class="string">&quot;download_time.txt&quot;</span></span><br><span class="line">max_retries = <span class="number">5</span>  <span class="comment"># 最大重试次数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;📁 当前工作目录: <span class="subst">&#123;os.getcwd()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;📁 波形保存路径: <span class="subst">&#123;os.path.abspath(output_dir)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取台站列表</span></span><br><span class="line">sta_list = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(sta_file, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> sf:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sf:</span><br><span class="line">        <span class="keyword">if</span> line.strip() <span class="keyword">and</span> <span class="keyword">not</span> line.strip().startswith(<span class="string">&quot;#&quot;</span>):</span><br><span class="line">            parts = line.strip().split()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(parts) &gt;= <span class="number">2</span>:</span><br><span class="line">                net, sta = parts[<span class="number">0</span>], parts[<span class="number">1</span>]</span><br><span class="line">                sta_list.append((net, sta))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_station</span>(<span class="params">net, sta, day</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    下载单个台站某天波形数据，去仪器响应，返回Stream</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    start = UTCDateTime(day)</span><br><span class="line">    end = start + <span class="number">86400</span></span><br><span class="line">    st = client.get_waveforms(net, sta, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;LH?&quot;</span>, start, end, attach_response=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    st.remove_response(output=<span class="string">&quot;VEL&quot;</span>, pre_filt=(<span class="number">0.008</span>, <span class="number">0.01</span>, <span class="number">0.3</span>, <span class="number">0.4</span>),</span><br><span class="line">                       taper=<span class="literal">True</span>, zero_mean=<span class="literal">True</span>, taper_fraction=<span class="number">0.05</span>)</span><br><span class="line">    <span class="keyword">return</span> st</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_day</span>(<span class="params">day</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    下载某天所有台站数据，返回合并Stream和日志信息</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    stream_day = Stream()</span><br><span class="line">    daily_log = []</span><br><span class="line">    log_lines = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(max_workers=thread_workers) <span class="keyword">as</span> executor:</span><br><span class="line">        futures = &#123;executor.submit(download_station, net, sta, day): (net, sta) <span class="keyword">for</span> net, sta <span class="keyword">in</span> sta_list&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(futures):</span><br><span class="line">            net, sta = futures[future]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                st = future.result()</span><br><span class="line">                stream_day += st</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;✅ <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 下载成功（<span class="subst">&#123;<span class="built_in">len</span>(st)&#125;</span> traces）&quot;</span>)</span><br><span class="line">                daily_log.append((net, sta, <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;❌ <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 下载失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">                daily_log.append((net, sta, <span class="number">0</span>))</span><br><span class="line">                log_lines.append(<span class="string">f&quot;<span class="subst">&#123;day.date&#125;</span> <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> ❌ <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stream_day, daily_log, log_lines</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_network_error</span>(<span class="params">e</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    判断异常是否为网络相关异常</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    network_error_types = (ConnectionError, Timeout, socket.timeout, socket.error)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">isinstance</span>(e, network_error_types) <span class="keyword">or</span> <span class="string">&quot;timed out&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span>(e).lower() <span class="keyword">or</span> <span class="string">&quot;connection&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span>(e).lower()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主循环</span></span><br><span class="line">current_day = start_date</span><br><span class="line"><span class="keyword">while</span> current_day &lt;= end_date:</span><br><span class="line">    filename = <span class="string">f&quot;<span class="subst">&#123;current_day.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>.mseed&quot;</span></span><br><span class="line">    filepath = os.path.join(output_dir, filename)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 先判断文件是否存在且非空</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filepath) <span class="keyword">and</span> os.path.getsize(filepath) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n📆 <span class="subst">&#123;current_day.date&#125;</span> 文件已存在且非空，跳过下载。&quot;</span>)</span><br><span class="line">        current_day += <span class="number">86400</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n📆 正在处理日期: <span class="subst">&#123;current_day.date&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    attempt = <span class="number">0</span></span><br><span class="line">    success = <span class="literal">False</span></span><br><span class="line">    day_start_time = time.time()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> attempt &lt; max_retries <span class="keyword">and</span> <span class="keyword">not</span> success:</span><br><span class="line">        attempt += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;🔄 尝试第 <span class="subst">&#123;attempt&#125;</span> 次下载 <span class="subst">&#123;current_day.date&#125;</span> ...&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            stream_day, daily_log, log_lines = download_day(current_day)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(stream_day) == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;⚠️ <span class="subst">&#123;current_day.date&#125;</span> 没有下载到数据，准备重试...&quot;</span>)</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">&quot;下载数据为空&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 保存合并后的波形</span></span><br><span class="line">            stream_day.write(filepath, <span class="built_in">format</span>=<span class="string">&quot;MSEED&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;💾 <span class="subst">&#123;filename&#125;</span> 保存成功（共 <span class="subst">&#123;<span class="built_in">len</span>(stream_day)&#125;</span> traces）&quot;</span>)</span><br><span class="line">            success = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 写入异常日志</span></span><br><span class="line">            <span class="keyword">if</span> log_lines:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(exception_log, <span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> elog:</span><br><span class="line">                    elog.write(<span class="string">&quot;\n&quot;</span>.join(log_lines) + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;❌ 下载异常: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 判断是否为网络错误</span></span><br><span class="line">            <span class="keyword">if</span> is_network_error(e):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;🌐 网络异常，等待5秒后重试...&quot;</span>)</span><br><span class="line">                time.sleep(<span class="number">5</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;⚠️ 非网络异常，仍将重试...&quot;</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下载耗时记录</span></span><br><span class="line">    day_duration = time.time() - day_start_time</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(timing_log, <span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> tlog:</span><br><span class="line">        tlog.write(<span class="string">f&quot;<span class="subst">&#123;current_day.date&#125;</span>: <span class="subst">&#123;day_duration:<span class="number">.2</span>f&#125;</span> seconds\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> success:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;❌ <span class="subst">&#123;current_day.date&#125;</span> 下载失败，超过最大重试次数。请检查网络或日志。&quot;</span>)</span><br><span class="line"></span><br><span class="line">    current_day += <span class="number">86400</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这个脚本实现的功能包括：</p>
<ul>
<li>下载台站列表station.lst的2013-01-01到2024-01-01，LH?数据。</li>
<li>每天的数据存储为global_data&#x2F;YYYYMMDD.mseed。</li>
<li>去仪器响应，保留VEL，滤波频率为0.008, 0.01, 0.3, 0.4。</li>
<li>记录每天数据下载的耗时，保存在“download_time.txt”中。</li>
<li>判断是否是网络中断错误，如果是则做5次尝试重新下载，每次间隔5秒。</li>
<li>判断当天数据是否已经被下载，如果没有或者大小是0则开始下载。</li>
<li>将错误输出到exceptions.txt中。</li>
<li>每天数据下载时，启用20个进程进行下载。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>统计数据下载情况</title>
    <url>/statistic-data-download.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;数据下载好后需要统计下载的情况，这是python脚本。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> obspy <span class="keyword">import</span> read</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.cm <span class="keyword">as</span> cm</span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdates</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">from</span> matplotlib.transforms <span class="keyword">import</span> blended_transform_factory</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 配置 =====</span></span><br><span class="line">data_dir = <span class="string">&quot;daily_waveforms&quot;</span>  <span class="comment"># 存放YYYYMMDD.mseed文件目录</span></span><br><span class="line">station_file = <span class="string">&quot;station.list&quot;</span>  <span class="comment"># 台站列表，格式：NET STA（两列）</span></span><br><span class="line">components = [<span class="string">&quot;LHZ&quot;</span>, <span class="string">&quot;LHN&quot;</span>, <span class="string">&quot;LHE&quot;</span>]</span><br><span class="line">start_year = <span class="number">2020</span></span><br><span class="line">end_year = <span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 读取台站列表 =====</span></span><br><span class="line">stations = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(station_file, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="keyword">if</span> line.strip():</span><br><span class="line">            net, sta = line.strip().split()[:<span class="number">2</span>]</span><br><span class="line">            stations.append((net, sta))</span><br><span class="line"></span><br><span class="line">station_set = <span class="built_in">set</span>(<span class="string">f&quot;<span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span>&quot;</span> <span class="keyword">for</span> net, sta <span class="keyword">in</span> stations)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 初始化 =====</span></span><br><span class="line">station_dates = &#123;comp: defaultdict(<span class="built_in">set</span>) <span class="keyword">for</span> comp <span class="keyword">in</span> components&#125;  <span class="comment"># comp -&gt; &#123;net.sta -&gt; set(date)&#125;</span></span><br><span class="line">station_file_sizes = defaultdict(<span class="built_in">int</span>)  <span class="comment"># 台站对应所有文件大小</span></span><br><span class="line">total_files = <span class="number">0</span></span><br><span class="line">total_file_size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 遍历所有mseed文件 =====</span></span><br><span class="line">all_files = <span class="built_in">sorted</span>(f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(data_dir) <span class="keyword">if</span> f.endswith(<span class="string">&quot;.mseed&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> all_files:</span><br><span class="line">    filepath = os.path.join(data_dir, filename)</span><br><span class="line"></span><br><span class="line">    size = os.path.getsize(filepath)</span><br><span class="line">    total_files += <span class="number">1</span></span><br><span class="line">    total_file_size += size</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        st = read(filepath)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;读取文件失败 <span class="subst">&#123;filename&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析文件日期 YYYYMMDD</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file_date = dt.strptime(filename[:<span class="number">8</span>], <span class="string">&quot;%Y%m%d&quot;</span>).date()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;无法解析日期 <span class="subst">&#123;filename&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> st:</span><br><span class="line">        net = tr.stats.network</span><br><span class="line">        sta = tr.stats.station</span><br><span class="line">        comp = tr.stats.channel[-<span class="number">3</span>:]</span><br><span class="line"></span><br><span class="line">        key = <span class="string">f&quot;<span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> station_set:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> comp <span class="keyword">not</span> <span class="keyword">in</span> components:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        station_dates[comp][key].add(file_date)</span><br><span class="line">        station_file_sizes[key] += size</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;共计读取文件数: <span class="subst">&#123;total_files&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;所有文件总大小: <span class="subst">&#123;total_file_size / (<span class="number">1024</span>**<span class="number">2</span>):<span class="number">.2</span>f&#125;</span> MB&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 删除无有效数据台站 =====</span></span><br><span class="line"><span class="keyword">for</span> comp <span class="keyword">in</span> components:</span><br><span class="line">    keys_to_remove = [k <span class="keyword">for</span> k, dates <span class="keyword">in</span> station_dates[comp].items() <span class="keyword">if</span> <span class="built_in">len</span>(dates) == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys_to_remove:</span><br><span class="line">        <span class="keyword">del</span> station_dates[comp][k]</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 输出有效天数统计文本 =====</span></span><br><span class="line"><span class="keyword">for</span> comp <span class="keyword">in</span> components:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;station_day_count_<span class="subst">&#123;comp&#125;</span>.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">sorted</span>(station_dates[comp].keys()):</span><br><span class="line">            f.write(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span> <span class="subst">&#123;<span class="built_in">len</span>(station_dates[comp][key])&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 台网颜色映射 =====</span></span><br><span class="line">all_nets = <span class="built_in">sorted</span>(<span class="built_in">set</span>(net <span class="keyword">for</span> net, sta <span class="keyword">in</span> stations))</span><br><span class="line">net_color_map = &#123;net: cm.get_cmap(<span class="string">&quot;tab20&quot;</span>)(i / <span class="built_in">max</span>(<span class="built_in">len</span>(all_nets)-<span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">for</span> i, net <span class="keyword">in</span> <span class="built_in">enumerate</span>(all_nets)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 绘图函数 =====</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_component_availability</span>(<span class="params">comp, station_dates_comp</span>):</span><br><span class="line">    valid_stations = <span class="built_in">sorted</span>(station_dates_comp.keys(), key=<span class="keyword">lambda</span> x: (x.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>], x.split(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">14</span>, <span class="built_in">max</span>(<span class="number">6</span>, <span class="number">0.3</span> * <span class="built_in">len</span>(valid_stations))))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">to_datetime</span>(<span class="params">d</span>):</span><br><span class="line">        <span class="keyword">return</span> dt(d.year, d.month, d.day)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> idx, key <span class="keyword">in</span> <span class="built_in">enumerate</span>(valid_stations):</span><br><span class="line">        net = key.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        dates = <span class="built_in">sorted</span>(station_dates_comp[key])</span><br><span class="line">        x_vals = [to_datetime(d) <span class="keyword">for</span> d <span class="keyword">in</span> dates]</span><br><span class="line">        ax.plot(x_vals, [idx]*<span class="built_in">len</span>(dates), <span class="string">&quot;.&quot;</span>, color=net_color_map[net], markersize=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    ax.set_xlabel(<span class="string">&quot;时间&quot;</span>)</span><br><span class="line">    ax.set_ylabel(<span class="string">&quot;台站&quot;</span>)</span><br><span class="line">    ax.set_yticks(<span class="built_in">range</span>(<span class="built_in">len</span>(valid_stations)))</span><br><span class="line">    ax.set_yticklabels(valid_stations, fontsize=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    ax.grid(<span class="literal">True</span>, linestyle=<span class="string">&quot;:&quot;</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    x_start = dt(start_year, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    x_end = dt(end_year, <span class="number">12</span>, <span class="number">31</span>)</span><br><span class="line">    ax.set_xlim(x_start, x_end)</span><br><span class="line"></span><br><span class="line">    ax.xaxis.set_major_locator(mdates.YearLocator())</span><br><span class="line">    ax.xaxis.set_major_formatter(mdates.DateFormatter(<span class="string">&quot;%Y&quot;</span>))</span><br><span class="line"></span><br><span class="line">    plt.tight_layout(rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.85</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 右侧外部标注台网名</span></span><br><span class="line">    trans = blended_transform_factory(ax.transAxes, ax.transData)</span><br><span class="line">    net_indices = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">    <span class="keyword">for</span> idx, key <span class="keyword">in</span> <span class="built_in">enumerate</span>(valid_stations):</span><br><span class="line">        net = key.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        net_indices[net].append(idx)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> net, indices <span class="keyword">in</span> net_indices.items():</span><br><span class="line">        mid_idx = indices[<span class="built_in">len</span>(indices)//<span class="number">2</span>]</span><br><span class="line">        color = net_color_map[net]</span><br><span class="line">        ax.text(<span class="number">1.02</span>, mid_idx, net, color=color, fontsize=<span class="number">8</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>,</span><br><span class="line">                verticalalignment=<span class="string">&#x27;center&#x27;</span>, horizontalalignment=<span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">                transform=trans)</span><br><span class="line"></span><br><span class="line">    plt.savefig(<span class="string">f&quot;<span class="subst">&#123;comp&#125;</span>_availability_2013_2022.png&quot;</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">    plt.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;已保存图像: <span class="subst">&#123;comp&#125;</span>_availability_2013_2022.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 画三分量图 =====</span></span><br><span class="line"><span class="keyword">for</span> comp <span class="keyword">in</span> components:</span><br><span class="line">    plot_component_availability(comp, station_dates[comp])</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 台网统计 =====</span></span><br><span class="line">network_stats = defaultdict(<span class="keyword">lambda</span>: &#123;<span class="string">&quot;total&quot;</span>: <span class="number">0</span>, <span class="string">&quot;valid&quot;</span>: <span class="number">0</span>, <span class="string">&quot;day_counts&quot;</span>: []&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> net, sta <span class="keyword">in</span> stations:</span><br><span class="line">    network_stats[net][<span class="string">&quot;total&quot;</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">all_valid_keys = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> comp <span class="keyword">in</span> components:</span><br><span class="line">    all_valid_keys.update(station_dates[comp].keys())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> all_valid_keys:</span><br><span class="line">    net = key.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">    days_list = [<span class="built_in">len</span>(station_dates[comp].get(key, [])) <span class="keyword">for</span> comp <span class="keyword">in</span> components]</span><br><span class="line">    valid_days = <span class="built_in">max</span>(days_list)</span><br><span class="line">    network_stats[net][<span class="string">&quot;valid&quot;</span>] += <span class="number">1</span></span><br><span class="line">    network_stats[net][<span class="string">&quot;day_counts&quot;</span>].append(valid_days)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n台网统计汇总：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;<span class="string">&#x27;Net&#x27;</span>:&lt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;Total&#x27;</span>:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;Valid&#x27;</span>:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;AvgDays&#x27;</span>:&gt;<span class="number">10</span>&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">32</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;network_summary_all_components.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">f&quot;<span class="subst">&#123;<span class="string">&#x27;Net&#x27;</span>:&lt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;Total&#x27;</span>:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;Valid&#x27;</span>:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;<span class="string">&#x27;AvgDays&#x27;</span>:&gt;<span class="number">10</span>&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> net <span class="keyword">in</span> <span class="built_in">sorted</span>(network_stats.keys()):</span><br><span class="line">        total = network_stats[net][<span class="string">&quot;total&quot;</span>]</span><br><span class="line">        valid = network_stats[net][<span class="string">&quot;valid&quot;</span>]</span><br><span class="line">        avg_days = np.mean(network_stats[net][<span class="string">&quot;day_counts&quot;</span>]) <span class="keyword">if</span> network_stats[net][<span class="string">&quot;day_counts&quot;</span>] <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        line = <span class="string">f&quot;<span class="subst">&#123;net:&lt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;total:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;valid:&gt;<span class="number">6</span>&#125;</span> <span class="subst">&#123;avg_days:&gt;<span class="number">10.1</span>f&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line">        f.write(line + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 总结 =====</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n文件总数: <span class="subst">&#123;total_files&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;文件总大小: <span class="subst">&#123;total_file_size/(<span class="number">1024</span>**<span class="number">2</span>):<span class="number">.2</span>f&#125;</span> MB (<span class="subst">&#123;total_file_size/(<span class="number">1024</span>**<span class="number">3</span>):<span class="number">.2</span>f&#125;</span> GB)&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这个脚本实现的功能包括：</p>
<ul>
<li>统计开始时间start_year到结束时间end_year的数据下载情况</li>
<li>对LHZ、LHN和LHE分别进行统计。</li>
<li>对统计结果进行可视化输出。</li>
<li>横轴是时间，纵轴是台站名。不同台网用不同颜色标出。在图右侧标出台网名。</li>
<li>输出文件network_summary_all_components.txt，给出台网包含台站数目，有效台站数目和各自平均天数。</li>
<li>输出文件station_day_count_{comp}.txt，给出台站名和有效天数。</li>
<li>输出文件总数，文件总大小。</li>
</ul>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python脚本下载连续波形数据更新</title>
    <url>/download-continous-data-update.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> obspy <span class="keyword">import</span> UTCDateTime, Stream, Trace</span><br><span class="line"><span class="keyword">from</span> obspy.io.sac <span class="keyword">import</span> SACTrace</span><br><span class="line"><span class="keyword">from</span> obspy.clients.fdsn <span class="keyword">import</span> Client</span><br><span class="line"><span class="keyword">from</span> obspy.signal.rotate <span class="keyword">import</span> rotate_ne_rt</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置</span></span><br><span class="line">client = Client(<span class="string">&quot;IRIS&quot;</span>)</span><br><span class="line">output_dir = <span class="string">&quot;daily_waveforms&quot;</span></span><br><span class="line">os.makedirs(output_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">sta_file = <span class="string">&quot;station.list&quot;</span></span><br><span class="line">start_date = UTCDateTime(<span class="string">&quot;2023-09-16&quot;</span>)</span><br><span class="line">end_date = UTCDateTime(<span class="string">&quot;2023-09-27&quot;</span>)  <span class="comment"># 包括该天</span></span><br><span class="line">thread_workers = <span class="number">6</span></span><br><span class="line">exception_log = <span class="string">&quot;exceptions.txt&quot;</span></span><br><span class="line">sampling_rate = <span class="number">1.0</span>  <span class="comment"># LH通道的采样率 (1 Hz)</span></span><br><span class="line">expected_npts = <span class="number">86400</span>  <span class="comment"># 86400秒 * 1Hz采样率</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印工作目录与输出目录</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;📁📁📁📁 当前工作目录: <span class="subst">&#123;os.getcwd()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;📁📁📁📁 保存路径: <span class="subst">&#123;os.path.abspath(output_dir)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取台站列表</span></span><br><span class="line">sta_list = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(sta_file, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> sf:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> sf:</span><br><span class="line">        <span class="keyword">if</span> line.strip() <span class="keyword">and</span> <span class="keyword">not</span> line.strip().startswith(<span class="string">&quot;#&quot;</span>):</span><br><span class="line">            parts = line.strip().split()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(parts) &gt;= <span class="number">2</span>:</span><br><span class="line">                net, sta = parts[<span class="number">0</span>], parts[<span class="number">1</span>]</span><br><span class="line">                sta_list.append((net, sta))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录异常到文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log_exception</span>(<span class="params">msg</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(exception_log, <span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">f&quot;<span class="subst">&#123;UTCDateTime.now().isoformat()&#125;</span> - <span class="subst">&#123;msg&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存为SAC文件（每个通道一个文件）</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_channel_sac</span>(<span class="params">tr, day_dir, net, sta, station_coords</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 确保目录存在</span></span><br><span class="line">        os.makedirs(day_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 文件名格式: NET_STA_CHAN.SAC</span></span><br><span class="line">        chan = tr.stats.channel</span><br><span class="line">        filename = <span class="string">f&quot;<span class="subst">&#123;net&#125;</span>_<span class="subst">&#123;sta&#125;</span>_<span class="subst">&#123;chan&#125;</span>.SAC&quot;</span></span><br><span class="line">        filepath = os.path.join(day_dir, filename)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建SACTrace对象</span></span><br><span class="line">        sac = SACTrace.from_obspy_trace(tr)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置台站信息</span></span><br><span class="line">        sac.kstnm = sta</span><br><span class="line">        sac.knetwk = net</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置坐标信息</span></span><br><span class="line">        <span class="keyword">if</span> station_coords <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            sac.stla = station_coords[<span class="string">&quot;latitude&quot;</span>]</span><br><span class="line">            sac.stlo = station_coords[<span class="string">&quot;longitude&quot;</span>]</span><br><span class="line">            sac.stel = station_coords[<span class="string">&quot;elevation&quot;</span>]</span><br><span class="line">            sac.stdp = station_coords.get(<span class="string">&quot;local_depth&quot;</span>, <span class="number">0.0</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;    ✅ 添加坐标: <span class="subst">&#123;sac.stla:<span class="number">.4</span>f&#125;</span>, <span class="subst">&#123;sac.stlo:<span class="number">.4</span>f&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sac.stla = <span class="number">0.0</span></span><br><span class="line">            sac.stlo = <span class="number">0.0</span></span><br><span class="line">            sac.stel = <span class="number">0.0</span></span><br><span class="line">            sac.stdp = <span class="number">0.0</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;    ⚠⚠⚠️ 无坐标信息&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 保存文件</span></span><br><span class="line">        sac.write(filepath)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;  保存: <span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> filepath</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        log_exception(<span class="string">f&quot;保存SAC文件失败 <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span>.<span class="subst">&#123;chan&#125;</span>: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据补零处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fill_gaps</span>(<span class="params">tr, start_time</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    确保数据有完整的86400个点，缺失部分补零</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建新的头信息</span></span><br><span class="line">        new_header = tr.stats.copy()</span><br><span class="line">        new_header.starttime = start_time  <span class="comment"># 确保从当天00:00:00开始</span></span><br><span class="line">        new_header.npts = expected_npts</span><br><span class="line">        new_header.sampling_rate = sampling_rate</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建全零数据数组</span></span><br><span class="line">        new_data = np.zeros(expected_npts, dtype=tr.data.dtype)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 计算数据偏移量（当前数据在当天中的起始位置）</span></span><br><span class="line">        start_diff = <span class="built_in">int</span>((tr.stats.starttime - start_time))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 确保偏移量在合理范围内</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= start_diff &lt; expected_npts:</span><br><span class="line">            end_index = <span class="built_in">min</span>(start_diff + tr.stats.npts, expected_npts)</span><br><span class="line">            valid_length = end_index - start_diff</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 将实际数据复制到全零数组的相应位置</span></span><br><span class="line">            <span class="keyword">if</span> valid_length &gt; <span class="number">0</span>:</span><br><span class="line">                new_data[start_diff:end_index] = tr.data[:valid_length]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建新的Trace</span></span><br><span class="line">        <span class="keyword">return</span> Trace(data=new_data, header=new_header)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        log_exception(<span class="string">f&quot;数据补零失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> tr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 旋转LH1/LH2分量到LHE/LHN</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotate_to_EN</span>(<span class="params">tr1, tr2</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;将两个水平分量(LH1/LH2)旋转到地理坐标系(LHE/LHN)&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 假设LH1是北分量，LH2是东分量</span></span><br><span class="line">        north = tr1.data</span><br><span class="line">        east = tr2.data</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 旋转分量</span></span><br><span class="line">        n, e = rotate_ne_rt(north, east, <span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建新的Trace对象</span></span><br><span class="line">        trN = Trace(data=n)</span><br><span class="line">        trN.stats = tr1.stats.copy()</span><br><span class="line">        trN.stats.channel = <span class="string">&quot;LHN&quot;</span></span><br><span class="line">        </span><br><span class="line">        trE = Trace(data=e)</span><br><span class="line">        trE.stats = tr2.stats.copy()</span><br><span class="line">        trE.stats.channel = <span class="string">&quot;LHE&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> trN, trE</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        log_exception(<span class="string">f&quot;旋转分量失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> tr1, tr2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理水平分量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_horizontal_components</span>(<span class="params">st</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    处理水平分量：</span></span><br><span class="line"><span class="string">    1. 如果只有LH1和LH2，旋转为LHE和LHN，并删除原始的极LH1/LH2</span></span><br><span class="line"><span class="string">    2. 如果存在LHN和LHE，优先使用它们，并删除任何LH1/LH2分量</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 按通道类型分组</span></span><br><span class="line">        comp_groups = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> st:</span><br><span class="line">            comp_groups[tr.stats.channel].append(tr)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理水平分量</span></span><br><span class="line">        horizontal_stream = Stream()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 优先选择LHN和LHE分量</span></span><br><span class="line">        en_comps = [<span class="string">&quot;LHE&quot;</span>, <span class="string">&quot;LHN&quot;</span>]</span><br><span class="line">        has_EN = <span class="built_in">any</span>(comp <span class="keyword">in</span> comp_groups <span class="keyword">for</span> comp <span class="keyword">in</span> en_comps)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> has_EN:</span><br><span class="line">            <span class="comment"># 使用已有的LHN/LHE分量（只取第一个）</span></span><br><span class="line">            <span class="keyword">for</span> comp <span class="keyword">in</span> en_comps:</span><br><span class="line">                <span class="keyword">if</span> comp <span class="keyword">in</span> comp_groups:</span><br><span class="line">                    horizontal_stream.append(comp_groups[comp][<span class="number">0</span>])</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;  使用现有的LHN/LHE分量&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 删除任何存在的LH1/LH2分量</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;LH1&quot;</span> <span class="keyword">in</span> comp_groups <span class="keyword">or</span> <span class="string">&quot;LH2&quot;</span> <span class="keyword">in</span> comp_groups:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;  删除原始的LH1/LH2分量&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 检查是否有LH1和LH2</span></span><br><span class="line">            rt_comps = [<span class="string">&quot;LH1&quot;</span>, <span class="string">&quot;LH2&quot;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">all</span>(comp <span class="keyword">in</span> comp_groups <span class="keyword">for</span> comp <span class="keyword">in</span> rt_comps):</span><br><span class="line">                <span class="comment"># 获取LH1和LH2分量（只取第一个）</span></span><br><span class="line">                lh1 = comp_groups[<span class="string">&quot;LH1&quot;</span>][<span class="number">0</span>]</span><br><span class="line">                lh2 = comp_groups[<span class="string">&quot;LH2&quot;</span>][<span class="number">0</span>]</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 旋转到EN分量</span></span><br><span class="line">                trN, trE = rotate_to_EN(lh1, lh2)</span><br><span class="line">                horizontal_stream.append(trN)</span><br><span class="line">                horizontal_stream.append(trE)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;  旋转LH1/LH2为LHN/LHE&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 删除原始的LH1/LH2分量</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;  删除原始的LH1/LH2分量&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> horizontal_stream</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        log_exception(<span class="string">f&quot;处理水平分量失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> Stream()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并处理单个台站某天的数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_station</span>(<span class="params">net, sta, day</span>):</span><br><span class="line">    station_coords = <span class="literal">None</span>  <span class="comment"># 存储台站坐标</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        start = UTCDateTime(day)</span><br><span class="line">        end = start + <span class="number">86400</span></span><br><span class="line">        day_str = start.strftime(<span class="string">&quot;%Y%m%d&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取台站元数据</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;  获取 <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 元数据...&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            inv = client.get_stations(</span><br><span class="line">                network=net, </span><br><span class="line">                station=sta, </span><br><span class="line">                starttime=start, </span><br><span class="line">                endtime=end, </span><br><span class="line">                level=<span class="string">&quot;channel&quot;</span></span><br><span class="line">            )</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 尝试获取台站坐标（使用LHZ通道）</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                station_coords = inv.get_coordinates(<span class="string">f&quot;<span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span>.00.LHZ&quot;</span>, start)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;    ✅ 获取坐标: <span class="subst">&#123;station_coords[<span class="string">&#x27;latitude&#x27;</span>]:<span class="number">.4</span>f&#125;</span>, <span class="subst">&#123;station_coords[<span class="string">&#x27;longitude&#x27;</span>]:<span class="number">.4</span>f&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="comment"># 如果LHZ失败，尝试其他LH通道</span></span><br><span class="line">                <span class="keyword">for</span> chan <span class="keyword">in</span> [<span class="string">&quot;LHN&quot;</span>, <span class="string">&quot;LHE&quot;</span>, <span class="string">&quot;LH1&quot;</span>, <span class="string">&quot;LH2&quot;</span>]:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        station_coords = inv.get_coordinates(<span class="string">f&quot;<span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span>.00.<span class="subst">&#123;chan&#125;</span>&quot;</span>, start)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;    ✅ 获取坐标: <span class="subst">&#123;station_coords[<span class="string">&#x27;latitude&#x27;</span>]:<span class="number">.4</span>f&#125;</span>, <span class="subst">&#123;station_coords[<span class="string">&#x27;longitude&#x27;</span>]:<span class="number">.4</span>f&#125;</span>&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> station_coords <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;    ⚠⚠⚠️ 无法获取坐标&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;  ⚠⚠⚠️ 元数据获取失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 下载波形数据</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;  下载 <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 波形数据...&quot;</span>)</span><br><span class="line">        st = client.get_waveforms(net, sta, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;LH?&quot;</span>, start, end, attach_response=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果没数据，直接返回</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(st) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> (net, sta, <span class="literal">False</span>, <span class="string">&quot;无数据&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查是否有LHZ分量（只取第一个）</span></span><br><span class="line">        vertical_st = st.select(channel=<span class="string">&quot;LHZ&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(vertical_st) == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;  ⚠⚠⚠️ 跳过 <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> - 无LHZ分量&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> (net, sta, <span class="literal">False</span>, <span class="string">&quot;无LHZ分量&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 只保留第一个LHZ分量</span></span><br><span class="line">            vertical_tr = vertical_st[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 去除仪器响应</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  去除仪器响应...&quot;</span>)</span><br><span class="line">        st.remove_response(output=<span class="string">&quot;VEL&quot;</span>, pre_filt=(<span class="number">0.008</span>, <span class="number">0.01</span>, <span class="number">0.3</span>, <span class="number">0.4</span>),</span><br><span class="line">                           taper=<span class="literal">True</span>, zero_mean=<span class="literal">True</span>, taper_fraction=<span class="number">0.05</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理水平分量</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  处理水平分量...&quot;</span>)</span><br><span class="line">        horizontal_st = process_horizontal_components(st)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 合并垂直和水平分量</span></span><br><span class="line">        processed_st = Stream([vertical_tr]) + horizontal_st</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 确保只有三个分量：LHZ, LHN, LHE</span></span><br><span class="line">        final_st = Stream()</span><br><span class="line">        channels = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> processed_st:</span><br><span class="line">            <span class="comment"># 只添加LHZ、LHN和LHE分量</span></span><br><span class="line">            <span class="keyword">if</span> tr.stats.channel <span class="keyword">in</span> [<span class="string">&quot;LHZ&quot;</span>, <span class="string">&quot;LHN&quot;</span>, <span class="string">&quot;LHE&quot;</span>]:</span><br><span class="line">                <span class="keyword">if</span> tr.stats.channel <span class="keyword">not</span> <span class="keyword">in</span> channels:</span><br><span class="line">                    final_st.append(tr)</span><br><span class="line">                    channels.add(tr.stats.channel)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;  ⚠⚠⚠️ 跳过重复通道: <span class="subst">&#123;tr.stats.channel&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 数据补零处理</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  数据补零处理...&quot;</span>)</span><br><span class="line">        filled_st = Stream()</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> final_st:</span><br><span class="line">            filled_tr = fill_gaps(tr, start)</span><br><span class="line">            filled_st.append(filled_tr)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建日期目录</span></span><br><span class="line">        day_dir = os.path.join(output_dir, day_str)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 保存每个通道的数据</span></span><br><span class="line">        saved_files = []</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> filled_st:</span><br><span class="line">            filepath = save_channel_sac(tr, day_dir, net, sta, station_coords)</span><br><span class="line">            <span class="keyword">if</span> filepath:</span><br><span class="line">                saved_files.append(filepath)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> (net, sta, <span class="literal">True</span>, saved_files)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        error_msg = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;response&#x27;</span>) <span class="keyword">and</span> e.response <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            error_msg += <span class="string">f&quot; (Status: <span class="subst">&#123;e.response.status_code&#125;</span>)&quot;</span></span><br><span class="line">        <span class="keyword">return</span> (net, sta, <span class="literal">False</span>, error_msg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历日期，按天下载并保存</span></span><br><span class="line">current_day = start_date</span><br><span class="line"><span class="keyword">while</span> current_day &lt;= end_date:</span><br><span class="line">    day_str = current_day.strftime(<span class="string">&quot;%Y%m%d&quot;</span>)</span><br><span class="line">    day_dir = os.path.join(output_dir, day_str)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检查是否已下载</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(day_dir) <span class="keyword">and</span> os.path.isdir(day_dir):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n📆📆📆📆 日期 <span class="subst">&#123;current_day.date&#125;</span> 已存在，跳过处理&quot;</span>)</span><br><span class="line">        <span class="comment"># 进入下一天</span></span><br><span class="line">        current_day += <span class="number">86400</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n📆📆📆📆 正在处理日期: <span class="subst">&#123;current_day.date&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建日期目录</span></span><br><span class="line">    os.makedirs(day_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 异常记录每天追加</span></span><br><span class="line">    log_lines = []</span><br><span class="line">    success_count = <span class="number">0</span></span><br><span class="line">    fail_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动多线程下载当天所有台站数据</span></span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(max_workers=thread_workers) <span class="keyword">as</span> executor:</span><br><span class="line">        futures = &#123;executor.submit(download_station, net, sta, current_day): (net, sta) <span class="keyword">for</span> net, sta <span class="keyword">in</span> sta_list&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(futures):</span><br><span class="line">            net, sta = futures[future]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                net, sta, ok, result = future.result()</span><br><span class="line">                <span class="keyword">if</span> ok:</span><br><span class="line">                    success_count += <span class="number">1</span></span><br><span class="line">                    file_count = <span class="built_in">len</span>(result)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;✅ <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 处理成功 - 保存了 <span class="subst">&#123;file_count&#125;</span> 个SAC文件&quot;</span>)</span><br><span class="line">                    <span class="keyword">for</span> filepath <span class="keyword">in</span> result:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;   ↳↳ <span class="subst">&#123;os.path.basename(filepath)&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fail_count += <span class="number">1</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;❌❌❌❌ <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 处理失败: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">                    log_lines.append(<span class="string">f&quot;<span class="subst">&#123;current_day.date&#125;</span> <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> ❌❌❌❌ <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                fail_count += <span class="number">1</span></span><br><span class="line">                error_msg = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;❌❌❌❌ <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> 异常: <span class="subst">&#123;error_msg&#125;</span>&quot;</span>)</span><br><span class="line">                log_lines.append(<span class="string">f&quot;<span class="subst">&#123;current_day.date&#125;</span> <span class="subst">&#123;net&#125;</span>.<span class="subst">&#123;sta&#125;</span> ❌❌❌❌ <span class="subst">&#123;error_msg&#125;</span>&quot;</span>)</span><br><span class="line">                traceback.print_exc()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n📊📊 本日统计: <span class="subst">&#123;success_count&#125;</span> 个台站成功, <span class="subst">&#123;fail_count&#125;</span> 个台站失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入异常日志</span></span><br><span class="line">    <span class="keyword">if</span> log_lines:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(exception_log, <span class="string">&quot;a&quot;</span>) <span class="keyword">as</span> elog:</span><br><span class="line">            elog.write(<span class="string">&quot;\n&quot;</span>.join(log_lines) + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 进入下一天</span></span><br><span class="line">    current_day += <span class="number">86400</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n🎉🎉 所有日期处理完成!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;此脚本完成以下操作:</p>
<ul>
<li>多线程下载指定定时间段的LH分量数据。</li>
<li>按天保存到同一个文件夹，检查当天的文件是否已经建立，如果已建立则跳过（防止重复下载）。</li>
<li>检查是否有LHZ分量，如果没有则跳过此台。</li>
<li>去除仪器响应，保存为速度记录，滤波到0.008-0.4Hz。</li>
<li>仅保存第一个location（空，00，01）的LHZ，LHE，LHN。</li>
<li>如果同时有LH1,LH2,LHE,LHN则删除LH1,LH2分量。</li>
<li>如果仅有LH1,LH2,则旋转到LHE，LHN，删除LH1,LH2。</li>
<li>如果不足86400则补零，对齐到当天的00:00:00。</li>
<li>保存为SAC格式，文件名为NET_STA_COM.SAC。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>urllib3的问题</title>
    <url>/problem-of-urllib3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;遇到问题不要歪，凡事都来找AI。<br>&emsp;&emsp;于是我把问题贴给了chatGPT，它说：</p>
<ul>
<li>方法1 给urllib3降级，降到1.26.x，可我的就是1.26.16，pass</li>
<li>方法2 更新HinetPy到最新版本，可人家都就是最新版本啊，pass</li>
<li>方法3 手动patch，具体是将client.py中的<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from urllib3.util import create_urllib3_context</span><br></pre></td></tr></table></figure>
&emsp;&emsp;替换为<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from ssl import create_default_context as create_urllib3_context</span><br></pre></td></tr></table></figure>
&emsp;&emsp;看起来挺靠谱的。于是出现了这个问题<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  File &quot;/home/junxie/work/Snet/HinetPy-main/HinetPy/client.py&quot;, line 139, in __init__</span><br><span class="line">    self.login(user, password)</span><br><span class="line">  File &quot;/home/junxie/work/Snet/HinetPy-main/HinetPy/client.py&quot;, line 188, in login</span><br><span class="line">    self.session.mount(self._HINET, AddedCipherAdapter())</span><br><span class="line">  File &quot;/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/requests/adapters.py&quot;, line 155, in __init__</span><br><span class="line">    self.init_poolmanager(pool_connections, pool_maxsize, block=pool_block)</span><br><span class="line">  File &quot;/home/junxie/work/Snet/HinetPy-main/HinetPy/client.py&quot;, line 47, in init_poolmanager</span><br><span class="line">    ctx = create_urllib3_context(ciphers=&quot;:HIGH:!DH:!aNULL&quot;)</span><br><span class="line">TypeError: create_default_context() got an unexpected keyword argument &#x27;ciphers&#x27;</span><br></pre></td></tr></table></figure>
&emsp;&emsp;然后，各种折腾一翻，删除，重装还是不行，看看模块create_urllib3_context<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep create_urllib3_context /home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/*.py</span><br></pre></td></tr></table></figure>
&emsp;&emsp;长这样：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/proxy.py:from .ssl_ import create_urllib3_context, resolve_cert_reqs, resolve_ssl_version</span><br><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/proxy.py:    ssl_context = create_urllib3_context(</span><br><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/ssl_.py:def create_urllib3_context(</span><br><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/ssl_.py:        context = ssl_.create_urllib3_context()</span><br><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/ssl_.py:        be created using :func:create_urllib3_context.</span><br><span class="line">/home/junxie/.conda/envs/py3/lib/python3.9/site-packages/urllib3/util/ssl_.py:        context = create_urllib3_context(ssl_version, cert_reqs, ciphers=ciphers)</span><br></pre></td></tr></table></figure>
&emsp;&emsp;表明urllib3安装是正确的。所以在client.py中，将这一句：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from urllib3.util import create_urllib3_context</span><br></pre></td></tr></table></figure>
&emsp;&emsp;改为：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from urllib3.util.ssl_ import create_urllib3_context</span><br></pre></td></tr></table></figure>
&emsp;&emsp;然后就万事大吉了。总结：不懂就问AI吧，但不好好学习和思考，到头来还是不懂。然而这又有什么关系，只要有AI在，会问AI问题就行了。没AI的话，那就拜拜了。</li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora 40如何安装腾讯会议</title>
    <url>/how-to-install-wemeet.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;那怎么安装呢？<br>&emsp;&emsp;我用了老办法，就是google咯，呃不是，我用的bing。搜索出来的第一条是知乎答案。于是按照说明开始安装了。首先在<a href="https://meeting.tencent.com/download">腾讯主页</a>下载deb安装包。只有deb安装包，看样子还是ubuntu比较流行啊。<br>&emsp;&emsp;接下来按照说明安装alien。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install alien</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;alien可以将deb格式和rpm格式进行转换。还挺不错。转换命令是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo alien -r deb包</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;然后就生成了一个rpm包，就可以安装了。。。吧。。。<br>&emsp;&emsp;不好意思，有依赖问题，怎么都搞不定。<br>&emsp;&emsp;事实上我犯了个错误啊，现在搜索引擎已经落伍了啊。我立马把问题输给了豆包啊。它说可以这么安装：</p>
<ul>
<li>安装Flatpak<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install flatpak</span><br></pre></td></tr></table></figure>
嗯，我已经安装了。什么时候安装的呢。</li>
<li>添加Flathub仓库：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo</span><br></pre></td></tr></table></figure></li>
<li>按转腾讯会议：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flatpak install flathub com.tencent.wemeet</span><br></pre></td></tr></table></figure></li>
<li>运行<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flatpak run com.tencent.wemeet</span><br></pre></td></tr></table></figure></li>
</ul>
<p>&emsp;&emsp;然后。。。安装速度慢的可以啊。我直接Ctrl+C掐了。<br>&emsp;&emsp;然后我在应用中心直接搜wemeet，就出现了WemeetApp，点击就安装了。好用的很。<br>&emsp;&emsp;Linux也变成了点击就运行的玩意儿了啊。</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo下如何画流程图</title>
    <url>/plot-work-flow.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;因为Hexo是用的Markdown的语法，所以是指Markdown的语法。这里我用的是mermaid。用之前需要安装啊。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-filter-mermaid-diagrams --save</span><br></pre></td></tr></table></figure>

<p>然后<br>在三个反引号+mermaid和三个反引号之间输入:</p>
<p>graph TD<br>A[开始] –&gt; B{条件判断}<br>B –&gt;|是| C[操作1]<br>B –&gt;|否| D[操作2]<br>C –&gt; E[结束]<br>D –&gt; E</p>
<p>就会生成:</p>
<pre class="mermaid">graph TD
A[开始] --> B{条件判断}
B -->|是| C[操作1]
B -->|否| D[操作2]
C --> E[结束]
D --> E</pre>
<p>大功告成。</p>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>学习Sequencer</title>
    <url>/run-sequencer.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;什么是Sequencer？具体请参见<a href="https://github.com/dalya/Sequencer/blob/master/Sequencer_paper.pdf">这篇文章</a>。脚本在<a href="https://github.com/dalya/Sequencer">这里</a>。不想看？那就看我得了。</p>
<h1 id="Sequencer是什么？"><a href="#Sequencer是什么？" class="headerlink" title="Sequencer是什么？"></a>Sequencer是什么？</h1><p>Sequencer是一种无监督算法，旨在从复杂数据中自动识别主要的一维连续趋势。它通过分析数据对象之间的相似性图结构，无需预定义特征、参数调整或领域知识，直接处理原始数据（如像素、光谱值）来发现隐藏的全局序列。其核心创新在于：</p>
<ul>
<li>通用性：适用于任意一维数据（光谱、时间序列、图像行等）。</li>
<li>自动化：自动选择最优的相似性度量和分析尺度。</li>
<li>可解释性：输出物理意义明确的序列（如温度梯度、红移序列）。</li>
</ul>
<h1 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h1><ul>
<li>核心思想：最小生成树（MST）的几何特征</li>
<li>关键假设：连续趋势会生成细长的MST，随机数据则产生紧凑的MST。</li>
<li>量化指标：伸长率（Elongation）,$\eta&#x3D;a&#x2F;b$<br>  a：MST平均高度（从最不连通节点到其他节点的最短路径均值）<br>  b：MST平均宽度（按层级分组的节点数均值）</li>
<li>物理意义：$\eta$ 越大，数据越接近一维序列。</li>
</ul>
<h1 id="算法流程"><a href="#算法流程" class="headerlink" title="算法流程"></a>算法流程</h1><pre class="mermaid">graph TD
A[输入数据] --> B[多尺度分割]
B --> C[多度量计算]
C --> D[构建MST]
D --> E[计算η值]
E --> F[加权聚合]
F --> G[全局MST]
G --> H[BFS序列提取]</pre>
<p>&emsp;&emsp;步骤详解如下：</p>
<ol>
<li>多尺度分割<br>   将每个数据对象（如400像素光谱）分割为不同尺度的片段（例：从完整对象到20像素小段）。<br>目的：捕获局部和全局趋势。</li>
<li>多度量计算<br>   对每个（尺度, 片段）组合，用4种度量计算距离矩阵：</li>
</ol>
<ul>
<li>欧氏距离（整体形状）</li>
<li>KL散度（概率分布差异）</li>
<li>地球移动距离（EMD）（位移敏感）</li>
<li>能量距离（分布差异）<br>   为什么多度量？ 不同度量揭示不同特征（如EMD检测谱线位移，欧氏距离捕捉整体形态）。</li>
</ul>
<ol start="3">
<li>MST构建与η计算<br>   对每个（度量, 尺度, 片段）生成距离矩阵$\rightarrow$构建MST$\rightarrow$计算伸长率$ \eta_{klm} $。例（文章图3）：窄脉冲数据在小尺度（l&#x3D;4,5）的欧氏距离获得高$\eta$，指示局部趋势。</li>
<li>信息聚合</li>
</ol>
<ul>
<li>片段聚合：对固定（度量,尺度），用$\eta$加权平均各片段距离矩阵：$ D_{kl}&#x3D;\langle \eta_{klm} \cdot D_{klm}\rangle_{m} $</li>
<li>全局聚合：用$\eta$加权合并所有MST的边，构建全局邻近矩阵：<br>$$ P_{combined}&#x3D;\langle \eta_{kl}\cdot edges(MST_{kl})\rangle_{kl} $$</li>
</ul>
<ol start="5">
<li>序列提取<br>   构建全局MST$\rightarrow$从最不连通节点开始广度优先搜索（BFS），生成最终序列顺序。</li>
</ol>
<h1 id="输出数据的理解"><a href="#输出数据的理解" class="headerlink" title="输出数据的理解"></a>输出数据的理解</h1><ol>
<li>序列顺序：输出为数据对象的有序索引列表，相邻对象在主导度量和尺度下最相似。</li>
<li>物理意义：</li>
</ol>
<ul>
<li>恒星光谱（图4a）：序列对应温度梯度（顶部高温恒星→底部低温恒星）。</li>
<li>类星体光谱（图4b）：序列反映红移变化（谱线系统性位移）。</li>
<li>地震波数据（图5）：序列揭示地理结构差异（沉积盆地→火成岩区）。</li>
</ul>
<ol start="3">
<li>可视化建议：将重排后的数据矩阵按序列索引显示，观察连续变化模式（如移动的谱线、渐变纹理）。</li>
</ol>
<h1 id="使用注意事项"><a href="#使用注意事项" class="headerlink" title="使用注意事项"></a>使用注意事项</h1><ol>
<li>数据预处理<br>* 归一化：算法内部对每个数据段执行总和归一化（sum&#x3D;1），无需额外操作。<br>* 高动态范围数据：建议对数缩放（如亮度值）避免少数像素主导。<br>* 缺失值：需插值或剔除，否则距离度量失效。</li>
<li>计算优化<br>* 大数据集（$ N&gt;10^4 $）：<br>** 启用子采样模式（见7.3节）：<ol>
<li>在小样本（$N_{s}&lt;&lt; N$ ）构建初始序列。</li>
<li>按锚点（$f_{A}N_{s}$）逐步插入剩余点。<br>** 复杂度：从O($N^2$)降至O($N\logN$)。<br>* 并行化：各（度量,尺度,片段）计算相互独立，可并行加速。</li>
</ol>
</li>
<li>结果验证<br>* 检查高$\eta$度量：分析主导趋势的度量（如EMD指示位移，KL散度捕获分布变化）。<br>* 残差分析（见5.1节）：<br> ** 沿序列方向平滑数据$\rightarrow$比较原始值与平滑值的残差。大残差可能指示异常点或次级趋势。<br> ** 对比降维方法：用归一化伸长率$ \eta\prime&#x3D;\eta&#x2F;N $评估t-SNE&#x2F;UMAP结果（图7,8）。</li>
<li>局限性<br>* 噪声敏感：信噪比&lt;5时趋势可能被掩盖（建议先筛选高信噪比子集）。<br>* 多维数据：算法设计为一维输入，需展平多维数据（如将图像转为行向量）。<br>* 序列唯一性：复杂数据可能存在多个有效序列（需领域知识判断主导趋势）。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> obspy <span class="keyword">import</span> read</span><br><span class="line"><span class="keyword">from</span> obspy.signal.cross_correlation <span class="keyword">import</span> correlate</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定文件夹路径和文件匹配模式</span></span><br><span class="line">folder_path = <span class="string">&#x27;./processed_sac/&#x27;</span></span><br><span class="line">file_pattern = os.path.join(folder_path, <span class="string">&#x27;20111122T184816*BHZ*.sac&#x27;</span>)</span><br><span class="line">file_list = <span class="built_in">sorted</span>(glob.glob(file_pattern))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定滤波参数</span></span><br><span class="line">lowcut = <span class="number">0.05</span></span><br><span class="line">highcut = <span class="number">2.0</span></span><br><span class="line">filter_params = &#123;<span class="string">&#x27;lowcut&#x27;</span>: lowcut, <span class="string">&#x27;highcut&#x27;</span>: highcut, <span class="string">&#x27;corners&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;bandpass&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于存储最终数据的列表</span></span><br><span class="line">data_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_time_shift</span>(<span class="params">signal1, signal2, dt, max_shift_seconds=<span class="number">10</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算两个信号之间的时移，返回时移（秒）。</span></span><br><span class="line"><span class="string">    参数 max_shift_seconds 控制最大允许的滞后量。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    max_shift_samples = <span class="built_in">int</span>(max_shift_seconds / dt)  <span class="comment"># 最大允许滞后对应的样本数</span></span><br><span class="line">    correlation = correlate(signal1, signal2, max_shift_samples, demean=<span class="literal">True</span>, normalize=<span class="literal">True</span>)</span><br><span class="line">    lag = np.argmax(correlation) - max_shift_samples</span><br><span class="line">    lag_time = lag * dt  <span class="comment"># 使用采样间隔转换索引为时间</span></span><br><span class="line">    <span class="keyword">return</span> lag_time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 SAC 文件并进行处理</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> file_list:</span><br><span class="line">    <span class="comment"># 读取 SAC 文件</span></span><br><span class="line">    st = read(file)</span><br><span class="line">    tr = st[<span class="number">0</span>]  <span class="comment"># 假设每个文件只有一个 Trace</span></span><br><span class="line">    <span class="comment"># 获取数据和采样间隔</span></span><br><span class="line">    data = tr.data</span><br><span class="line">    dt = tr.stats.delta  <span class="comment"># 采样间隔</span></span><br><span class="line">    <span class="comment"># 判断是否全为零，如果是，跳过</span></span><br><span class="line">    <span class="keyword">if</span> np.<span class="built_in">all</span>(data == <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;file&#125;</span> 数据全为零，跳过。&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 滤波处理（使用 `obspy` 内建的滤波方法）</span></span><br><span class="line">    tr.<span class="built_in">filter</span>(<span class="built_in">type</span>=<span class="string">&#x27;bandpass&#x27;</span>, freqmin=lowcut, freqmax=highcut, corners=filter_params[<span class="string">&#x27;corners&#x27;</span>])</span><br><span class="line">    filtered_data = tr.data  </span><br><span class="line">    <span class="comment"># 归一化</span></span><br><span class="line">    depmin = np.<span class="built_in">min</span>(filtered_data)</span><br><span class="line">    depmax = np.<span class="built_in">max</span>(filtered_data)</span><br><span class="line">    <span class="keyword">if</span> depmax != depmin:</span><br><span class="line">        normalized_data = (filtered_data) / (depmax - depmin)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        normalized_data = filtered_data  <span class="comment"># 如果最大值等于最小值，直接使用原数据  </span></span><br><span class="line">    data_list.append(normalized_data)</span><br><span class="line"><span class="comment"># 假设我们想要对第一个信号进行时移校正，将所有其他信号与第一个信号对齐</span></span><br><span class="line">data=data_list</span><br><span class="line">base_signal = data_list[<span class="number">0</span>]</span><br><span class="line">time_shifts = []</span><br><span class="line"><span class="comment"># 对每个信号与基准信号计算时移</span></span><br><span class="line"><span class="keyword">for</span> i, signal <span class="keyword">in</span> <span class="built_in">enumerate</span>(data_list[<span class="number">1</span>:], start=<span class="number">1</span>):</span><br><span class="line">    time_shift = calculate_time_shift(base_signal, signal, dt)</span><br><span class="line">    time_shifts.append(time_shift)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;信号 <span class="subst">&#123;i+<span class="number">1</span>&#125;</span> 与基准信号的时移: <span class="subst">&#123;time_shift:<span class="number">.4</span>f&#125;</span> 秒&quot;</span>)</span><br><span class="line">    <span class="comment"># 平移信号</span></span><br><span class="line">    shift_samples = <span class="built_in">int</span>(<span class="built_in">round</span>(time_shift / dt))  <span class="comment"># 转换为样本数，并取整</span></span><br><span class="line">    <span class="keyword">if</span> shift_samples &gt; <span class="number">0</span>:</span><br><span class="line">        shifted_signal = np.concatenate((np.zeros(shift_samples), signal[:-shift_samples]))</span><br><span class="line">    <span class="keyword">elif</span> shift_samples &lt; <span class="number">0</span>:</span><br><span class="line">        shifted_signal = np.concatenate((signal[-shift_samples:], np.zeros(-shift_samples)))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        shifted_signal = signal</span><br><span class="line">    <span class="comment"># 更新信号为平移后的信号</span></span><br><span class="line">    data_list[i] = shifted_signal</span><br><span class="line"><span class="comment"># 转换成一个二维数组，方便作为 sequencer 的输入</span></span><br><span class="line">data_array = np.array(data_list)</span><br><span class="line"><span class="comment"># 打印一下结果，检查是否符合要求</span></span><br><span class="line"><span class="built_in">print</span>(data_array.shape)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> sequencer</span><br><span class="line">objects_list_simulated = np.vstack(data_array)</span><br><span class="line">num_rows = objects_list_simulated.shape[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(num_rows)</span><br><span class="line">shuffled_indices = np.random.permutation(num_rows)</span><br><span class="line"><span class="comment">#shuffled_indices = np.arange(23)</span></span><br><span class="line"><span class="built_in">print</span>(shuffled_indices)</span><br><span class="line">objects_list_shuffled = objects_list_simulated[shuffled_indices, :]</span><br><span class="line"><span class="comment"># 确保没有零值或负值</span></span><br><span class="line"><span class="comment">#objects_list_shuffled = np.maximum(objects_list_shuffled, 1e-16)  # 或者加上偏移量</span></span><br><span class="line"><span class="comment">#objects_list_shuffled = np.maximum(objects_list_shuffled, 1e-16)  # 或者加上偏移量</span></span><br><span class="line">objects_list_shuffled = objects_list_shuffled+<span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">plt.figure(<span class="number">1</span>, figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">plt.title(<span class="string">&quot;input dataset [lines]&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> j, object_data <span class="keyword">in</span> <span class="built_in">enumerate</span>(data):</span><br><span class="line">    grid = np.arange(<span class="built_in">len</span>(object_data))  <span class="comment"># 创建与 object_data 长度相同的 x 轴</span></span><br><span class="line">    object_data_scaled_y = object_data + (j-<span class="number">1</span>) *<span class="number">1.0</span>  <span class="comment"># 缩放以避免重叠</span></span><br><span class="line">    plt.plot(grid, object_data_scaled_y)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;scaled intensity&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">plt.title(<span class="string">&quot;input dataset [heat]&quot;</span>)</span><br><span class="line">plt.pcolormesh(objects_list_shuffled,cmap=<span class="string">&#x27;inferno&#x27;</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;original index&quot;</span>)</span><br><span class="line">plt.tight_layout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跑sequencer</span></span><br><span class="line">output_path = <span class="string">&quot;sequencer_output_directory&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_path):</span><br><span class="line">    os.makedirs(output_path)</span><br><span class="line"><span class="comment"># 初始化 sequencer 对象</span></span><br><span class="line">estimator_list = [<span class="string">&#x27;EMD&#x27;</span>, <span class="string">&#x27;energy&#x27;</span>, <span class="string">&#x27;L2&#x27;</span>]</span><br><span class="line">seq = sequencer.Sequencer(grid, objects_list_shuffled, estimator_list)</span><br><span class="line"><span class="comment"># 执行 sequencer</span></span><br><span class="line">final_elongation, final_sequence = seq.execute(output_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># first example</span></span><br><span class="line">estimator_name = <span class="string">&#x27;EMD&#x27;</span></span><br><span class="line">scale = <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Intermediate elongation for metric=%s and scale=%s: %s&quot;</span> % (estimator_name, scale, </span><br><span class="line">                                                                  seq.return_elongation_of_weighted_products(estimator_name, scale)))</span><br><span class="line"><span class="comment"># second example</span></span><br><span class="line">estimator_list, scale_list, elongation_list = seq.return_elongation_of_weighted_products_all_metrics_and_scales()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(estimator_list)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;metric=%s, scale=%s, elongation: %s&quot;</span> % (estimator_list[i], </span><br><span class="line">                                                   scale_list[i], </span><br><span class="line">                                                   elongation_list[i]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">estimator_list, scale_list, sequence_list = seq.return_sequence_of_weighted_products_all_metrics_and_scales()</span><br><span class="line"></span><br><span class="line"><span class="comment">#fig, axs = plt.subplots(2, 2, figsize=(12, 10))</span></span><br><span class="line">plt.figure(<span class="number">1</span>, figsize=(<span class="number">16</span>, <span class="number">16</span>))</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">#plt.title(&quot;input dataset&quot;)</span></span><br><span class="line"><span class="comment">#plt.pcolormesh(objects_list_shuffled)</span></span><br><span class="line"><span class="comment">#plt.colorbar()</span></span><br><span class="line"><span class="comment">#plt.xlabel(&quot;x&quot;)</span></span><br><span class="line"><span class="comment">#plt.ylabel(&quot;original index&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j, object_data <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_list_shuffled):</span><br><span class="line">    grid = np.arange(<span class="built_in">len</span>(object_data))  <span class="comment"># 创建与 object_data 长度相同的 x 轴</span></span><br><span class="line">    object_data_scaled_y = object_data + (j-<span class="number">1</span>) * <span class="number">1</span>  <span class="comment"># 缩放以避免重叠</span></span><br><span class="line">    plt.plot(grid, object_data_scaled_y)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Original&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">plt.title(<span class="string">&quot;ordered according to\n intermediate sequence using: \n metric=%s, scale=%s&quot;</span> % (estimator_list[<span class="number">0</span>], scale_list[<span class="number">0</span>]))</span><br><span class="line">sequnce = sequence_list[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#plt.pcolormesh(objects_list_shuffled[sequnce])</span></span><br><span class="line"><span class="comment">#plt.colorbar()</span></span><br><span class="line"><span class="comment">#plt.xlabel(&quot;x&quot;)</span></span><br><span class="line"><span class="comment">#plt.ylabel(&quot;original index&quot;)</span></span><br><span class="line"><span class="keyword">for</span> j, object_data <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_list_shuffled[sequnce]):</span><br><span class="line">    grid = np.arange(<span class="built_in">len</span>(object_data))  <span class="comment"># 创建与 object_data 长度相同的 x 轴</span></span><br><span class="line">    object_data_scaled_y = object_data + (j-<span class="number">1</span>) * <span class="number">1</span>  <span class="comment"># 缩放以避免重叠</span></span><br><span class="line">    plt.plot(grid, object_data_scaled_y)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Original&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">plt.title(<span class="string">&quot;ordered according to\n intermediate sequence using: \n metric=%s, scale=%s&quot;</span> % (estimator_list[<span class="number">1</span>], scale_list[<span class="number">1</span>]))</span><br><span class="line">sequnce = sequence_list[<span class="number">1</span>]</span><br><span class="line"><span class="comment">#plt.pcolormesh(objects_list_shuffled[sequnce])</span></span><br><span class="line"><span class="comment">#plt.colorbar()</span></span><br><span class="line"><span class="comment">#plt.xlabel(&quot;x&quot;)</span></span><br><span class="line"><span class="comment">#plt.ylabel(&quot;original index&quot;)</span></span><br><span class="line"><span class="keyword">for</span> j, object_data <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_list_shuffled[sequnce]):</span><br><span class="line">    grid = np.arange(<span class="built_in">len</span>(object_data))  <span class="comment"># 创建与 object_data 长度相同的 x 轴</span></span><br><span class="line">    object_data_scaled_y = object_data + (j-<span class="number">1</span>) * <span class="number">1</span>  <span class="comment"># 缩放以避免重叠</span></span><br><span class="line">    plt.plot(grid, object_data_scaled_y)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Original&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">plt.title(<span class="string">&quot;ordered according to\n intermediate sequence using: \n metric=%s, scale=%s&quot;</span> % (estimator_list[<span class="number">2</span>], scale_list[<span class="number">2</span>]))</span><br><span class="line">sequnce = sequence_list[<span class="number">2</span>]</span><br><span class="line"><span class="comment">#plt.pcolormesh(objects_list_shuffled[sequnce])</span></span><br><span class="line"><span class="comment">#plt.colorbar()</span></span><br><span class="line"><span class="comment">#plt.xlabel(&quot;x&quot;)</span></span><br><span class="line"><span class="comment">#plt.ylabel(&quot;original index&quot;)</span></span><br><span class="line"><span class="keyword">for</span> j, object_data <span class="keyword">in</span> <span class="built_in">enumerate</span>(objects_list_shuffled[sequnce]):</span><br><span class="line">    grid = np.arange(<span class="built_in">len</span>(object_data))  <span class="comment"># 创建与 object_data 长度相同的 x 轴</span></span><br><span class="line">    object_data_scaled_y = object_data + (j-<span class="number">1</span>) * <span class="number">1</span>  <span class="comment"># 缩放以避免重叠</span></span><br><span class="line">    plt.plot(grid, object_data_scaled_y)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Original&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的jupyter-notebook插件</title>
    <url>/jupyter-notebook-extensions.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><table>
<thead>
<tr>
<th><strong>插件名称</strong></th>
<th><strong>简介</strong></th>
<th><strong>官方链接</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>Jupyter Contrib NBe</strong></td>
<td>核心扩展包，集成50+插件（代码补全、变量监控、执行时间显示等）</td>
<td><a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions">GitHub</a></td>
</tr>
<tr>
<td><strong>Hinterland</strong></td>
<td>实时代码补全工具，支持 Python&#x2F;R&#x2F;Julia，减少拼写错误</td>
<td><a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/hinterland/README.html">文档</a></td>
</tr>
<tr>
<td><strong>Table of Contents (2)</strong></td>
<td>动态生成目录，支持标题跳转，适合长文档导航</td>
<td><a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/toc2/README.html">配置页</a></td>
</tr>
<tr>
<td><strong>Variable Inspector</strong></td>
<td>侧边栏实时显示变量类型&#x2F;大小&#x2F;值，替代频繁 <code>print(type)</code> 操作</td>
<td><a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/varInspector/README.html">说明</a></td>
</tr>
<tr>
<td><strong>ExecuteTime</strong></td>
<td>记录每个 Cell 的执行时间和完成时间，优化性能分析</td>
<td><a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/execute_time/README.html">详情</a></td>
</tr>
<tr>
<td><strong>Autopep8</strong></td>
<td>一键格式化代码为 PEP8 标准，提升可读性</td>
<td><a href="https://pypi.org/project/autopep8/">PyPI</a></td>
</tr>
<tr>
<td><strong>jupyterthemes</strong></td>
<td>界面主题美化，支持暗黑模式&#x2F;护眼配色（如 <code>monokai</code>, <code>solarized</code>）</td>
<td><a href="https://github.com/dunovank/jupyter-themes">GitHub</a></td>
</tr>
<tr>
<td><strong>Notify</strong></td>
<td>内核空闲时发送浏览器通知，适合长时间任务（如模型训练）</td>
<td><a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/notify/README.html">文档</a></td>
</tr>
<tr>
<td><strong>jupyter Widgets</strong></td>
<td>创建交互控件（滑块&#x2F;下拉菜单），将静态图表转为动态仪表盘</td>
<td><a href="https://ipywidgets.readthedocs.io/en/latest/">官网</a></td>
</tr>
<tr>
<td><strong>Voilà</strong></td>
<td>将 Notebook 转为独立 Web 应用，隐藏代码仅保留交互结果</td>
<td><a href="https://voila.readthedocs.io/en/stable/">文档</a></td>
</tr>
<tr>
<td><strong>RISE</strong></td>
<td>实时代码幻灯片工具，用 Markdown 标题分页，支持演示中修改参数</td>
<td><a href="https://github.com/damianavila/RISE">GitHub</a></td>
</tr>
</tbody></table>
<p>安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install jupyter_contrib_nbextensions jupyterthemes voila rise</span><br><span class="line">jupyter contrib nbextension install</span><br><span class="line">jupyter nbextension enable [插件名]  # 启用具体插件</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>$&#92;LaTeX$的数学公式表达</title>
    <url>/latex-math-express.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;以下是$\LaTeX$的数学算符</p>
<blockquote>
<p><strong>说明</strong>：公式需包裹在 <code>$...$</code>（行内公式）或 <code>$$...$$</code>（块级公式）中，以下表格中的 <strong>渲染效果</strong> 需在支持 LaTeX 的 Markdown 环境中显示（如 Typora、Obsidian 等）。</p>
</blockquote>
<hr>
<h2 id="一、基础运算符号"><a href="#一、基础运算符号" class="headerlink" title="一、基础运算符号"></a>一、基础运算符号</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>加号</td>
<td><code>a + b</code></td>
<td>$a + b$</td>
</tr>
<tr>
<td>减号</td>
<td><code>a - b</code></td>
<td>$a - b$</td>
</tr>
<tr>
<td>乘号（叉乘）</td>
<td><code>a \times b</code></td>
<td>$a \times b$</td>
</tr>
<tr>
<td>乘号（点乘）</td>
<td><code>a \cdot b</code></td>
<td>$a \cdot b$</td>
</tr>
<tr>
<td>除号</td>
<td><code>a \div b</code></td>
<td>$a \div b$</td>
</tr>
<tr>
<td>加减号</td>
<td><code>a \pm b</code></td>
<td>$a \pm b$</td>
</tr>
<tr>
<td>减加号</td>
<td><code>a \mp b</code></td>
<td>$a \mp b$</td>
</tr>
</tbody></table>
<hr>
<h2 id="二、关系运算符"><a href="#二、关系运算符" class="headerlink" title="二、关系运算符"></a>二、关系运算符</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>等于</td>
<td><code>a = b</code></td>
<td>$a &#x3D; b$</td>
</tr>
<tr>
<td>不等于</td>
<td><code>a \neq b</code></td>
<td>$a \neq b$</td>
</tr>
<tr>
<td>约等于</td>
<td><code>a \approx b</code></td>
<td>$a \approx b$</td>
</tr>
<tr>
<td>大于等于</td>
<td><code>a \geq b</code></td>
<td>$a \geq b$</td>
</tr>
<tr>
<td>小于等于</td>
<td><code>a \leq b</code></td>
<td>$a \leq b$</td>
</tr>
<tr>
<td>远大于</td>
<td><code>a \gg b</code></td>
<td>$a \gg b$</td>
</tr>
<tr>
<td>远小于</td>
<td><code>a \ll b</code></td>
<td>$a \ll b$</td>
</tr>
<tr>
<td>正比于</td>
<td><code>a \propto b</code></td>
<td>$a \propto b$</td>
</tr>
</tbody></table>
<hr>
<h2 id="三、集合运算符"><a href="#三、集合运算符" class="headerlink" title="三、集合运算符"></a>三、集合运算符</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>并集</td>
<td><code>A \cup B</code></td>
<td>$A \cup B$</td>
</tr>
<tr>
<td>交集</td>
<td><code>A \cap B</code></td>
<td>$A \cap B$</td>
</tr>
<tr>
<td>属于</td>
<td><code>x \in A</code></td>
<td>$x \in A$</td>
</tr>
<tr>
<td>不属于</td>
<td><code>x \notin B</code></td>
<td>$x \notin B$</td>
</tr>
<tr>
<td>子集</td>
<td><code>A \subset B</code></td>
<td>$A \subset B$</td>
</tr>
<tr>
<td>真子集</td>
<td><code>A \subseteq B</code></td>
<td>$A \subseteq B$</td>
</tr>
<tr>
<td>空集</td>
<td><code>\emptyset</code></td>
<td>$\emptyset$</td>
</tr>
<tr>
<td>实数集</td>
<td><code>\mathbb&#123;R&#125;</code></td>
<td>$\mathbb{R}$</td>
</tr>
<tr>
<td>自然数集</td>
<td><code>\mathbb&#123;N&#125;</code></td>
<td>$\mathbb{N}$</td>
</tr>
</tbody></table>
<hr>
<h2 id="四、微积分符号"><a href="#四、微积分符号" class="headerlink" title="四、微积分符号"></a>四、微积分符号</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>积分</td>
<td><code>\int_&#123;a&#125;^&#123;b&#125; f(x) dx</code></td>
<td>$\int_{a}^{b} f(x) dx$</td>
</tr>
<tr>
<td>偏导数</td>
<td><code>\frac&#123;\partial f&#125;&#123;\partial x&#125;</code></td>
<td>$\frac{\partial f}{\partial x}$</td>
</tr>
<tr>
<td>极限</td>
<td><code>\lim_&#123;x \to 0&#125; \frac&#123;\sin x&#125;&#123;x&#125;</code></td>
<td>$\lim_{x \to 0} \frac{\sin x}{x}$</td>
</tr>
<tr>
<td>求和</td>
<td><code>\sum_&#123;i=1&#125;^&#123;n&#125; i^2</code></td>
<td>$\sum_{i&#x3D;1}^{n} i^2$</td>
</tr>
<tr>
<td>导数（撇号形式）</td>
<td><code>f&#39;(x)</code></td>
<td>$f’(x)$</td>
</tr>
<tr>
<td>梯度</td>
<td><code>\nabla f</code></td>
<td>$\nabla f$</td>
</tr>
<tr>
<td>二阶导数</td>
<td><code>\frac&#123;d^2 y&#125;&#123;dx^2&#125;</code></td>
<td>$\frac{d^2 y}{dx^2}$</td>
</tr>
</tbody></table>
<hr>
<h2 id="五、希腊字母"><a href="#五、希腊字母" class="headerlink" title="五、希腊字母"></a>五、希腊字母</h2><table>
<thead>
<tr>
<th>小写字母</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
<th>大写字母</th>
<th>LaTeX 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>α (alpha)</td>
<td><code>\alpha</code></td>
<td>$\alpha$</td>
<td>Γ (Gamma)</td>
<td><code>\Gamma</code></td>
<td>$\Gamma$</td>
</tr>
<tr>
<td>β (beta)</td>
<td><code>\beta</code></td>
<td>$\beta$</td>
<td>Δ (Delta)</td>
<td><code>\Delta</code></td>
<td>$\Delta$</td>
</tr>
<tr>
<td>θ (theta)</td>
<td><code>\theta</code></td>
<td>$\theta$</td>
<td>Θ (Theta)</td>
<td><code>\Theta</code></td>
<td>$\Theta$</td>
</tr>
<tr>
<td>π (pi)</td>
<td><code>\pi</code></td>
<td>$\pi$</td>
<td>Π (Pi)</td>
<td><code>\Pi</code></td>
<td>$\Pi$</td>
</tr>
<tr>
<td>σ (sigma)</td>
<td><code>\sigma</code></td>
<td>$\sigma$</td>
<td>Σ (Sigma)</td>
<td><code>\Sigma</code></td>
<td>$\Sigma$</td>
</tr>
</tbody></table>
<hr>
<h2 id="六、箭头符号"><a href="#六、箭头符号" class="headerlink" title="六、箭头符号"></a>六、箭头符号</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>右箭头</td>
<td><code>\rightarrow</code></td>
<td>$\rightarrow$</td>
</tr>
<tr>
<td>左箭头</td>
<td><code>\leftarrow</code></td>
<td>$\leftarrow$</td>
</tr>
<tr>
<td>双向箭头</td>
<td><code>\leftrightarrow</code></td>
<td>$\leftrightarrow$</td>
</tr>
<tr>
<td>蕴含符号</td>
<td><code>\Rightarrow</code></td>
<td>$\Rightarrow$</td>
</tr>
<tr>
<td>等价符号</td>
<td><code>\Leftrightarrow</code></td>
<td>$\Leftrightarrow$</td>
</tr>
<tr>
<td>映射箭头</td>
<td><code>\mapsto</code></td>
<td>$\mapsto$</td>
</tr>
</tbody></table>
<hr>
<h2 id="七、括号与定界符"><a href="#七、括号与定界符" class="headerlink" title="七、括号与定界符"></a>七、括号与定界符</h2><table>
<thead>
<tr>
<th>符号名称</th>
<th>$\LaTeX$ 命令</th>
<th>渲染效果</th>
</tr>
</thead>
<tbody><tr>
<td>圆括号（自适应）</td>
<td><code>\left( \frac&#123;a&#125;&#123;b&#125; \right)</code></td>
<td>$\left( \frac{a}{b} \right)$</td>
</tr>
<tr>
<td>方括号</td>
<td><code>\left[ x \right]</code></td>
<td>$\left[ x \right]$</td>
</tr>
<tr>
<td>花括号</td>
<td><code>\left\&#123; x \right\&#125;</code></td>
<td>${ x }$</td>
</tr>
<tr>
<td>绝对值</td>
<td><code>\lvert x \rvert</code></td>
<td>$\lvert x \rvert$</td>
</tr>
<tr>
<td>范数</td>
<td><code>\lVert \mathbf&#123;v&#125; \rVert</code></td>
<td>$\lVert \mathbf{v} \rVert$</td>
</tr>
</tbody></table>
<hr>
<h2 id="八、矩阵环境"><a href="#八、矩阵环境" class="headerlink" title="八、矩阵环境"></a>八、矩阵环境</h2><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span> </span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;  <span class="comment">% 圆括号矩阵</span></span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d </span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125;</span><br><span class="line"><span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;  <span class="comment">% 方括号矩阵</span></span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d </span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125;</span><br><span class="line"><span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;vmatrix&#125;  <span class="comment">% 行列式</span></span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d </span><br><span class="line"><span class="keyword">\end</span>&#123;vmatrix&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure>
<p>渲染效果：<br>$$<br>\begin{pmatrix}  % 圆括号矩阵<br>a &amp; b \<br>c &amp; d<br>\end{pmatrix}<br>\quad<br>\begin{bmatrix}  % 方括号矩阵<br>a &amp; b \<br>c &amp; d<br>\end{bmatrix}<br>\quad<br>\begin{vmatrix}  % 行列式<br>a &amp; b \<br>c &amp; d<br>\end{vmatrix}<br>$$</p>
<p>看样子花括号和矩阵都不太行啊。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>有趣的新闻网站</title>
    <url>/news-website.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li><a href="https://www.allyoucanread.com/">AllYouCanRead</a>是一个综合性资讯导航平台，按地域聚合全球六大洲新闻站点，同时以艺术、商业、科技等超 30 个主题精细分类各类网站资源，杂志专区更细分动物、时尚、育儿等数十个品类，通过清晰的结构化导航，为用户提供一站式全球新闻媒体与实用网站的定向检索服务。</li>
<li><a href="https://www.apple.com/apple-news">Apple News</a>是苹果公司为iOS和macOS设备打造的官方新闻应用，它不仅整合主流新闻媒体的免费内容，还通过订阅服务 Apple News+ 提供大量杂志和深度报道。该平台以用户界面友好、内容精选优质而著称，尤其适合苹果生态中的用户日常阅读使用。借助苹果的算法推荐和编辑精选，用户可以在一个界面中阅读来自多家出版商的新闻、专题和评论。对于追求高品质阅读体验的用户，Apple News 提供了一种简洁但内容丰富的获取方式。</li>
<li><a href="https://www.bbc.com/news">BBC News</a>是英国广播公司旗下的新闻平台，长期以客观、权威的报道风格受到全球用户信赖。它提供来自全球各地的实时新闻、深度分析、专题报道以及视频广播内容，尤其擅长以多语种进行国际传播，包括提供中文页面服务。BBC News 无需订阅即可访问，内容涵盖政治、科技、文化、健康等广泛领域，适合希望获取权威信息、提升英文阅读能力或关注全球动态的广大读者。</li>
<li><a href="https://edition.cnn.com/">CNN</a>作为国际知名新闻平台，以实时追踪全球突发新闻为核心特色，24 小时不间断更新政治、经济、科技、文化及娱乐等领域资讯。其报道兼具速度与深度，既提供俄乌冲突、美国大选等热点事件的现场直击，也通过专家分析、纪录片等形式挖掘新闻背后的背景逻辑。</li>
<li><a href="https://flipboard.com/">Flipboard</a>是一个以“杂志式排版”为特色的新闻聚合与社交内容平台，用户可以根据自己的兴趣订阅特定主题、媒体或用户发布的内容源，并将喜欢的内容整理成属于自己的“杂志”。它强调视觉体验和内容个性化，非常适合喜欢图文并茂、轻松滑阅的移动端用户。Flipboard 支持离线阅读和多平台同步，并通过滑动式界面增强交互感，使其成为许多用户在通勤、碎片时间中快速获取资讯的理想选择。</li>
<li><a href="https://news.google.com/">Google News</a>是谷歌推出的一项新闻聚合服务，它通过智能算法从全球各大新闻网站实时抓取内容，为用户推送个性化、主题化的新闻报道。平台聚合同一事件来自不同媒体的视角，帮助读者全面了解事件全貌。其界面简洁、使用免费，同时支持桌面和移动端，是获取国际主流新闻、快速了解时事动态的便捷工具。用户还可以设置感兴趣的主题或地区，实现高度定制化的阅读体验，非常适合需要快速掌握新闻全局的用户。</li>
<li><a href="https://www.newsnow.co.uk/h/">Newsnow</a>作为一个英国的多元新闻聚合平台，具备诸多显著优势。其新闻内容丰富多元，广泛涵盖英国、世界、商业、娱乐、体育及科技等各个领域，能够满足不同用户的多样化阅读需求。网站的界面设计简洁直观，分类清晰，便于用户快速定位感兴趣的新闻板块。其个性化推荐功能有助于用户发现更多符合个人喜好的内容。</li>
<li><a href="https://emm.newsbrief.eu/NewsBrief/clusteredition/en/latest.html">NewsBrief</a>核心优势在于以分钟级速度聚合全球60+语言信源，通过AI驱动的动态聚类技术，将碎片化新闻提炼为可视化事件脉络，其独家”EU Focus”模块深度追踪28个欧盟机构政策动向，并支持跨事件对比分析，为政策研究者、商业机构提供学术级舆情洞察。</li>
<li><a href="https://newspapermap.com/">Newspaper Map</a>通过地图可视化交互，直观聚合全球报纸资源，支持按地理位置一键直达各地新闻源，突破传统新闻检索的国界与语言限制。</li>
<li><a href="https://www.thepaperboy.com/">Paperboy</a>在算法推荐新闻泛滥的时代，反其道而行，成为”数字报亭式”的古典新闻聚合平台，满足用户对传统报纸阅读体验的怀旧需求，同时解决地方性信息获取痛点。</li>
<li><a href="http://www.pressreader.com/">PressReader</a>是一个汇集全球报纸和杂志的数字阅读平台，提供来自120多个国家、70多种语言的7000多份出版物原版内容。其最大优势在于内容全面、更新及时，涵盖新闻、财经、科技、时尚等多个领域。平台呈现与实体刊物一致的排版，支持全文搜索、多语种翻译、音频朗读与剪藏分享，提升了阅读的互动性和便捷性。</li>
<li><a href="https://www.nytimes.com/">The New York Times</a>是全球最具影响力的新闻机构之一，提供高质量的新闻报道、评论、深度专题和调查类文章。作为一个付费订阅平台，它以专业记者团队、深入独家的调查报道和精准的国际视角闻名，尤其在政治、经济、国际关系等领域具有广泛权威性。无论是通过网页还是手机 App，纽约时报为读者提供一种深入理解世界的方式，是重度新闻使用者、研究者和政策关注者的重要信息来源。</li>
<li><a href="https://wn.com/">World News</a>提供全球新闻资讯，整合大量知名媒体的报道，涵盖政治、经济、社会、文化及自然灾害等丰富多样的新闻内容，更新及时，能够快速反映世界各地的最新动态。该网站界面简洁直观，以图文列表形式展示新闻，每条新闻都明确标注了来源媒体和发布时间，增强了新闻的可信度与透明度。</li>
<li><a href="https://world.huanqiu.com/">环球网国际新闻</a>以 “全球视野、中国视角” 为核心，兼具时效性、权威性与多元覆盖，既关注国际政治经济格局的宏观变化，也聚焦与中国及华人相关的具体议题，通过结构化板块和图文结合的方式，为读者提供全面、及时的国际资讯。 </li>
<li><a href="https://news.cctv.com/">央视网</a>作为国家级新媒体旗舰平台，既保持主流媒体的权威性，又通过技术创新实现“新闻+政务+服务”深度融合，是媒体融合发展的标杆案例。其核心优势在于依托总台内容资源库构建的全媒体传播体系，以及在无障碍访问等社会责任领域的先行实践。</li>
</ul>
<p>&emsp;&emsp;打不开记得爬高一点。</p>]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>Fun</tag>
      </tags>
  </entry>
  <entry>
    <title>PYTHON脚本练习（一）</title>
    <url>/python-script1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy import read</span><br><span class="line">from obspy.signal.filter import envelope</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor, as_completed</span><br><span class="line">from collections import defaultdict</span><br><span class="line"></span><br><span class="line"># 参数设置 </span><br><span class="line">input_root = &quot;events_20250619&quot;</span><br><span class="line">output_root = &quot;bp_sac&quot;</span><br><span class="line">center_periods = np.arange(25, 150, 10)</span><br><span class="line">bandwidth = 0.010</span><br><span class="line">vmin, vmax = 2.5, 5.0</span><br><span class="line">noise_offset, noise_len = 1000, 1000</span><br><span class="line">snr_threshold = 3.0</span><br><span class="line">max_workers = 8  # 根据 CPU 核心数调整</span><br><span class="line"></span><br><span class="line"># 存储每个周期的 SNR 值</span><br><span class="line">period_snr_map = defaultdict(list)</span><br><span class="line"></span><br><span class="line">def process_file(filepath, root):</span><br><span class="line">    results = []</span><br><span class="line">    try:</span><br><span class="line">        st = read(filepath)</span><br><span class="line">        tr = st[0]</span><br><span class="line">        sac = tr.stats.sac</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(f&quot;跳过 &#123;filepath&#125;: &#123;e&#125;&quot;)</span><br><span class="line">        return results</span><br><span class="line"></span><br><span class="line">    if not hasattr(sac, &quot;o&quot;) or not hasattr(sac, &quot;dist&quot;):</span><br><span class="line">        return results</span><br><span class="line"></span><br><span class="line">    dist = sac.dist</span><br><span class="line">    starttime = tr.stats.starttime</span><br><span class="line">    win_start = starttime + dist / vmax</span><br><span class="line">    win_end = starttime + dist / vmin</span><br><span class="line">    t = tr.times()</span><br><span class="line">    abs_time = np.array([starttime + float(tt) for tt in t])</span><br><span class="line"></span><br><span class="line">    for period in center_periods:</span><br><span class="line">        fc = 1.0 / period</span><br><span class="line">        fmin, fmax = fc - bandwidth / 2, fc + bandwidth / 2</span><br><span class="line">        if fmin &lt;= 0:</span><br><span class="line">            continue</span><br><span class="line">        tr_filt = tr.copy()</span><br><span class="line">        tr_filt.detrend(&quot;demean&quot;)</span><br><span class="line">        tr_filt.taper(0.05)</span><br><span class="line">        tr_filt.filter(&quot;bandpass&quot;, freqmin=fmin, freqmax=fmax, corners=4, zerophase=True)</span><br><span class="line">        env = envelope(tr_filt.data)</span><br><span class="line">        idx_sig = np.where((abs_time &gt;= win_start) &amp; (abs_time &lt;= win_end))[0]</span><br><span class="line">        if len(idx_sig) == 0:</span><br><span class="line">            continue</span><br><span class="line">        signal_max = np.max(env[idx_sig])</span><br><span class="line">        noise_start = win_end + noise_offset</span><br><span class="line">        noise_end = noise_start + noise_len</span><br><span class="line">        idx_noise = np.where((abs_time &gt;= noise_start) &amp; (abs_time &lt;= noise_end))[0]</span><br><span class="line">        if len(idx_noise) == 0:</span><br><span class="line">            continue</span><br><span class="line">        noise_rms = np.sqrt(np.mean(env[idx_noise] ** 2))</span><br><span class="line">        snr = signal_max / noise_rms if noise_rms &gt; 0 else 0</span><br><span class="line"></span><br><span class="line">        if snr &gt;= snr_threshold:</span><br><span class="line">            tr_filt.stats.sac.user0 = snr</span><br><span class="line">            year = tr.stats.starttime.year</span><br><span class="line">            jday = tr.stats.starttime.julday</span><br><span class="line">            station = tr.stats.station.lower()</span><br><span class="line">            channel = tr.stats.channel.lower()</span><br><span class="line">            outname = f&quot;z.&#123;year&#125;.&#123;jday:03d&#125;.00.&#123;station&#125;.&#123;channel&#125;.&#123;period:03d&#125;&quot;</span><br><span class="line"></span><br><span class="line">            rel_dir = os.path.relpath(root, input_root)</span><br><span class="line">            out_dir = os.path.join(output_root, rel_dir)</span><br><span class="line">            os.makedirs(out_dir, exist_ok=True)</span><br><span class="line">            outpath = os.path.join(out_dir, outname)</span><br><span class="line">            tr_filt.write(outpath, format=&quot;SAC&quot;)</span><br><span class="line"></span><br><span class="line">            results.append((period, snr))</span><br><span class="line">            print(f&quot;✔ 保存: &#123;outname&#125;, SNR=&#123;snr:.2f&#125;&quot;)</span><br><span class="line"></span><br><span class="line">    return results</span><br><span class="line"># ===== 收集所有文件路径 =====</span><br><span class="line">all_files = []</span><br><span class="line">for root, dirs, files in os.walk(input_root):</span><br><span class="line">    for file in files:</span><br><span class="line">        if file.endswith(&quot;bhz.SAC_rm&quot;):</span><br><span class="line">            all_files.append((os.path.join(root, file), root))</span><br><span class="line"></span><br><span class="line">print(f&quot;📁 待处理文件数: &#123;len(all_files)&#125;&quot;)</span><br><span class="line"></span><br><span class="line"># ===== 并行处理 =====</span><br><span class="line">with ThreadPoolExecutor(max_workers=max_workers) as executor:</span><br><span class="line">    future_to_file = &#123;executor.submit(process_file, fpath, root): (fpath, root) for fpath, root in all_files&#125;</span><br><span class="line">    for future in as_completed(future_to_file):</span><br><span class="line">        try:</span><br><span class="line">            result = future.result()</span><br><span class="line">            for period, snr in result:</span><br><span class="line">                period_snr_map[period].append(snr)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            fpath, _ = future_to_file[future]</span><br><span class="line">            print(f&quot;❌ 文件出错 &#123;fpath&#125;: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line"># ===== 统计与可视化 =====</span><br><span class="line">periods = sorted(period_snr_map.keys())</span><br><span class="line">counts = [len(period_snr_map[p]) for p in periods]</span><br><span class="line">means = [np.mean(period_snr_map[p]) if len(period_snr_map[p]) &gt; 0 else 0 for p in periods]</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(&#123;</span><br><span class="line">    &quot;Period(s)&quot;: periods,</span><br><span class="line">    &quot;Count(SNR&gt;3)&quot;: counts,</span><br><span class="line">    &quot;Mean_SNR(SNR&gt;3)&quot;: means</span><br><span class="line">&#125;)</span><br><span class="line">df.to_csv(&quot;snr_stats.csv&quot;, index=False)</span><br><span class="line"></span><br><span class="line"># === 可视化 ===</span><br><span class="line">plt.figure(figsize=(10, 6))</span><br><span class="line">plt.bar(periods, counts, width=4, color=&#x27;skyblue&#x27;, edgecolor=&#x27;black&#x27;)</span><br><span class="line">plt.xlabel(&quot;Period (s)&quot;)</span><br><span class="line">plt.ylabel(&quot;Count of SNR &gt; 3&quot;)</span><br><span class="line">plt.title(&quot;Number of Traces with SNR &gt; 3 per Period&quot;)</span><br><span class="line">plt.grid(True, linestyle=&quot;--&quot;, alpha=0.5)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.savefig(&quot;snr_count_bar.png&quot;, dpi=150)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(10, 6))</span><br><span class="line">plt.plot(periods, means, marker=&#x27;o&#x27;, linestyle=&#x27;-&#x27;, color=&#x27;orange&#x27;)</span><br><span class="line">plt.xlabel(&quot;Period (s)&quot;)</span><br><span class="line">plt.ylabel(&quot;Mean SNR (SNR &gt; 3)&quot;)</span><br><span class="line">plt.title(&quot;Mean SNR of Traces with SNR &gt; 3 per Period&quot;)</span><br><span class="line">plt.grid(True, linestyle=&quot;--&quot;, alpha=0.5)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.savefig(&quot;snr_mean_line.png&quot;, dpi=150)</span><br><span class="line"></span><br><span class="line">print(&quot;🎉 并行处理完成，统计结果写入 snr_stats.csv&quot;)</span><br></pre></td></tr></table></figure></li>
</ul>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>学习匹配场</title>
    <url>/mfp.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;MFP是一种定位算法，最早应用于海洋声学领域（Baggeroer &amp; Kuperman，1988），目前在地震学中已广泛用于地震或微震定位（如 Cros et al.，2011；Gal et al.，2018）。以下为 MFP 的简要原理：</p>
<h2 id="MFP-功率计算"><a href="#MFP-功率计算" class="headerlink" title="MFP 功率计算"></a>MFP 功率计算</h2><p>首先计算频率域的谱向量：</p>
<p>$$<br>\boldsymbol{u}(\omega) &#x3D; [u_1(\omega), u_2(\omega), \cdots, u_N(\omega)]^T \tag{1}<br>$$</p>
<p>其中，$N$ 表示接收器的总数，$T$ 表示转置操作，$u_i(\omega)$ 是第 $i$ 个接收器的傅里叶谱，$\omega$ 是角频率。</p>
<p>然后计算协方差矩阵：</p>
<p>$$<br>\boldsymbol{C}(\omega) &#x3D; \boldsymbol{u}(\omega) \boldsymbol{u}^H(\omega) \tag{2}<br>$$</p>
<p>其中 $H$ 表示厄米共轭（复转置）操作。</p>
<p>通常我们仅保留相位信息，因此对协方差矩阵进行归一化处理：</p>
<p>$$<br>\tilde{C}<em>{mn}(\omega) &#x3D; \frac{C</em>{mn}(\omega)}{|C_{mn}(\omega)|} \tag{3}<br>$$</p>
<p>接着构造导向矢量（steering vector）：</p>
<p>$$<br>\boldsymbol{a}(\omega, v, \boldsymbol{r}) &#x3D; [e^{-i\omega |\boldsymbol{r}-\boldsymbol{r}_1|&#x2F;v}, \cdots, e^{-i\omega |\boldsymbol{r}-\boldsymbol{r}_N|&#x2F;v}]^T \tag{4}<br>$$</p>
<p>其中，$v$ 为波速，$\boldsymbol{r}$ 表示候选源位置，$\boldsymbol{r}_i$ 为第 $i$ 个接收器的位置。</p>
<p>最终，MFP 相干性定义为：</p>
<p>$$<br>P(\omega, v, \boldsymbol{r}) &#x3D; \frac{1}{N^2} \boldsymbol{a}^H(\omega, v, \boldsymbol{r}) \tilde{\boldsymbol{C}}(\omega) \boldsymbol{a}(\omega, v, \boldsymbol{r}) \tag{5}<br>$$</p>
<p>当 $P(\omega, v, \boldsymbol{r})$ 达到最大值时，对应的 $\boldsymbol{r}$ 即为可能的震源位置。</p>
<p>不过，由于地球介质的非均匀性会影响地震波的传播速度，因此 MFP 在地震学中也存在局限。有研究者提出在三维速度模型中引入射线追踪（ray tracing）来计算旅行时间（Gal 等，2018）。</p>
<h2 id="MFP阵列响应函数"><a href="#MFP阵列响应函数" class="headerlink" title="MFP阵列响应函数"></a>MFP阵列响应函数</h2><p>类似于 F-K 波束形成（beamforming）方法，我们可以指定信号的震源位置、传播速度和频率，用以评估阵列几何结构的分辨能力。</p>
<p>已知信号的波速 $v$、震源位置 $\boldsymbol{r}_0$ 和频率 $\omega$，构造其复频谱向量如下：</p>
<p>$$<br>\boldsymbol{u}(\omega, v, \boldsymbol{r}_0) &#x3D; [e^{-i\omega|\boldsymbol{r}_0-\boldsymbol{r}_1|&#x2F;v}, \cdots, e^{-i\omega|\boldsymbol{r}_0-\boldsymbol{r}_N|&#x2F;v}]^T \tag{6}<br>$$</p>
<p>对应的协方差矩阵为：</p>
<p>$$<br>\boldsymbol{C}(\omega) &#x3D; \boldsymbol{u}(\omega, v, \boldsymbol{r}_0) \boldsymbol{u}^H(\omega, v, \boldsymbol{r}_0) \tag{7}<br>$$</p>
<p>提取协方差矩阵的相位信息：</p>
<p>$$<br>\tilde{C}<em>{mn}(\omega) &#x3D; \frac{C</em>{mn}(\omega)}{|C_{mn}(\omega)|} \tag{8}<br>$$</p>
<p>然后再次生成导向矢量：</p>
<p>$$<br>\boldsymbol{a}(\omega, v, \boldsymbol{r}) &#x3D; [e^{-i\omega|\boldsymbol{r}-\boldsymbol{r}_1|&#x2F;v}, \cdots, e^{-i\omega|\boldsymbol{r}-\boldsymbol{r}_N|&#x2F;v}]^T \tag{9}<br>$$</p>
<p>计算 MFP 相干性：</p>
<p>$$<br>P(\omega, v, \boldsymbol{r}) &#x3D; \frac{1}{N^2} \boldsymbol{a}^H(\omega, v, \boldsymbol{r}) \tilde{\boldsymbol{C}}(\omega) \boldsymbol{a}(\omega, v, \boldsymbol{r}) \tag{10}<br>$$</p>
<p>为了简化处理，可以对多个频率下的相干性进行平均，得到最终的 MFP 相干性值：</p>
<p>$$<br>P_0(v, \boldsymbol{r}) &#x3D; \frac{1}{K} \sum_{k}P(\omega_k, v, \boldsymbol{r}) \tag{11}<br>$$</p>
<p>参考文献：<br>Baggeroer, A. B., Kuperman, W. A., &amp; Schmidt, H. (1988). Matched field processing: Source localization in correlated noise as an optimum parameter estimation problem. The Journal of the Acoustical Society of America, 83(2), 571-587.</p>
<p>Cros, E., Roux, P., Vandemeulebrouck, J., &amp; Kedar, S. (2011). Locating hydrothermal acoustic sources at Old Faithful Geyser using matched field processing. Geophysical Journal International, 187(1), 385-393.</p>
<p>Gal, M., Reading, A. M., Rawlinson, N., &amp; Schulte‐Pelkum, V. (2018). Matched field processing of three‐component seismic array data applied to Rayleigh and Love microseisms. Journal of Geophysical Research: Solid Earth, 123(8), 6871-6889.</p>]]></content>
  </entry>
  <entry>
    <title>PYTHON脚本练习（二）</title>
    <url>/python-script2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> h5py</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdates</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">from</span> matplotlib.dates <span class="keyword">import</span> DateFormatter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_filename_to_start_time</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;从文件名推断数据起始时间&quot;&quot;&quot;</span></span><br><span class="line">    date_str = filename.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>]  <span class="comment"># 提取&quot;20130512&quot;</span></span><br><span class="line">    <span class="keyword">return</span> datetime.strptime(date_str, <span class="string">&quot;%Y%m%d&quot;</span>)  <span class="comment"># 转为 datetime</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_cross_spec_from_files</span>(<span class="params">hdf5_dir, start_date, end_date</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;读取目录下所有落在给定时间范围的互相关谱&quot;&quot;&quot;</span></span><br><span class="line">    files = <span class="built_in">sorted</span>([f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(hdf5_dir) <span class="keyword">if</span> f.endswith(<span class="string">&quot;_cross_spec.hdf5&quot;</span>)])</span><br><span class="line">    <span class="comment">#files = sorted([f for f in os.listdir(hdf5_dir) if f.endswith(&quot;_power_spec.hdf5&quot;)])</span></span><br><span class="line">    time_list = []</span><br><span class="line">    spec_list = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            base_time = parse_filename_to_start_time(file)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;跳过无法解析时间的文件：<span class="subst">&#123;file&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (start_date &lt;= base_time &lt;= end_date):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        file_path = os.path.join(hdf5_dir, file)</span><br><span class="line">        <span class="keyword">with</span> h5py.File(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">24</span>):</span><br><span class="line">                ds_name = <span class="string">f&#x27;window_<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">                <span class="keyword">if</span> ds_name <span class="keyword">in</span> f:</span><br><span class="line">                    data = f[ds_name][:]</span><br><span class="line">                    current_time = base_time + timedelta(hours=i)</span><br><span class="line">                    time_list.append(current_time)</span><br><span class="line">                    spec_list.append(data)</span><br><span class="line">    <span class="keyword">return</span> time_list, spec_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_spectrogram</span>(<span class="params">time_list, spec_list, freqs=<span class="literal">None</span>, title=<span class="string">&quot;Cross Spectrogram&quot;</span>, save_path=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制时间-频率图像&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> time_list <span class="keyword">or</span> <span class="keyword">not</span> spec_list:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没有数据可供绘图。&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    spec_array = np.array(spec_list).T  <span class="comment"># shape: freq x time</span></span><br><span class="line">    <span class="comment">#spec_array = spec_array - np.mean(spec_array, axis=1, keepdims=True)</span></span><br><span class="line">    n_freq = spec_array.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> freqs <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        freqs = np.linspace(<span class="number">0.005</span>, <span class="number">0.1</span>, n_freq)</span><br><span class="line"></span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">14</span>, <span class="number">6</span>))</span><br><span class="line">    time_nums = mdates.date2num(time_list)</span><br><span class="line"></span><br><span class="line">    cax = ax.pcolormesh(time_nums, freqs, spec_array, shading=<span class="string">&#x27;auto&#x27;</span>, cmap=<span class="string">&#x27;inferno&#x27;</span>)</span><br><span class="line">    <span class="comment">#cax = ax.pcolormesh(time_nums, freqs, spec_array, shading=&#x27;auto&#x27; )</span></span><br><span class="line">    fig.colorbar(cax, label=<span class="string">&#x27;Cross Spectral Amplitude&#x27;</span>)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.set_yscale(<span class="string">&#x27;log&#x27;</span>)  <span class="comment"># 设置纵轴为对数刻度</span></span><br><span class="line">    ax.set_xlabel(<span class="string">&quot;Time (UTC)&quot;</span>)</span><br><span class="line">    ax.set_ylabel(<span class="string">&quot;Frequency (Hz)&quot;</span>)</span><br><span class="line">    ax.xaxis.set_major_formatter(DateFormatter(<span class="string">&quot;%Y-%m-%d\n%H:%M&quot;</span>))</span><br><span class="line">    plt.xticks(rotation=<span class="number">30</span>)</span><br><span class="line">    plt.tight_layout()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> save_path:</span><br><span class="line">        plt.savefig(save_path, dpi=<span class="number">300</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;图像已保存到：<span class="subst">&#123;save_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置参数</span></span><br><span class="line">hdf5_dir = <span class="string">&quot;output_1_0&quot;</span>  <span class="comment"># HDF5 文件夹路径</span></span><br><span class="line">start_date = datetime(<span class="number">2006</span>, <span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line">end_date = datetime(<span class="number">2006</span>, <span class="number">5</span>,<span class="number">31</span>)</span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">time_list, spec_list = load_cross_spec_from_files(hdf5_dir, start_date, end_date)</span><br><span class="line"><span class="comment"># 绘图并保存为 PNG（可选）</span></span><br><span class="line">plot_spectrogram(time_list, spec_list,</span><br><span class="line">                 title=<span class="string">f&quot;Cross Spectral Density (<span class="subst">&#123;start_date.date()&#125;</span> ~ <span class="subst">&#123;end_date.date()&#125;</span>)&quot;</span>,</span><br><span class="line">                 save_path=<span class="string">&quot;cross_spectrogram_2006_1_0.png&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>如何发布你自己的脚本</title>
    <url>/distribute-package.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;这里以一个简单的例子来说明如何创建自己的程序、打包并发布到PyPI。</p>
<h1 id="创建自己的项目"><a href="#创建自己的项目" class="headerlink" title="创建自己的项目"></a>创建自己的项目</h1><p>首先创建一个目录mypkg_project，结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mypkg_project/</span><br><span class="line">├── mypkg/</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   └── utils.py</span><br><span class="line">├── README.md</span><br><span class="line">├── setup.py</span><br><span class="line">├── pyproject.toml</span><br></pre></td></tr></table></figure>
<h1 id="编写包的内容"><a href="#编写包的内容" class="headerlink" title="编写包的内容"></a>编写包的内容</h1><p>在mypkg&#x2F;utils.py内写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def add(a, b):</span><br><span class="line">    return a + b</span><br></pre></td></tr></table></figure>
<p>在mypkg&#x2F;<strong>init</strong>.py内写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from .utils import add</span><br></pre></td></tr></table></figure>
<h1 id="添加元数据文件README-md"><a href="#添加元数据文件README-md" class="headerlink" title="添加元数据文件README.md"></a>添加元数据文件README.md</h1><p>在README.md中写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mypkg</span><br><span class="line">A simple Python package with an add function.</span><br></pre></td></tr></table></figure>
<p>在setup.py中写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from setuptools import setup, find_packages</span><br><span class="line">setup(</span><br><span class="line">    name=&#x27;mypkg&#x27;,</span><br><span class="line">    version=&#x27;0.1&#x27;,</span><br><span class="line">    author=&#x27;Your Name&#x27;,</span><br><span class="line">    description=&#x27;A simple example package&#x27;,</span><br><span class="line">    long_description=open(&#x27;README.md&#x27;).read(),</span><br><span class="line">    long_description_content_type=&#x27;text/markdown&#x27;,</span><br><span class="line">    packages=find_packages(),</span><br><span class="line">    classifiers=[</span><br><span class="line">        &#x27;Programming Language :: Python :: 3&#x27;,</span><br><span class="line">    ],</span><br><span class="line">    python_requires=&#x27;&gt;=3.6&#x27;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>在pyproject.toml中写入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[build-system]</span><br><span class="line">requires = [&quot;setuptools&quot;, &quot;wheel&quot;]</span><br><span class="line">build-backend = &quot;setuptools.build_meta&quot;</span><br></pre></td></tr></table></figure>
<h1 id="项目打包"><a href="#项目打包" class="headerlink" title="项目打包"></a>项目打包</h1><p>在根目录mypkg_project&#x2F;中运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m pip install --upgrade build</span><br><span class="line">python3 -m build</span><br></pre></td></tr></table></figure>
<p>会生成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dist/</span><br><span class="line">├── mypkg-0.1-py3-none-any.whl</span><br><span class="line">└── mypkg-0.1.tar.gz</span><br></pre></td></tr></table></figure>
<h1 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h1><p>用pip就可以本地安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install dist/mypkg-0.1-py3-none-any.whl</span><br></pre></td></tr></table></figure>
<p>利用python就可以调用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from mypkg import add</span><br><span class="line">add(2, 3)</span><br></pre></td></tr></table></figure>
<h1 id="上传到PyPI（公开发布）"><a href="#上传到PyPI（公开发布）" class="headerlink" title="上传到PyPI（公开发布）"></a>上传到PyPI（公开发布）</h1><p>首先安装twine：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install twine</span><br></pre></td></tr></table></figure>
<p>发布：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">twine upload dist/*</span><br></pre></td></tr></table></figure>
<p>这里会提示你输入PyPI的用户名和密码。这一步需要首先到<a href="https://pypi.org/account/register/">PyPI</a>注册账号，发布的时候需要用token</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">twine upload --repository pypi dist/* -u __token__ -p pypi-&lt;your_token&gt;</span><br></pre></td></tr></table></figure>
<p>上传成功之后可以在<a href="https://pypi.org/project/mypkg/%E8%AE%BF%E9%97%AE%E3%80%82">https://pypi.org/project/mypkg/访问。</a><br>然后任何人都可以安装你的脚本了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install mypkg</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>PYTHON脚本练习（三）聚束分析</title>
    <url>/fk.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;以下脚本可完成功能：</p>
<h2 id="1-数据预处理与筛选"><a href="#1-数据预处理与筛选" class="headerlink" title="1.数据预处理与筛选"></a>1.数据预处理与筛选</h2><ul>
<li>台站管理：从station.lst读取台站信息（网络名、台站名、经纬度）。</li>
<li>数据加载：按日期遍历数据目录，加载每个台站的LHZ分量SAC文件。</li>
<li>有效性检查：仅使用具有有效数据且台站数≥3天的数据。</li>
</ul>
<h2 id="2-时间窗口分割"><a href="#2-时间窗口分割" class="headerlink" title="2.时间窗口分割"></a>2.时间窗口分割</h2><ul>
<li>将每天数据分割为1800秒长、50%重叠的窗口（步长900秒）。</li>
<li>对每个窗口提取对应时间段的数据。</li>
</ul>
<h2 id="3-频域分析"><a href="#3-频域分析" class="headerlink" title="3. 频域分析"></a>3. 频域分析</h2><ul>
<li>滤波与窗函数：对每个台站数据加汉宁窗，去均值。</li>
<li>FFT计算：使用下一个2的幂次长度进行FFT，提取[fmin, fmax]频段的频谱。</li>
</ul>
<h2 id="4-聚束分析（FK分析）"><a href="#4-聚束分析（FK分析）" class="headerlink" title="4. 聚束分析（FK分析）"></a>4. 聚束分析（FK分析）</h2><ul>
<li>参数网格：<br>  方位角（az_grid）：0°~360°，步长5°。<br>  速度（speed_grid）：1~5 km&#x2F;s，步长0.05 km&#x2F;s（通过慢度1&#x2F;v参与计算）。</li>
<li>波束功率计算：</li>
</ul>
<ol>
<li>坐标转换：将台站经纬度转换为以平均位置为中心的直角坐标系（单位：公里）。</li>
<li>相位延迟计算：<br>对每个方位角，计算台站投影位置proj &#x3D; x<em>sin(az) + y</em>cos(az)。<br>对每个速度，计算时延delays &#x3D; proj * 慢度（s&#x3D;1&#x2F;v）。</li>
<li>导向向量：生成复相位因子exp(-j<em>2π</em>f*delays)。</li>
<li>波束频谱：将各台站频谱与导向向量加权求和，得到波束频谱。</li>
<li>功率归一化：计算波束功率并除以总功率（各台站功率之和）。</li>
</ol>
<h2 id="5-结果可视化"><a href="#5-结果可视化" class="headerlink" title="5.结果可视化"></a>5.结果可视化</h2><ul>
<li>雷达图绘制：<br>  极坐标下，横轴为方位角，纵轴为速度，颜色表示归一化功率。<br>  标注最大能量点，显示其方位角和速度。</li>
<li>输出：每天生成一张PNG图片，保存至arr_figures目录。</li>
</ul>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Custom FK / beamforming array analysis (no obspy.array_processing)</span><br><span class="line">改进：使用速度 (km/s) 替代慢度，每天输出雷达图，并标注最大能量点</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import os</span><br><span class="line">import glob</span><br><span class="line">import math</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy import read, UTCDateTime</span><br><span class="line">from datetime import timedelta</span><br><span class="line"></span><br><span class="line"># ---------------- User parameters ----------------</span><br><span class="line">station_file = &quot;station.lst&quot;</span><br><span class="line">data_dir = &quot;data&quot;                 # structure: data/YYYYMMDD/NET_STA_LH?.SAC</span><br><span class="line">output_dir = &quot;arr_figures&quot;</span><br><span class="line">os.makedirs(output_dir, exist_ok=True)</span><br><span class="line"></span><br><span class="line"># frequency band of interest</span><br><span class="line">fmin, fmax = 0.028, 0.032  # Hz</span><br><span class="line"></span><br><span class="line"># window settings</span><br><span class="line">win_len = 1800             # seconds</span><br><span class="line">win_frac = 0.5             # 50% overlap</span><br><span class="line">win_step = int(win_len * (1 - win_frac))</span><br><span class="line"></span><br><span class="line"># FK grid</span><br><span class="line">az_step = 5.0</span><br><span class="line">az_grid = np.arange(0, 360, az_step)</span><br><span class="line"></span><br><span class="line"># speed search (instead of slowness)</span><br><span class="line">vmin, vmax, vstep = 1, 5.0, 0.05  # km/s</span><br><span class="line">#s_grid = 1.0 / np.arange(vmax, vmin, -vstep)  # convert to slowness s/km</span><br><span class="line">speed_grid = np.arange(vmin, vmax, vstep)  # convert to slowness s/km</span><br><span class="line"></span><br><span class="line">#speed_grid = 1.0 / s_grid  # for plotting</span><br><span class="line">s_grid = 1.0 / speed_grid  # for plotting</span><br><span class="line"></span><br><span class="line"># day range</span><br><span class="line">start_date = UTCDateTime(&quot;2013-01-01&quot;)</span><br><span class="line">end_date   = UTCDateTime(&quot;2025-01-01&quot;)</span><br><span class="line"></span><br><span class="line"># minimal number of stations</span><br><span class="line">min_stations = 3</span><br><span class="line"></span><br><span class="line"># ---------------- helper functions ----------------</span><br><span class="line">def read_stations(station_file):</span><br><span class="line">    stations = []</span><br><span class="line">    with open(station_file, &quot;r&quot;) as f:</span><br><span class="line">        for line in f:</span><br><span class="line">            line = line.strip()</span><br><span class="line">            if not line or line.startswith(&quot;#&quot;):</span><br><span class="line">                continue</span><br><span class="line">            parts = line.split(&quot;|&quot;)</span><br><span class="line">            if len(parts) &lt; 4:</span><br><span class="line">                continue</span><br><span class="line">            net, sta = parts[0].strip(), parts[1].strip()</span><br><span class="line">            try:</span><br><span class="line">                lat = float(parts[2]); lon = float(parts[3])</span><br><span class="line">            except Exception:</span><br><span class="line">                continue</span><br><span class="line">            stations.append((net, sta, lat, lon))</span><br><span class="line">    return stations</span><br><span class="line"></span><br><span class="line">def geo_to_xy_km(lats, lons):</span><br><span class="line">    lat0 = np.mean(lats)</span><br><span class="line">    lon0 = np.mean(lons)</span><br><span class="line">    deg2km_lat = 110.574</span><br><span class="line">    deg2km_lon = 111.320 * math.cos(math.radians(lat0))</span><br><span class="line">    xs = (np.array(lons) - lon0) * deg2km_lon</span><br><span class="line">    ys = (np.array(lats) - lat0) * deg2km_lat</span><br><span class="line">    return xs, ys, lat0, lon0</span><br><span class="line"></span><br><span class="line">def window_slices(day_start, win_len, win_step):</span><br><span class="line">    t0 = int(day_start.timestamp)</span><br><span class="line">    t_end = int((day_start + 86400).timestamp)</span><br><span class="line">    slices = []</span><br><span class="line">    t = t0</span><br><span class="line">    while t + win_len &lt;= t_end:</span><br><span class="line">        slices.append((t, t + win_len))</span><br><span class="line">        t += win_step</span><br><span class="line">    return slices</span><br><span class="line"></span><br><span class="line">def next_pow2(n):</span><br><span class="line">    return 1 &lt;&lt; (n - 1).bit_length()</span><br><span class="line"></span><br><span class="line"># ---------------- main pipeline ----------------</span><br><span class="line">stations = read_stations(station_file)</span><br><span class="line">if len(stations) == 0:</span><br><span class="line">    raise SystemExit(&quot;No stations read from station.lst&quot;)</span><br><span class="line"></span><br><span class="line">print(f&quot;[INFO] Read &#123;len(stations)&#125; stations&quot;)</span><br><span class="line"></span><br><span class="line">current = start_date</span><br><span class="line">while current &lt;= end_date:</span><br><span class="line">    day_str = current.strftime(&quot;%Y%m%d&quot;)</span><br><span class="line">    day_path = os.path.join(data_dir, day_str)</span><br><span class="line">    print(f&quot;\n[INFO] Processing &#123;day_str&#125; ...&quot;)</span><br><span class="line">    if not os.path.isdir(day_path):</span><br><span class="line">        print(f&quot;[WARN] &#123;day_path&#125; not found. skip.&quot;)</span><br><span class="line">        current += timedelta(days=1)</span><br><span class="line">        continue</span><br><span class="line"></span><br><span class="line">    # read one trace per station</span><br><span class="line">    traces = &#123;&#125;</span><br><span class="line">    lat_list = []; lon_list = []; net_sta_list = []</span><br><span class="line">    for net, sta, lat, lon in stations:</span><br><span class="line">        pattern = os.path.join(day_path, f&quot;&#123;net&#125;_&#123;sta&#125;_LHZ.SAC&quot;)</span><br><span class="line">        files = sorted(glob.glob(pattern))</span><br><span class="line">        if not files: continue</span><br><span class="line">        try:</span><br><span class="line">            tr = read(files[0])[0]</span><br><span class="line">            traces[(net,sta)] = tr</span><br><span class="line">            lat_list.append(lat); lon_list.append(lon); net_sta_list.append((net,sta))</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(f&quot;[WARN] read &#123;files[0]&#125; failed: &#123;e&#125;&quot;)</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">    nsta = len(traces)</span><br><span class="line">    if nsta &lt; min_stations:</span><br><span class="line">        print(f&quot;[WARN] Only &#123;nsta&#125; stations available, skip.&quot;)</span><br><span class="line">        current += timedelta(days=1)</span><br><span class="line">        continue</span><br><span class="line"></span><br><span class="line">    # sampling rate</span><br><span class="line">    sr_target = min([tr.stats.sampling_rate for tr in traces.values()])</span><br><span class="line">    xs, ys, lat0, lon0 = geo_to_xy_km(lat_list, lon_list)</span><br><span class="line"></span><br><span class="line">    # reorder traces</span><br><span class="line">    traces_ordered = [traces[k] for k in net_sta_list]</span><br><span class="line"></span><br><span class="line">    # window slices</span><br><span class="line">    day_start = UTCDateTime(current.strftime(&quot;%Y-%m-%dT00:00:00&quot;))</span><br><span class="line">    slices = window_slices(day_start, win_len, win_step)</span><br><span class="line">    print(f&quot;[INFO] &#123;len(slices)&#125; windows&quot;)</span><br><span class="line"></span><br><span class="line">    # accumulate daily power grid</span><br><span class="line">    daily_power = np.zeros((len(az_grid), len(s_grid)))</span><br><span class="line">    nwin_used = 0</span><br><span class="line"></span><br><span class="line">    for (t0, t1) in slices:</span><br><span class="line">        specs = []</span><br><span class="line">        valid = True</span><br><span class="line">        nfft = None</span><br><span class="line">        for tr in traces_ordered:</span><br><span class="line">            try:</span><br><span class="line">                seg = tr.slice(UTCDateTime(t0), UTCDateTime(t1), nearest_sample=False)</span><br><span class="line">            except:</span><br><span class="line">                valid = False; break</span><br><span class="line">            expected_npts = int(round((t1 - t0) * sr_target))</span><br><span class="line">            data = seg.data.astype(np.float64)</span><br><span class="line">            if len(data) &lt; expected_npts:</span><br><span class="line">                if len(data) == 0: valid = False; break</span><br><span class="line">                data = np.pad(data, (0, expected_npts-len(data)))</span><br><span class="line">            elif len(data) &gt; expected_npts:</span><br><span class="line">                data = data[:expected_npts]</span><br><span class="line">            data -= np.mean(data)</span><br><span class="line">            data *= np.hanning(len(data))</span><br><span class="line">            if nfft is None:</span><br><span class="line">                nfft = next_pow2(len(data))</span><br><span class="line">            spec = np.fft.rfft(data, n=nfft)</span><br><span class="line">            freqs = np.fft.rfftfreq(nfft, d=1.0/sr_target)</span><br><span class="line">            specs.append(spec)</span><br><span class="line">        if not valid or nfft is None: continue</span><br><span class="line"></span><br><span class="line">        specs = np.array(specs)</span><br><span class="line">        freq_mask = (freqs&gt;=fmin)&amp;(freqs&lt;=fmax)</span><br><span class="line">        if not np.any(freq_mask): continue</span><br><span class="line">        freqs_sel = freqs[freq_mask]</span><br><span class="line">        specs_sel = specs[:, freq_mask]</span><br><span class="line"></span><br><span class="line">        xs_arr = np.array(xs); ys_arr = np.array(ys)</span><br><span class="line">        spec_power = np.sum(np.abs(specs_sel)**2)</span><br><span class="line">        if spec_power&lt;=0: continue</span><br><span class="line"></span><br><span class="line">        two_pi = 2*np.pi</span><br><span class="line">        power_grid = np.zeros((len(az_grid), len(s_grid)))</span><br><span class="line">        for ia, az_deg in enumerate(az_grid):</span><br><span class="line">            az_rad = math.radians(az_deg)</span><br><span class="line">            proj = xs_arr*np.sin(az_rad) + ys_arr*np.cos(az_rad)</span><br><span class="line">            for is_idx, s in enumerate(s_grid):</span><br><span class="line">                delays = proj*s</span><br><span class="line">                steering = np.exp(-1j*two_pi*np.outer(delays,freqs_sel))</span><br><span class="line">                beam_spectrum = np.sum(steering*specs_sel, axis=0)</span><br><span class="line">                power = np.sum(np.abs(beam_spectrum)**2)</span><br><span class="line">                power_grid[ia,is_idx] = power/spec_power</span><br><span class="line">        daily_power += power_grid</span><br><span class="line">        nwin_used += 1</span><br><span class="line"></span><br><span class="line">    if nwin_used==0:</span><br><span class="line">        print(f&quot;[WARN] no valid windows &#123;day_str&#125;&quot;)</span><br><span class="line">        current += timedelta(days=1)</span><br><span class="line">        continue</span><br><span class="line"></span><br><span class="line">    daily_power /= nwin_used</span><br><span class="line">    print(f&quot;[INFO] averaged over &#123;nwin_used&#125; windows&quot;)</span><br><span class="line"></span><br><span class="line">    # ---------------- plot daily radar ----------------</span><br><span class="line">    theta, r = np.meshgrid(np.deg2rad(az_grid), speed_grid)</span><br><span class="line">    Z = daily_power.T  # shape (len(s_grid), len(az_grid))</span><br><span class="line"></span><br><span class="line">    # locate max power</span><br><span class="line">    max_idx = np.unravel_index(np.argmax(Z), Z.shape)</span><br><span class="line">    max_az_deg = az_grid[max_idx[1]]</span><br><span class="line">    max_speed = r[max_idx]  # km/s</span><br><span class="line"></span><br><span class="line">    fig = plt.figure(figsize=(7,7))</span><br><span class="line">    ax = fig.add_subplot(111, polar=True)</span><br><span class="line">    pcm = ax.pcolormesh(theta, r, Z, shading=&quot;auto&quot;, cmap=&quot;viridis&quot;)</span><br><span class="line">    ax.set_theta_zero_location(&quot;N&quot;)</span><br><span class="line">    ax.set_theta_direction(-1)</span><br><span class="line">    ax.set_rmax(vmax)</span><br><span class="line">    #fig.colorbar(pcm, ax=ax, orientation=&quot;vertical&quot;, label=&quot;Normalized Power&quot;)</span><br><span class="line">    ax.set_title(f&quot;FK Radar &#123;day_str&#125;\nBand &#123;fmin&#125;-&#123;fmax&#125; Hz&quot;, fontsize=12)</span><br><span class="line"></span><br><span class="line">    # mark max point</span><br><span class="line">    ax.plot(np.deg2rad(max_az_deg), max_speed, &#x27;ro&#x27;, markersize=8, label=f&quot;Max Power\nAz=&#123;max_az_deg:.1f&#125;°, v=&#123;max_speed:.2f&#125; km/s&quot;)</span><br><span class="line">    ax.legend(loc=&#x27;upper right&#x27;, bbox_to_anchor=(1.3,1.1), fontsize=8)</span><br><span class="line"></span><br><span class="line">    out_png = os.path.join(output_dir, f&quot;fk_radar_&#123;day_str&#125;.png&quot;)</span><br><span class="line">    plt.savefig(out_png, dpi=200, bbox_inches=&quot;tight&quot;)</span><br><span class="line">    plt.close()</span><br><span class="line">    print(f&quot;[INFO] saved &#123;out_png&#125;&quot;)</span><br><span class="line">    current += timedelta(days=1)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>如何将图片转化成视频</title>
    <url>/png-to-mp4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;我的图一般都是在linux下生成，大量的图自然用命令来生成是最好的。这里用到程序ffmpeg，没有的话需要自己先安装了啊。<br>接下来用命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -pattern_type glob -framerate 24 -i &quot;2*.png&quot; -c:v libx264 -pix_fmt yuv420p output.mp4</span><br></pre></td></tr></table></figure>
<ul>
<li>-pattern_type glob: 作用是启用通配符模式匹配输入文件名。</li>
<li>-framerate 24: 作用是设置输入文件的帧率为24帧&#x2F;秒，那么如果你有100张图片，你生成的视频长度则为100&#x2F;25&#x3D;4.17秒。</li>
<li>-i &quot;2*.png&quot;:表示指定输入文件为所有以2开头的png文件。</li>
<li>-c:v libx264: 视频编码器为H.264</li>
<li>-pix_fmt yuv420p: 设置像素格式为YUV420色彩空间。</li>
<li>output.mp4: 输出文件。<br>ffmpeg的参数多得很，用到的时候可以去查。这句命令应该没啥问题，有问题就去问ai。另外，生成了mp4以后为了方便在ppt中演示播放可以将其转化为gif。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -i output.mp4 output.gif</span><br></pre></td></tr></table></figure>
然后就大功告成了啊。</li>
</ul>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Fedora中安装FreshRSS</title>
    <url>/fedora-install-freshress.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp;&emsp;之前总是蹭一个小伙子自己建的<a href="https://rss.othing.xyz/">RSS</a>，白嫖，怕哪天人家不搞了，还是自己建一个吧。详细脚本安装请查看其<a href="https://github.com/FreshRSS/FreshRSS/blob/edge/cli/README.md">github</a>。废话不多说，具体如下：</p>
<h1 id="一、安装依赖"><a href="#一、安装依赖" class="headerlink" title="一、安装依赖"></a>一、安装依赖</h1><p>FreshRSS是基于PHP的自建RSS聚合器，需要Apache+PHP环境：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install httpd php php-cli php-common php-json php-gd php-mbstring php-intl php-xml php-pdo php-mysqlnd unzip git -y</span><br></pre></td></tr></table></figure>

<p>启用并启动 Apache：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable --now httpd</span><br></pre></td></tr></table></figure>

<p>确认端口 80 正在监听：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ss -tulnp | grep :80</span><br></pre></td></tr></table></figure>
<h1 id="二、下载并安装-FreshRSS"><a href="#二、下载并安装-FreshRSS" class="headerlink" title="二、下载并安装 FreshRSS"></a>二、下载并安装 FreshRSS</h1><p>推荐安装到 &#x2F;usr&#x2F;share&#x2F;FreshRSS：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share</span><br><span class="line">sudo git clone https://github.com/FreshRSS/FreshRSS.git</span><br><span class="line">cd FreshRSS</span><br><span class="line">sudo git checkout stable   # 或 edge 分支（开发版）</span><br></pre></td></tr></table></figure>

<p>设置权限（Fedora 的 Apache 用户是 apache）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chown -R apache:apache /usr/share/FreshRSS</span><br><span class="line">sudo chmod -R 755 /usr/share/FreshRSS</span><br></pre></td></tr></table></figure>
<h1 id="三、配置-Apache"><a href="#三、配置-Apache" class="headerlink" title="三、配置 Apache"></a>三、配置 Apache</h1><p>新建配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/httpd/conf.d/freshrss.conf</span><br></pre></td></tr></table></figure>
<p>写入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Alias /FreshRSS /usr/share/FreshRSS</span><br><span class="line"></span><br><span class="line">&lt;Directory /usr/share/FreshRSS&gt;</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>
<p>保存退出后，重启 Apache：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart httpd</span><br></pre></td></tr></table></figure>
<h1 id="四、处理-SELinux-限制（Fedora-特有）"><a href="#四、处理-SELinux-限制（Fedora-特有）" class="headerlink" title="四、处理 SELinux 限制（Fedora 特有）"></a>四、处理 SELinux 限制（Fedora 特有）</h1><p>Fedora 默认启用了 SELinux，会阻止 Apache 访问 &#x2F;usr&#x2F;share 下的应用。<br>执行以下命令放行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chcon -R -t httpd_sys_rw_content_t /usr/share/FreshRSS</span><br><span class="line">sudo setsebool -P httpd_can_network_connect on</span><br></pre></td></tr></table></figure>
<p>（若仍被拒绝，可临时关闭测试：sudo setenforce 0）</p>
<h1 id="五、访问-Web-界面"><a href="#五、访问-Web-界面" class="headerlink" title="五、访问 Web 界面"></a>五、访问 Web 界面</h1><p>打开浏览器访问：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost/FreshRSS</span><br></pre></td></tr></table></figure>
<p>你应看到 FreshRSS 的安装页面。<br>根据提示创建管理员账号、数据库配置（SQLite&#x2F;MySQL 都可）。</p>
<p>如果提示 “You don’t have permission to access this resource”，请确认：</p>
<p>Apache 配置文件中包含 Require all granted</p>
<p>SELinux 权限已放行（执行了 chcon）</p>
<h1 id="六、命令行工具（可选）"><a href="#六、命令行工具（可选）" class="headerlink" title="六、命令行工具（可选）"></a>六、命令行工具（可选）</h1><p>FreshRSS 提供强大的 CLI 管理工具，位于 cli&#x2F; 目录。<br>例如列出用户：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/FreshRSS</span><br><span class="line">sudo -u apache php cli/list-users.php</span><br></pre></td></tr></table></figure>
<p>Fedora 用的是 apache 用户，而不是 Debian&#x2F;Ubuntu 的 www-data。</p>
<h1 id="七、日志与排错"><a href="#七、日志与排错" class="headerlink" title="七、日志与排错"></a>七、日志与排错</h1><p>查看 Apache 错误日志：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo tail -n 30 /var/log/httpd/error_log</span><br></pre></td></tr></table></figure>

<p>查看 SELinux 拒绝记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ausearch -m AVC,USER_AVC -ts recent</span><br></pre></td></tr></table></figure>
<h1 id="八、（可选）设置自动更新任务"><a href="#八、（可选）设置自动更新任务" class="headerlink" title="八、（可选）设置自动更新任务"></a>八、（可选）设置自动更新任务</h1><p>添加一个定时任务更新 RSS 源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u apache php /usr/share/FreshRSS/app/actualize_script.php &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>在 &#x2F;etc&#x2F;cron.d&#x2F;freshrss 中添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*/20 * * * * apache php /usr/share/FreshRSS/app/actualize_script.php &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>表示每20分钟更新一次。</p>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(28)</title>
    <url>/paper-reading-28.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>作者提出了SGLOBE‐Q2D，一个具有不确定性的全球上地幔频率依赖瑞利波衰减模型。使用了约 1000 万个基阶与高阶（最高至第 4 阶谐波）瑞利波振幅测量，周期范围为T≈38–275 秒。振幅数据已校正震源效应与弹性效应，包括（a）移除靠近震源节面的路径；（b）校正台站下方局部结构效应；（c）利用线性射线理论近似考虑聚焦&#x2F;散焦效应。通过大量合成反演测试，支持将基阶模型展开至球谐阶数20，高于近期全球衰减研究的阶数。观测到太平洋大部分区域下方存在广泛的高衰减异常，可能与热点、弧后扩张及地幔柱有关；同时，非洲的刚果与卡拉哈里克拉通、东欧与西伯利亚克拉通之间表现出清晰的低衰减异常分隔。将SGLOBE‐Q2D与相应相速度图对比，表明上地幔温度对衰减异常有显著控制作用，但水、部分熔融、氧化还原状态及晶粒尺寸等因素也可能起作用。</p>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><p>地震衰减直接反映地球介质的非弹性性质，对上地幔温度变化极为敏感，可独立验证速度异常是否源于热效应；同时对部分熔融、水含量、晶粒尺寸、氧化还原状态等也更灵敏，能区分“热”与“化学”异常。全球高分辨率衰减图可揭示地幔柱、弧后扩张、俯冲带等深部动力学过程，为板块驱动力研究提供关键约束；与速度模型联合解释，可分解弹性与非弹性贡献，减少速度-温度转换的多解性。此外，克拉通岩石圈厚度、热异常边界与金属矿床、油气储层及地震活动性存在耦合，衰减结构对资源评价和灾害评估具有实际意义。</p>
<h3 id="前人研究综述与不足"><a href="#前人研究综述与不足" class="headerlink" title="前人研究综述与不足"></a>前人研究综述与不足</h3><p>Dalton &amp; Ekström (2006) 仅用基阶瑞利波振幅和线性射线理论，球谐阶数止步12，空间分辨率约1300 km，未引入高阶模，也未给出不确定度。Ma et al. (2016) 把阶数提到16并考虑有限频率聚焦，但仍限于基阶，且未提供逐点误差。Adenis et al. (2017) 采用波形反演与三维谱元正演，阶数同为16，却使用非PREM初始模型，长周期偏差较大，计算成本极高，高阶模结果未公开。Gung &amp; Romanowicz (2004) 虽在波形中引入第1阶，但数据量小、无聚焦校正、南半球覆盖差。区域海底阵列如NoMelt只给出单点一维曲线，无法全球对比，也缺少高阶模深度约束。总体来看，早期模型阶数低、高阶模缺失、误差未量化、克拉通内部结构模糊，成为本文突破的出发点。</p>
<h3 id="本文数据与方法"><a href="#本文数据与方法" class="headerlink" title="本文数据与方法"></a>本文数据与方法</h3><p>研究收集955万条垂直分量小弧瑞利波振幅比，来自12232次4–9级、深12–700 km的地震，由全球1017个台站记录，周期37–275 s，涵盖基阶至第4阶谐波；路径弧长限定30°–110°以避免近源效应并减少模态混叠。首先剔除靠近震源节面的路径（占1.6%），再用自洽相速度图（阶数20）按线性射线理论计算聚焦&#x2F;散焦校正，最后基于SGLOBE-rani地幔模型与CRUST2.0地壳模型计算台站下方局部放大效应。反演采用阻尼加权最小二乘，参数化为ln(Q)，按5°聚类路径数赋权；通过L-曲线选取正则强度，并用模型协方差矩阵输出格点标准差。为确定可分辨阶数，作者将阶数40的合成衰减图加噪反演，以相关系数≥0.8为标准，最终确定基阶可扩至阶数20，第1–4阶分别至15、12、10。</p>
<h3 id="主要结果"><a href="#主要结果" class="headerlink" title="主要结果"></a>主要结果</h3><p>周期40–70 s的基阶图显示海洋普遍高衰减，快速扩张的东太平洋海隆最强，慢速扩张的大西洋与印度洋稍弱；青藏高原呈现显著高衰减；所有主要克拉通均表现为清晰低衰减异常。100–150 s图上，太平洋远离海隆区域仍保持高衰减，暗示多股或宽大地幔柱；俯冲带弧后区亦高衰减，部分海隆下方出现线性低衰减带，可能与岩石圈冷却有关。第1阶图在西太平洋俯冲带和欧亚下方与基阶特征相似；第2–4阶因深度振荡敏感核与数据稀疏，空间相关性下降，误差可达±15。基阶不确定度通常≤±6，高阶模±15；东太平洋与南极射线覆盖最差，误差最大。</p>
<h3 id="创新点与贡献"><a href="#创新点与贡献" class="headerlink" title="创新点与贡献"></a>创新点与贡献</h3><p>首次将全球基阶衰减图扩至球谐阶数20，半波长分辨率约1000 km，比DEA06、QMA16提高20–30%。系统构建并公开第1–4阶全球衰减图，增强200–600 km过渡带采样。基于模型协方差给出完整格点误差，可直接用于后续三维反演与热力学解释。明确成像非洲刚果与卡拉哈里、东欧与西伯利亚克拉通之间的低衰减分隔，为先前阶数16模型所未见。振幅数据、绘图脚本及合成测试流程全部开源，为社区提供可复现平台。</p>
<h3 id="局限与未来方向"><a href="#局限与未来方向" class="headerlink" title="局限与未来方向"></a>局限与未来方向</h3><p>理论层面仍采用线性射线聚焦与一维接收者校正，未考虑有限频率效应与三维弹性散射；未来可用谱元-波形联合反演，自动包含完整弹性效应。高阶模数据量仅为基阶十分之一，南半球、非洲、大西洋覆盖不足，误差偏大；需补充海底OBS阵列与长期台网，并发展新的模态分离算法。基阶参数化上限为阶数20，对应约1000 km，更小尺度结构需依赖区域密集阵列；可采用自适应球谐-小波混合基函数。温度-衰减转换仍依赖实验标定，水、熔体、晶粒尺寸等多因素耦合尚未量化；下一步应结合矿物物理实验与贝叶斯热-化学联合反演，输出温度、水、熔体概率。误差估计尚未考虑相速度图误差、CRUST2.0外推误差及震源深度&#x2F;机制误差；未来可引入震源-结构联合反演，并使用更新全球地壳模型以进一步降低系统误差。</p>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>文献阅读(29)</title>
    <url>/paper-reading-29.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h3><p>本文利用全球分布的地震台网（GEOSCOPE）7 年连续三分量记录，对背景噪声进行了频率相关的量化与表征。地脉动于海浪相互作用，是地球上最强且普遍存在的背景噪声。作者提出一种适用于时频域的新方法，可检测极化信号并用以刻画地脉动噪声。通过定义“椭圆极化度”（Degree of Polarization, DOP）谱，发现地脉动频段比其他频带具有更强的极化性。基于单台站极化分析，可测量噪声的背方位角（BAZ），并揭示其明显的季节变化。所得 BAZ 与海浪模型计算的理论源区方向一致，表明该测量稳健可靠。</p>
<hr>
<h3 id="相关研究的重要性"><a href="#相关研究的重要性" class="headerlink" title="相关研究的重要性"></a>相关研究的重要性</h3><ol>
<li><p>地脉动虽被视为“干扰”，但已成为新一代地震学信号源：  </p>
<ul>
<li>可用于背景噪声面波层析成像，弥补天然地震空间分布不均；  </li>
<li>可实时追踪海洋风暴路径，为气候与海洋预报提供独立数据；  </li>
<li>是研究海洋-固体地球能量耦合的重要观测窗口。</li>
</ul>
</li>
<li><p>传统源区定位需大规模台阵，通过走时差或相干性实现，布设与维护成本高；若能用单台三分量完成方向估计，将显著降低野外工作量。  </p>
</li>
<li><p>极化分析给出的背方位角可直接指向海浪源区，为验证和改进海浪-海底耦合理论（Longuet-Higgins, 1950）提供定量观测依据。  </p>
</li>
<li><p>极化度指标本身可作为“信噪品质”度量，用于噪声层析中对方向性偏差进行校正，提高地下成像精度。</p>
</li>
</ol>
<hr>
<h3 id="前人相关研究及不足"><a href="#前人相关研究及不足" class="headerlink" title="前人相关研究及不足"></a>前人相关研究及不足</h3><ol>
<li><p>Longuet-Higgins (1950) 提出双频压力机制解释二次微地震，奠定了理论基础，但缺乏全球尺度观测验证。  </p>
</li>
<li><p>Hasselmann (1963) 采用统计方法描述海浪与海底耦合，未考虑波动方向与极化信息。  </p>
</li>
<li><p>Schulte-Pelkum et al. (2004) 利用美国西部密集台阵发现海洋噪声具有强烈方向性，然而依赖台阵且采用时域协方差，频率分辨率有限。  </p>
</li>
<li><p>Tanimoto et al. (2006) 分析南加州台站水平&#x2F;垂直振幅比的季节变化，仅利用振幅比，未直接测量方向。  </p>
</li>
<li><p>Gerstoft et al. (2008) 用台阵反演 P 波微地震源区，依然需要密集台站，且未利用极化属性。  </p>
</li>
<li><p>Bromirski &amp; Duennebier (2002) 对比近岸与远海地脉动振幅谱，发现频谱差异，但未给出全球单台极化方向。  </p>
</li>
<li><p>Stehly et al. (2006) 利用互相关研究噪声源季节变化，需要双台记录，无法给出瞬时方向。  </p>
</li>
<li><p>Chevrot et al. (2007) 用欧洲台阵定位第二类地脉动，台阵覆盖有限，且未与海浪模型系统对比。  </p>
</li>
<li><p>Aster et al. (2008) 将地脉动功率与多年气候序列关联，仅用功率谱，无方向与极化信息。</p>
</li>
</ol>
<p>总体不足：  </p>
<ul>
<li>多数研究依赖台阵，单台极化研究稀少；  </li>
<li>以功率或互相关为主，缺乏定量极化度指标；  </li>
<li>时域或窄带分析，难以同时处理非平稳性与多源叠加；  </li>
<li>很少与独立海浪模型进行季节对比验证。</li>
</ul>
<hr>
<h3 id="本文数据"><a href="#本文数据" class="headerlink" title="本文数据"></a>本文数据</h3><ul>
<li>GEOSCOPE 全球 27 个三分量宽频带台站 2001–2007 年连续波形，采样率 1 sps（长周期通道），共 7 年、约 8000 个台日。  </li>
<li>使用垂直、北-南、东-西三分量地面速度记录。</li>
</ul>
<hr>
<h3 id="本文方法"><a href="#本文方法" class="headerlink" title="本文方法"></a>本文方法</h3><ol>
<li>预处理：去除仪器响应，得到地面速度时序。  </li>
<li>时频分解：采用 S 变换（Stockwell et al., 1996），窗宽随周期自动缩放（2σ &#x3D; 3T）。  </li>
<li>极化分析：  <ul>
<li>对每个时频点构建 3×3 谱矩阵；  </li>
<li>特征分解得瞬时椭圆长轴、短轴与面法向量；  </li>
<li>定义“椭圆极化度”DOP，并用面法向量与垂向夹角加权，突出垂直面内椭圆运动；  </li>
<li>假定基阶瑞利波为逆行进椭圆，消除 180° 模糊，提取背方位角 BAZ。</li>
</ul>
</li>
<li>对比验证：利用 Ifremer WAVEWATCH III 海浪模式（含岸线反射）计算全球第二类地脉动理论源区，与实测 BAZ 按月平均进行季节对比。</li>
</ol>
<hr>
<h3 id="本文结果"><a href="#本文结果" class="headerlink" title="本文结果"></a>本文结果</h3><ol>
<li>极化谱显示第一类（0.05–0.08 Hz）与第二类（0.09–0.15 Hz）地脉动呈明显双峰，且极化度高于两侧频段。  </li>
<li>单台 BAZ 存在显著季节变化：北半球夏季主要来自南方，冬季主要来自北方，与海浪气候同步。  </li>
<li>在 0.09–0.14 Hz 观察到线性“频散条纹”，频率随时间斜升，斜率与深海重力波群速 ug &#x3D; gT&#x2F;4π 一致，为首次在单台极化数据中出现。  </li>
<li>与海浪模型对比：实测 BAZ 指向与理论 SM 源区方向总体吻合，季节变化一致，相关系数视觉高于 0.8。  </li>
<li>内陆站（如 TAM）季节信号最清晰；沿海站受近岸源影响，BAZ 分布带宽约 90°。</li>
</ol>
<hr>
<h3 id="本文创新点与贡献"><a href="#本文创新点与贡献" class="headerlink" title="本文创新点与贡献"></a>本文创新点与贡献</h3><ol>
<li>方法创新：首次将“时频椭圆极化度 + DOP 阈值”用于 7 年全球连续噪声，实现单台站方向测量。  </li>
<li>观测创新：  <ul>
<li>提出“极化谱”概念，量化地脉动极化强度随频率分布；  </li>
<li>首次在单台极化结果中观察到海浪群速引起的线性频散条纹。</li>
</ul>
</li>
<li>验证创新：将地震极化 BAZ 与完全独立的海浪模型（含海岸线反射）进行系统季节对比，证明 BAZ 稳健。  </li>
<li>应用潜力：为噪声层析提供方向偏差校正；为海洋风暴&#x2F;气候监测提供新手段；指导海底或岸基临时台站选址。</li>
</ol>
<hr>
<h3 id="本文不足与未来展望"><a href="#本文不足与未来展望" class="headerlink" title="本文不足与未来展望"></a>本文不足与未来展望</h3><ol>
<li>仅使用 1 sps 长周期数据，未分析 0.5–1.4 Hz 高频体波微地震——可提高采样率，联合 P 波微地震研究。  </li>
<li>DOP 阈值与指数 n 人为选取，可能影响信号数量——未来可采用自适应或机器学习优化阈值。  </li>
<li>海浪模型为“理论源”，未同步反演源强度与 BAZ——可发展联合反演，实现源区强度-方向同时成像。  </li>
<li>未考虑地壳各向异性或三维结构对 BAZ 的偏折——可引入三维地壳模型进行射线校正。  </li>
<li>目前仅针对瑞利波椭圆极化，未系统研究 Love 波极化——可开发 Love-Rayleigh 分离方法，探讨 Love 波源区特征。</li>
</ol>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>计算背景噪声中噪声源背方位角</title>
    <url>/noise-source-back-azimuth.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>当然是DOP-E啦(基于论文 Schimmel et al., 2011; Berbellini et al., 2019)。  </p>
<h2 id="总体流程概述"><a href="#总体流程概述" class="headerlink" title="总体流程概述"></a>总体流程概述</h2><ol>
<li><strong>数据预处理</strong>（去趋势、去仪器、对齐）  </li>
<li><strong>S-transform 时频分解</strong></li>
<li><strong>构造谱矩阵与时域平滑</strong>  </li>
<li><strong>本征分解求极化参数（DOP、planarity、semimajor axis）</strong>  </li>
<li><strong>筛选高质量段</strong>（DOP &gt; 阈值 &amp; planarity 接近水平）  </li>
<li><strong>计算背方位角（BAZ）并消除 180° 二义性</strong>  </li>
<li><strong>输出可视化与统计</strong>（时频图、直方图、极坐标图）  </li>
<li><strong>验证与质量控制（QA）</strong>  </li>
<li><strong>批量与性能优化</strong></li>
</ol>
<hr>
<h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>确保三分量（Z&#x2F;N&#x2F;E）记录在同一时间基线，且仅保留稳定的噪声段。</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li><p><strong>去仪器响应</strong>  </p>
<ul>
<li>去仪器响应，转换到速度记录。</li>
</ul>
</li>
<li><p><strong>去趋势 &#x2F; 去均值</strong>  </p>
<ul>
<li><code>trace.detrend(&quot;linear&quot;); trace.detrend(&quot;demean&quot;)</code></li>
</ul>
</li>
<li><p><strong>剔除事件或脉冲干扰</strong>  </p>
<ul>
<li>可通过短时能量（STA&#x2F;LTA）检测排除瞬变信号（例如地震）。</li>
</ul>
</li>
<li><p><strong>时间对齐与补零</strong>  </p>
<ul>
<li>三分量必须同起止时刻；短 gap 可补零，长 gap 建议跳过。</li>
</ul>
</li>
</ol>
<hr>
<h2 id="S-transform"><a href="#S-transform" class="headerlink" title="S-transform"></a>S-transform</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>$$<br>S(t,f)&#x3D;\int x(\tau)\frac{|f|}{\sqrt{2\pi}}e^{-(t-\tau)^2f^2&#x2F;2}e^{-i2\pi f\tau}d\tau<br>$$</p>
<h3 id="参数与理由"><a href="#参数与理由" class="headerlink" title="参数与理由"></a>参数与理由</h3><table>
<thead>
<tr>
<th>参数</th>
<th>推荐值</th>
<th>理由</th>
</tr>
</thead>
<tbody><tr>
<td>频率点数 <code>n_freqs</code></td>
<td>60</td>
<td>覆盖 0.01–0.06 Hz 区间，低频对数分辨率更合理</td>
</tr>
<tr>
<td>窗宽 σ</td>
<td>1&#x2F;(2πf)</td>
<td>论文定义，时间-频率能量守恒</td>
</tr>
<tr>
<td>调整系数 k</td>
<td>1.0–1.5</td>
<td>增大可提高时域平滑性</td>
</tr>
<tr>
<td>降采样步长 step</td>
<td>5 s</td>
<td>提高计算效率，仍能解析低频信号</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>说明</strong>：<br>σ &#x3D; 1&#x2F;(2πf) 表示随频率增加窗宽减小，确保多分辨率特性。<br>|f|&#x2F;√(2π) 为归一化系数，维持 Parseval 能量一致性。  </p>
</blockquote>
<hr>
<h2 id="谱矩阵构造与平滑"><a href="#谱矩阵构造与平滑" class="headerlink" title="谱矩阵构造与平滑"></a>谱矩阵构造与平滑</h2><h3 id="谱矩阵定义"><a href="#谱矩阵定义" class="headerlink" title="谱矩阵定义"></a>谱矩阵定义</h3><p>$$<br>S_{ij}(t,f) &#x3D; \widetilde{X_i}(t,f)\widetilde{X_j}^*(t,f)<br>$$<br>其中 $ \widetilde{X_i}(t,f) $ 为分量 i 的 S-transform 复系数。</p>
<h3 id="平滑"><a href="#平滑" class="headerlink" title="平滑"></a>平滑</h3><p>对时间方向做高斯平滑：<br>$$<br>\sigma_{\text{tf}} &#x3D; \text{tf_window_periods} \times T \times f_s<br>$$</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>推荐值</th>
<th>理由</th>
</tr>
</thead>
<tbody><tr>
<td><code>tf_window_periods</code></td>
<td>3.0</td>
<td>论文示例值（2s ≈ 3T），平滑噪声但保留相干波</td>
</tr>
<tr>
<td>DOP 窗长度</td>
<td><code>4 × T</code></td>
<td>保证至少 4 周期稳定极化，论文建议值</td>
</tr>
</tbody></table>
<hr>
<h2 id="本征分解与极化属性"><a href="#本征分解与极化属性" class="headerlink" title="本征分解与极化属性"></a>本征分解与极化属性</h2><p>对每个 (t,f) 做 3×3 复矩阵本征分解：<br>$$<br>S &#x3D; V \Lambda V^H,\quad \Lambda &#x3D; \operatorname{diag}(\lambda_1,\lambda_2,\lambda_3)<br>$$</p>
<h3 id="DOP（Degree-of-Polarization）"><a href="#DOP（Degree-of-Polarization）" class="headerlink" title="DOP（Degree of Polarization）"></a>DOP（Degree of Polarization）</h3><p>$$<br>\mathrm{DOP} &#x3D; \frac{\lambda_1 - \lambda_2}{\lambda_1 + \lambda_2 + \lambda_3}<br>$$</p>
<h3 id="Planarity"><a href="#Planarity" class="headerlink" title="Planarity"></a>Planarity</h3><p>通过主、次特征向量叉积求平面法线，与竖直方向夹角 α：</p>
<ul>
<li>若 α ≈ 90° → 水平 planarity（Rayleigh 波特征）  </li>
<li>若 α ≈ 0° → 垂直平面（Love 波或噪声）</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>推荐值</th>
<th>理由</th>
</tr>
</thead>
<tbody><tr>
<td><code>dop_thresh</code></td>
<td>0.8</td>
<td>论文常用 0.75–0.85；取 0.8 折中稳健</td>
</tr>
<tr>
<td><code>alpha_min</code></td>
<td>60°</td>
<td>仅保留水平 planarity</td>
</tr>
</tbody></table>
<hr>
<h2 id="背方位角（BAZ）计算"><a href="#背方位角（BAZ）计算" class="headerlink" title="背方位角（BAZ）计算"></a>背方位角（BAZ）计算</h2><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$$<br>\mathrm{BAZ} &#x3D; \operatorname{atan2}(E, N)<br>$$<br>以度为单位，0° &#x3D; 北，顺时针增加。</p>
<h3 id="处理细节"><a href="#处理细节" class="headerlink" title="处理细节"></a>处理细节</h3><ul>
<li>使用主特征向量的水平分量 (N,E)。  </li>
<li>实部幅值过小则跳过或使用相位差法。  </li>
<li>输出角度范围 [0, 360°)。</li>
</ul>
<h3 id="二义性处理"><a href="#二义性处理" class="headerlink" title="二义性处理"></a>二义性处理</h3><ul>
<li>单台存在 ±180° 二义性。  </li>
<li><strong>假设 retrograde（瑞利波基模）</strong>，可选反向修正：若竖直与水平分量相位差 ~180°，翻转 BAZ。</li>
</ul>
<hr>
<h2 id="筛选与聚合输出"><a href="#筛选与聚合输出" class="headerlink" title="筛选与聚合输出"></a>筛选与聚合输出</h2><h3 id="筛选规则"><a href="#筛选规则" class="headerlink" title="筛选规则"></a>筛选规则</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">DOP &gt;= 0.8</span><br><span class="line">planarity_angle &gt; 60°</span><br></pre></td></tr></table></figure>

<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">DOP-E style polarization + BAZ extraction using paper-consistent S-transform</span><br><span class="line">Implements Schimmel et al. (2011) S-transform definition with speed optimizations (Numba).</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    python dop_e_st_paper.py /path/to/sac_dir --target-freq 0.03 --outs out</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">- Schimmel, Stutzmann, Ardhuin &amp; Gallart (2011), Polarized Earth&#x27;s ambient microseismic noise, G³</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import os</span><br><span class="line">import glob</span><br><span class="line">import argparse</span><br><span class="line">from collections import defaultdict</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy import read</span><br><span class="line">from scipy.signal import get_window</span><br><span class="line">from numba import njit, prange</span><br><span class="line">import math</span><br><span class="line">import warnings</span><br><span class="line"></span><br><span class="line">warnings.filterwarnings(&quot;ignore&quot;)</span><br><span class="line"></span><br><span class="line"># ======================================================</span><br><span class="line"># S-transform implementation per Schimmel et al. (2011)</span><br><span class="line"># ======================================================</span><br><span class="line"></span><br><span class="line">def s_transform(x, fs, freqs, pad=True):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Paper-consistent S-transform:</span><br><span class="line">    S(t,f) = ∫ x(τ) * |f|/√(2π) * exp[-(t-τ)^2 f^2 / 2] * exp[-i2π f τ] dτ</span><br><span class="line">    Implemented via FFT multiplication.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    n = len(x)</span><br><span class="line">    dt = 1.0 / fs</span><br><span class="line">    if pad:</span><br><span class="line">        Nfft = 1 &lt;&lt; ((2 * n - 1).bit_length())</span><br><span class="line">    else:</span><br><span class="line">        Nfft = n</span><br><span class="line">    t = np.arange(n) * dt</span><br><span class="line">    X = np.fft.fft(x, n=Nfft)</span><br><span class="line">    freqs_fft = np.fft.fftfreq(Nfft, d=dt)</span><br><span class="line"></span><br><span class="line">    S = np.zeros((len(freqs), n), dtype=np.complex128)</span><br><span class="line">    # time index array</span><br><span class="line">    for i, f in enumerate(freqs):</span><br><span class="line">        if f &lt;= 0:</span><br><span class="line">            continue</span><br><span class="line">        # build Gaussian window in frequency domain for convolution</span><br><span class="line">        # Using exact analytical equivalence:</span><br><span class="line">        # G(f&#x27;) = exp[-2π^2 (f&#x27;-f)^2 / f^2]</span><br><span class="line">        g_f = np.exp(-2.0 * (np.pi ** 2) * ((freqs_fft - f) ** 2) / (f ** 2))</span><br><span class="line">        # convolution via inverse FFT</span><br><span class="line">        s_ifft = np.fft.ifft(X * g_f, n=Nfft)</span><br><span class="line">        s_ifft = s_ifft[:n]</span><br><span class="line">        # normalization factor |f|/sqrt(2π)</span><br><span class="line">        S[i, :] = (abs(f) / np.sqrt(2.0 * np.pi)) * s_ifft * np.exp(1j * 2 * np.pi * f * t)</span><br><span class="line">    return S</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ======================================================</span><br><span class="line"># Polarization &amp; BAZ analysis (Numba optimized)</span><br><span class="line"># ======================================================</span><br><span class="line"></span><br><span class="line">@njit(parallel=True, fastmath=True)</span><br><span class="line">def compute_dop_baz(cz, cn, ce, periods, fs, dop_thresh):</span><br><span class="line">    nfr, nt = cz.shape</span><br><span class="line">    DOP = np.zeros((nfr, nt))</span><br><span class="line">    BAZ = np.full((nfr, nt), np.nan)</span><br><span class="line">    QUALITY = np.zeros((nfr, nt))</span><br><span class="line"></span><br><span class="line">    for ifr in prange(nfr):</span><br><span class="line">        for it in range(nt):</span><br><span class="line">            # spectral matrix (3x3)</span><br><span class="line">            Z = cz[ifr, it]</span><br><span class="line">            N = cn[ifr, it]</span><br><span class="line">            E = ce[ifr, it]</span><br><span class="line">            S00 = (Z * np.conj(Z)).real</span><br><span class="line">            S01 = (Z * np.conj(N))</span><br><span class="line">            S02 = (Z * np.conj(E))</span><br><span class="line">            S11 = (N * np.conj(N)).real</span><br><span class="line">            S12 = (N * np.conj(E))</span><br><span class="line">            S22 = (E * np.conj(E)).real</span><br><span class="line"></span><br><span class="line">            # Hermitian matrix</span><br><span class="line">            S = np.array([[S00, S01.real, S02.real],</span><br><span class="line">                          [S01.real, S11, S12.real],</span><br><span class="line">                          [S02.real, S12.real, S22]], dtype=np.float64)</span><br><span class="line"></span><br><span class="line">            # eigen decomposition</span><br><span class="line">            w, v = np.linalg.eigh(S)</span><br><span class="line">            idx = np.argsort(w)[::-1]</span><br><span class="line">            w = w[idx]</span><br><span class="line">            v = v[:, idx]</span><br><span class="line">            # DOP = (λ1 - λ2)/(λ1+λ2+λ3)</span><br><span class="line">            denom = w.sum()</span><br><span class="line">            if denom &lt;= 0:</span><br><span class="line">                dop_val = 0.0</span><br><span class="line">            else:</span><br><span class="line">                dop_val = (w[0] - w[1]) / denom</span><br><span class="line">                if dop_val &lt; 0:</span><br><span class="line">                    dop_val = 0.0</span><br><span class="line">                elif dop_val &gt; 1.0:</span><br><span class="line">                    dop_val = 1.0</span><br><span class="line">            DOP[ifr, it] = dop_val</span><br><span class="line"></span><br><span class="line">            if dop_val &lt; dop_thresh:</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            # horizontal azimuth from first eigenvector (v[:,0])</span><br><span class="line">            a = v[:, 0]</span><br><span class="line">            rn = a[1]</span><br><span class="line">            re = a[2]</span><br><span class="line">            az = math.degrees(math.atan2(re, rn))</span><br><span class="line">            if az &lt; 0:</span><br><span class="line">                az += 360.0</span><br><span class="line">            BAZ[ifr, it] = az</span><br><span class="line">            QUALITY[ifr, it] = 1</span><br><span class="line"></span><br><span class="line">    return DOP, BAZ, QUALITY</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ======================================================</span><br><span class="line"># DOPAnalyzer class</span><br><span class="line"># ======================================================</span><br><span class="line"></span><br><span class="line">class DOPAnalyzer:</span><br><span class="line">    def __init__(self, fs=1.0, target_freq=None, freq_band=None,</span><br><span class="line">                 dop_thresh=0.8, n_freqs=80, step=1):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Parameters:</span><br><span class="line">            fs: sampling rate</span><br><span class="line">            target_freq: center frequency (Hz)</span><br><span class="line">            freq_band: (fmin,fmax)</span><br><span class="line">            dop_thresh: threshold</span><br><span class="line">            n_freqs: number of frequency points</span><br><span class="line">            step: downsample factor for time (e.g. 5 -&gt; 5 s resolution)</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        self.fs = fs</span><br><span class="line">        self.dt = 1.0 / fs</span><br><span class="line">        self.target_freq = target_freq</span><br><span class="line">        self.freq_band = freq_band</span><br><span class="line">        self.dop_thresh = dop_thresh</span><br><span class="line">        self.n_freqs = n_freqs</span><br><span class="line">        self.step = step</span><br><span class="line"></span><br><span class="line">    def _read_triple(self, fz, fn, fe):</span><br><span class="line">        stz = read(fz)[0]</span><br><span class="line">        stn = read(fn)[0]</span><br><span class="line">        ste = read(fe)[0]</span><br><span class="line">        start = max(stz.stats.starttime, stn.stats.starttime, ste.stats.starttime)</span><br><span class="line">        end = min(stz.stats.endtime, stn.stats.endtime, ste.stats.endtime)</span><br><span class="line">        stz.trim(start, end)</span><br><span class="line">        stn.trim(start, end)</span><br><span class="line">        ste.trim(start, end)</span><br><span class="line">        return stz.data.astype(float), stn.data.astype(float), ste.data.astype(float), stz.stats</span><br><span class="line"></span><br><span class="line">    def _choose_freqs(self):</span><br><span class="line">        if self.freq_band:</span><br><span class="line">            fmin, fmax = self.freq_band</span><br><span class="line">        elif self.target_freq:</span><br><span class="line">            fmin = self.target_freq * 0.8</span><br><span class="line">            fmax = self.target_freq * 1.2</span><br><span class="line">        else:</span><br><span class="line">            fmin, fmax = 0.005, 0.25</span><br><span class="line">        freqs = np.logspace(np.log10(fmin), np.log10(fmax), self.n_freqs)</span><br><span class="line">        return freqs</span><br><span class="line"></span><br><span class="line">    def analyze_triple(self, z, n, e):</span><br><span class="line">        npts = len(z)</span><br><span class="line">        tvec = np.arange(0, npts, self.step) / self.fs</span><br><span class="line">        freqs = self._choose_freqs()</span><br><span class="line">        periods = 1.0 / freqs</span><br><span class="line"></span><br><span class="line">        cz = s_transform(z, self.fs, freqs)</span><br><span class="line">        cn = s_transform(n, self.fs, freqs)</span><br><span class="line">        ce = s_transform(e, self.fs, freqs)</span><br><span class="line"></span><br><span class="line">        # downsample in time for speed</span><br><span class="line">        cz = cz[:, ::self.step]</span><br><span class="line">        cn = cn[:, ::self.step]</span><br><span class="line">        ce = ce[:, ::self.step]</span><br><span class="line"></span><br><span class="line">        DOP, BAZ, QUALITY = compute_dop_baz(cz, cn, ce, periods, self.fs, self.dop_thresh)</span><br><span class="line"></span><br><span class="line">        return &#123;&quot;times&quot;: tvec, &quot;freqs&quot;: freqs, &quot;DOP&quot;: DOP, &quot;BAZ&quot;: BAZ, &quot;QUALITY&quot;: QUALITY&#125;</span><br><span class="line"></span><br><span class="line">    def plot_results(self, res, out_prefix=&quot;result&quot;, target_freq=None):</span><br><span class="line">        times = res[&quot;times&quot;]</span><br><span class="line">        freqs = res[&quot;freqs&quot;]</span><br><span class="line">        DOP = res[&quot;DOP&quot;]</span><br><span class="line">        BAZ = res[&quot;BAZ&quot;]</span><br><span class="line">        Q = res[&quot;QUALITY&quot;]</span><br><span class="line"></span><br><span class="line">        t_hr = times / 3600.0</span><br><span class="line"></span><br><span class="line">        plt.figure(figsize=(12, 4))</span><br><span class="line">        plt.pcolormesh(t_hr, freqs, DOP, shading=&quot;auto&quot;)</span><br><span class="line">        plt.colorbar(label=&quot;DOP&quot;)</span><br><span class="line">        plt.yscale(&quot;log&quot;)</span><br><span class="line">        plt.ylabel(&quot;Frequency (Hz)&quot;)</span><br><span class="line">        plt.xlabel(&quot;Time (hours)&quot;)</span><br><span class="line">        plt.title(&quot;DOP (S-transform)&quot;)</span><br><span class="line">        plt.tight_layout()</span><br><span class="line">        plt.savefig(out_prefix + &quot;_DOP.png&quot;, dpi=200)</span><br><span class="line"></span><br><span class="line">        plt.figure(figsize=(12, 4))</span><br><span class="line">        baz_masked = np.where(Q &gt; 0, BAZ, np.nan)</span><br><span class="line">        plt.pcolormesh(t_hr, freqs, baz_masked, shading=&quot;auto&quot;, cmap=&quot;hsv&quot;, vmin=0, vmax=360)</span><br><span class="line">        plt.colorbar(label=&quot;Back Azimuth (°)&quot;)</span><br><span class="line">        plt.yscale(&quot;log&quot;)</span><br><span class="line">        plt.ylabel(&quot;Frequency (Hz)&quot;)</span><br><span class="line">        plt.xlabel(&quot;Time (hours)&quot;)</span><br><span class="line">        plt.title(f&quot;BAZ (DOP&gt;&#123;self.dop_thresh&#125;)&quot;)</span><br><span class="line">        plt.tight_layout()</span><br><span class="line">        plt.savefig(out_prefix + &quot;_BAZ_timefreq.png&quot;, dpi=200)</span><br><span class="line"></span><br><span class="line">        if target_freq is not None:</span><br><span class="line">            idx = np.argmin(np.abs(freqs - target_freq))</span><br><span class="line">            baz_vals = BAZ[idx, Q[idx, :] &gt; 0]</span><br><span class="line">        else:</span><br><span class="line">            baz_vals = BAZ[Q &gt; 0]</span><br><span class="line"></span><br><span class="line">        plt.figure(figsize=(6, 4))</span><br><span class="line">        plt.hist(baz_vals[~np.isnan(baz_vals)], bins=np.arange(0, 361, 10))</span><br><span class="line">        plt.xlabel(&quot;Back Azimuth (°)&quot;)</span><br><span class="line">        plt.ylabel(&quot;Count&quot;)</span><br><span class="line">        plt.title(&quot;BAZ Histogram&quot;)</span><br><span class="line">        plt.tight_layout()</span><br><span class="line">        plt.savefig(out_prefix + &quot;_BAZ_hist.png&quot;, dpi=200)</span><br><span class="line">        plt.close(&quot;all&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ======================================================</span><br><span class="line"># Utility: find 3-component sets</span><br><span class="line"># ======================================================</span><br><span class="line"></span><br><span class="line">def find_triples_in_dir(sac_dir):</span><br><span class="line">    files = glob.glob(os.path.join(sac_dir, &quot;*.SAC&quot;)) + glob.glob(os.path.join(sac_dir, &quot;*.sac&quot;))</span><br><span class="line">    idx = defaultdict(dict)</span><br><span class="line">    for f in files:</span><br><span class="line">        b = os.path.basename(f)</span><br><span class="line">        up = b.upper()</span><br><span class="line">        if &quot;LHZ&quot; in up or &quot;HZ&quot; in up:</span><br><span class="line">            base = up.replace(&quot;LHZ&quot;, &quot;&quot;).replace(&quot;HZ&quot;, &quot;&quot;).strip(&quot;_&quot;)</span><br><span class="line">            idx[base][&quot;Z&quot;] = f</span><br><span class="line">        elif &quot;LHN&quot; in up or &quot;HN&quot; in up:</span><br><span class="line">            base = up.replace(&quot;LHN&quot;, &quot;&quot;).replace(&quot;HN&quot;, &quot;&quot;).strip(&quot;_&quot;)</span><br><span class="line">            idx[base][&quot;N&quot;] = f</span><br><span class="line">        elif &quot;LHE&quot; in up or &quot;HE&quot; in up:</span><br><span class="line">            base = up.replace(&quot;LHE&quot;, &quot;&quot;).replace(&quot;HE&quot;, &quot;&quot;).strip(&quot;_&quot;)</span><br><span class="line">            idx[base][&quot;E&quot;] = f</span><br><span class="line">    triples = []</span><br><span class="line">    for base, d in idx.items():</span><br><span class="line">        if all(k in d for k in (&quot;Z&quot;, &quot;N&quot;, &quot;E&quot;)):</span><br><span class="line">            triples.append((base, d[&quot;Z&quot;], d[&quot;N&quot;], d[&quot;E&quot;]))</span><br><span class="line">    return triples</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ======================================================</span><br><span class="line"># Main</span><br><span class="line"># ======================================================</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    p = argparse.ArgumentParser(description=&quot;DOP-E S-transform (paper consistent, optimized)&quot;)</span><br><span class="line">    p.add_argument(&quot;sacdir&quot;, help=&quot;Directory with 3-component SAC files&quot;)</span><br><span class="line">    p.add_argument(&quot;--target-freq&quot;, type=float, default=0.03, help=&quot;Center frequency (Hz)&quot;)</span><br><span class="line">    p.add_argument(&quot;--fmin&quot;, type=float, default=None, help=&quot;Min frequency&quot;)</span><br><span class="line">    p.add_argument(&quot;--fmax&quot;, type=float, default=None, help=&quot;Max frequency&quot;)</span><br><span class="line">    p.add_argument(&quot;--outs&quot;, default=&quot;out&quot;, help=&quot;Output prefix&quot;)</span><br><span class="line">    p.add_argument(&quot;--dop-thresh&quot;, type=float, default=0.8, help=&quot;DOP threshold&quot;)</span><br><span class="line">    p.add_argument(&quot;--n-freqs&quot;, type=int, default=60, help=&quot;Number of frequency points&quot;)</span><br><span class="line">    p.add_argument(&quot;--step&quot;, type=int, default=5, help=&quot;Downsample step for time (1 = full)&quot;)</span><br><span class="line">    args = p.parse_args()</span><br><span class="line"></span><br><span class="line">    triples = find_triples_in_dir(args.sacdir)</span><br><span class="line">    if not triples:</span><br><span class="line">        print(&quot;No 3-component SAC sets found.&quot;)</span><br><span class="line">        raise SystemExit</span><br><span class="line"></span><br><span class="line">    for base, fz, fn, fe in triples:</span><br><span class="line">        print(&quot;Processing:&quot;, base)</span><br><span class="line">        z, n, e, stats = DOPAnalyzer()._read_triple(fz, fn, fe)</span><br><span class="line">        fs = stats.sampling_rate</span><br><span class="line">        if args.fmin and args.fmax:</span><br><span class="line">            freq_band = (args.fmin, args.fmax)</span><br><span class="line">        else:</span><br><span class="line">            freq_band = None</span><br><span class="line">        analyzer = DOPAnalyzer(fs=fs,</span><br><span class="line">                               target_freq=args.target_freq,</span><br><span class="line">                               freq_band=freq_band,</span><br><span class="line">                               dop_thresh=args.dop_thresh,</span><br><span class="line">                               n_freqs=args.n_freqs,</span><br><span class="line">                               step=args.step)</span><br><span class="line">        res = analyzer.analyze_triple(z, n, e)</span><br><span class="line">        outpref = f&quot;&#123;args.outs&#125;_&#123;base&#125;&quot;</span><br><span class="line">        analyzer.plot_results(res, out_prefix=outpref, target_freq=args.target_freq)</span><br><span class="line">        print(&quot;Saved:&quot;, outpref)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>work</tag>
      </tags>
  </entry>
</search>
